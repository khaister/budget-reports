{"version":3,"sources":["localstorageUtils.js","uiRepo.js","dataUtils.js","repoUtils.js","localBudgetCache.js","ynabRepo.js","components/typeComponents.js","components/Loading.js","components/EnsureBudgetLoaded.js","styleVariables.js","components/Button.js","components/Icon.js","pages.js","components/SidebarMenuContent.js","components/SidebarMenu.js","components/PageWrapper.js","budgetUtils.js","commonHooks.js","components/Scroller.js","components/PageBreadcrumbs.js","components/PageActions.js","components/PageLayout.js","components/CollapsibleSection.js","components/Chart.js","components/CurrencyContext.js","components/Amount.js","components/ChartNumbers.js","components/SpendingChart.js","components/Modal.js","components/ChartSettingsModal.js","components/DayByDaySection.js","components/ListItem.js","components/EmptyText.js","components/NoTransactions.js","components/LabelWithMinorText.js","components/LabelWithTransactionCount.js","components/AmountWithPercentage.js","components/SeeAll.js","components/GenericEntitiesSection.js","components/DateSummaryTransaction.js","components/ToggleNode.js","components/DateSummary.js","components/RecentSpending.js","components/CurrentMonthPage.js","components/MonthlyChart.js","components/Toggle.js","components/ToggleWithLabel.js","components/MonthByMonthSettingsModal.js","components/MonthByMonthSection.js","components/IncomePage.js","components/Transaction.js","components/TransactionsSection.js","components/CurrentMonthGroupPage.js","components/CurrentMonthCategoryPage.js","components/GroupsPage.js","components/TransactionsByMonthSection.js","components/GroupPage.js","components/CategoriesState.js","components/CategoryPage.js","components/CategoryPayeePage.js","components/IncomeVsExpensesChart.js","components/BreakdownNode.js","components/Breakdown.js","components/ExpensesBreakdown.js","components/IncomeBreakdown.js","components/Breakdowns.js","components/IncomeVsExpensesPage.js","components/NetWorthChart.js","components/NetWorthAccounts.js","components/NetWorthChanges.js","components/NetWorthPage.js","components/InvestmentsPage.js","components/ProjectionsChart.js","components/ClickOff.js","components/ProjectionsSlider.js","components/ProjectionsPage.js","projectionUtils.js","components/Section.js","components/AccountsSelectionForm.js","components/SettingsInvestmentAccounts.js","components/SettingsMortgageAccounts.js","components/SettingsPage.js","components/PageContent.js","components/Unauthorized.js","components/ErrorPage.js","components/NotFound.js","components/ErrorBoundary.js","components/Budgets.js","components/App.js","index.js"],"names":["cache","getStorage","key","raw","localStorage","getItem","parsed","JSON","parse","setStorage","obj","setItem","stringify","e","SETTINGS","excludeFirstMonth","localStorageKey","default","excludeLastMonth","investmentAccounts","lastUpdated","mortgageAccounts","netWorthHiddenAccounts","spendingMonthsToCompare","trendsShowAverage","getSetting","settingsKey","budgetId","setting","Error","get","setSetting","value","previousSetting","Object","objectSpread","defineProperty","groupBy","func","arr","grouped","forEach","push","groupByProp","keyByProp","reduce","acc","curr","sumByProp","simpleMemoize","lastArgs","lastResult","_len","arguments","length","args","Array","_key","every","index","apply","notAny","predicates","arg","predicate","formatCurrency","utils","convertMilliUnitsToCurrencyAmount","GROUPS_TO_HIDE","sanitizeBudget","budget","transactionIdsFromSub","uniq","subtransactions","map","transaction","transaction_id","categoryGroups","category_groups","filter","group","includes","name","categories","category","deleted","activity","balance","budgeted","categoriesById","earliestDate","moment","subtract","MAX_MONTHS_TO_SHOW","format","currencyFormat","symbol","currency_format","currency_symbol","omit","accountsById","accounts","categoryGroupsById","payeesById","payees","months","sortBy","transactions","compose","amount","category_id","flatMap","id","subs","sub","payee_id","matchesProperty","reverse","dropWhile","date","applyDeltas","deltas","undefined","updater","prev","exists","newArr","item","concat","upsertBy","arraysToUpdate","cachedDetails","getAllBudgetDetails","setBudgetDetails","_ref","server_knowledge","details","newDetails","AUTHORIZE_URL","api","getBudgets","budgets","then","data","catch","matches","error","message","removeItem","getBudget","getBudgetById","_ref2","valueOf","authorized","getUpdatedBudget","budgetDetails","getBudgetDetails","_ref3","mergeBudgets","getDefaultBudget","default_budget","setLastLocation","window","location","hash","PageTitle","styled","div","_templateObject","LargeNumber","_templateObject2","StrongText","_templateObject3","SecondaryText","_templateObject4","MinorText","_templateObject5","Loading","react_default","a","createElement","style","height","display","flexDirection","alignItems","justifyContent","EnsureBudgetLoaded","_this$props","this","props","budgetLoaded","onRequestBudget","children","components_Loading","Component","selectedPlotBandColor","tinyColor","lighten","desaturate","toHexString","lighterPrimaryColor","lightPrimaryColor","negativeChartColor","Button","Button_templateObject","PrimaryButton","Button_templateObject2","library","add","faArrowLeft","faBars","faCaretDown","faChevronRight","faCog","faEllipsisV","faEye","faEyeSlash","faPencilAlt","faTimes","ICONS","arrow-left","bars","caret-down","chevron-right","cog","pencil","ellipsis-v","eye","eye-slash","times","PRESET_STYLES","faded","fontWeight","color","fontSize","Icon","icon","other","objectWithoutProperties","react_fontawesome_index_es","assign","makeLink","path","params","replace","_","part","pages","currentMonth","title","currentMonthGroup","categoryGroupId","paramProps","breadcrumbs","currentMonthCategory","categoryId","groups","categoryPayee","payeeId","income","incomeVsExpenses","netWorth","investments","projections","settings","Header","SidebarMenuContent_templateObject","IconWrapper","SidebarMenuContent_templateObject2","StyledLink","NavLink","SidebarMenuContent_templateObject3","active","SidebarMenuContent","onCloseSidebar","react","SidebarMenuContent_PureHeader","page","_pages$page","SidebarMenuContent_PureStyledLink","to","matchPath","onClick","PureComponent","PureHeader","_this$props2","components_Icon","react_router_dom","PureStyledLink","SidebarMenu","state","open","handleSetOpen","_this","setState","handleTriggerClick","handleCloseSidebar","react_sidebar_esm","sidebar","components_SidebarMenuContent","onSetOpen","styles","backgroundColor","width","pointerEvents","sidebarTrigger","SidebarMenu_Trigger","Trigger","alignSelf","Container","PageWrapper_templateObject","PageWrapper","onAuthorize","components_EnsureBudgetLoaded","components_SidebarMenu","PageWrapper_Container","padding","flexShrink","borderTop","mapRaw","convert","cap","isStartingBalanceOrReconciliation","startingBalancePayeeId","find","payee","reconciliationPayeeId","isIncome","toBeBudgetedId","isTransfer","transfer_account_id","getTransactionMonth","slice","rejectNonCategoryTransations","tran","getFirstMonth","filteredTransactions","last","getPayeeNodes","divideBy","pick","sanitizeName","trim","useSelectedMonth","_useState","useState","_useState2","slicedToArray","selectedMonth","setSelectedMonth","selectedMonthRef","useRef","current","month","useSelectedEntityId","_useState3","_useState4","selectedEntityId","setSelectedEntityId","entityId","useTrendsShowAverage","_useState5","_useState6","showAverage","setShowAverage","useMonthExclusions","_useState7","_useState8","setExcludeFirstMonth","_useState9","_useState10","setExcludeLastMonth","firstBudgetMonth","firstMonth","lastMonth","m","getMonths","onSetExclusion","exclude","useFlagState","initial","_useState13","_useState14","flag","setFlag","Scroller","toBeScrolled","raf","scrollPositions","scrollTop","prevProps","prevState","snapshot","_this2","action","requestAnimationFrame","cancelAnimationFrame","_this3","ref","el","routes","values","pageKey","PageBreadcrumbs","react_router","exact","render","lineHeight","whiteSpace","match","paddingBottom","PageActions","_ref4","_ref5","_ref6","PageLayout_templateObject","Body","PageLayout_templateObject2","PageLayout","historyAction","fixedContent","content","PageLayout_Header","flexGrow","components_PageBreadcrumbs","components_PageActions","components_Scroller","CollapsibleSection_templateObject","fullWidth","CollapsibleSection_templateObject2","SettingsContainer","CollapsibleSection_templateObject3","CollapsibleSection_templateObject4","CollapsibleSection","actions","hasSettings","noPadding","onClickSettings","expanded","setExpanded","CollapsibleSection_Container","CollapsibleSection_Header","transform","rotate","marginLeft","es","isExpanded","CollapsibleSection_Body","CHART_DEFAULTS","chart","spacing","credits","enabled","legend","text","subtitle","tooltip","xAxis","tickLength","Chart","options","highcharts_react_min_default","highcharts","Highcharts","CurrencyContext","React","createContext","Amount","amountAfterDecimal","expectNegative","expectPositive","showCurrencySymbol","components_CurrencyContext","Consumer","nStr","x","split","x1","x2","rgx","test","addCommas","Math","abs","toFixed","defaultProps","ChartNumbers","numbers","alwaysRound","smallNumbers","some","textAlign","marginBottom","label","_ref3$isMoney","isMoney","decimalsToRound","components_Amount","isNumber","DateLabels","SpendingChart_templateObject","getData","transactionsByDate","today","cumulative","range","daysInMonth","numDays","padCharsStart","sumBy","SpendingChart","total","highlightFunction","monthsToCompare","highlightedTransactions","highlightSeries","type","enableMouseTracking","marker","animation","lineWidth","fillOpacity","firstDate","lastDate","lineData","day","firstDayOfWeek","parseInt","plotBands","num","from","comparisonSeries","numMonths","mix","toHex","spent","takeWhile","chartNumbers","components_ChartNumbers","components_Chart","labels","yAxis","visible","endOnTick","startOnTick","series","dashStyle","toConsumableArray","Modal_templateObject","Overlay","Modal_templateObject2","ModalContent","Modal_templateObject3","ensureNextTick","callback","Modal","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleTransitionEnd","animationState","document","body","appendChild","removeChild","onClose","shouldShow","createPortal","Modal_Container","opacity","onTransitionEnd","marginTop","ChartSettingsModal","onDecrementMonths","onIncrementMonths","components_Modal","marginRight","components_Button","DayByDaySection","_useFlagState","_useFlagState2","modalOpen","onCloseModal","onOpenModal","_useMonthsToCompare","_useState11","_useState12","setMonthsToCompare","newMonths","max","min","useMonthsToCompare","components_CollapsibleSection","components_SpendingChart","components_ChartSettingsModal","ListItem","ListItem_templateObject","isContinuing","EmptyText","EmptyText_templateObject","NoTransactions","components_EmptyText","LabelWithMinorText","minorText","inLink","bold","overflow","textOverflow","LabelWithTransactionCount","count","selected","showCount","components_LabelWithMinorText","AmountWithPercentage","SeeAll","pluralizedName","showAll","onToggle","mapWithKeys","keyToPluralizedName","category_group_id","GenericEntitiesSection","allMounted","handleToggleShowAll","_this$state","emptyName","entityKey","entityFunction","entitiesById","linkFunction","limitShowingProp","limitShowing","showAverageToggle","showTransactionCount","onClickEntity","onToggleAverage","_this$state2","entities","LIMIT","topEntities","otherEntities","components_NoTransactions","GenericEntitiesSection_GenericItemLink","components_SeeAll","MaybeLink","GenericItemLink","components_ListItem","components_LabelWithTransactionCount","GenericEntitiesSection_MaybeLink","evt","stopPropagation","components_AmountWithPercentage","StyledListItem","DateSummaryTransaction_templateObject","DateSummaryTransaction","memo","NodeWrapper","ToggleNode_templateObject","isCompact","ToggleNode_templateObject2","ToggleNode","valueRenderer","ToggleNode_IconWrapper","DateSummary_templateObject","DateSummary","onToggleExpanded","DateSummary_Container","components_ToggleNode","calendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","paddingLeft","components_DateSummaryTransaction","margin","RecentSpending","recentDays","n","startsWith","components_DateSummary","CurrentMonthPage","_useSelectedEntityId","_useSelectedEntityId2","selectedGroupId","onSelectGroupId","selectedGroup","transactionsThisMonth","components_PageLayout","components_DayByDaySection","components_RecentSpending","components_GenericEntitiesSection","groupId","MonthlyChart","average","stacked","onSelectMonth","yearLines","d","highlights","zIndex","findIndex","events","click","event","round","plotLines","gridLineColor","align","y","tickPixelInterval","plotOptions","stacking","s","valueFunction","radius","borderWidth","states","hover","brightness","Track","Toggle_templateObject","HEIGHT","on","Handle","Toggle_templateObject2","WIDTH","Toggle","ToggleWithLabel_templateObject","Label","ToggleWithLabel_templateObject2","ToggleWithLabel","checked","onChange","ToggleWithLabel_Container","target","components_Toggle","MonthByMonthSettingsModal","components_ToggleWithLabel","MonthByMonthSection","settingsModalOpen","setSettingsModalOpen","selectedMonthTotal","transactionsByMonth","false","highlighted","true","components_MonthlyChart","components_MonthByMonthSettingsModal","getFilteredTransactions","getFilteredIncomeTransactions","IncomePage","_useMonthExclusions","_useSelectedMonth","_useSelectedMonth2","selectedPayeeId","onSelectPayeeId","onToggleShowAverage","transactionsInSelectedMonth","components_MonthByMonthSection","Transaction","TransactionsSection","components_Transaction","CurrentMonthGroupPage","selectedCategoryId","onSelectCategoryId","allCategories","allTransactions","selectedCategory","categoryIds","transactionsInGroup","transactionsInGroupForMonth","available","components_TransactionsSection","CurrentMonthCategoryPage","transactionsInCategory","transactionsInCategoryForMonth","GroupsPage","onSelectGroup","_useTrendsShowAverage","_useTrendsShowAverage2","transactionsForMonth","TransactionsByMonthSection","selectedPayee","topTransactions","otherTransactions","GroupPage","onSelectCategory","categoryGroup","components_TransactionsByMonthSection","INITIAL_STATE","CategoriesState","cachedStates","handleSelectMonth","handleSelectGroup","handleSelectCategory","handleSelectPayee","onSelectPayee","handleSetExclusion","CategoryPage","transactionsForCategory","CategoryPayeePage","transactionsForCategoryAndPayee","IncomeVsExpensesChart","expenses","BreakdownNode","childrenMounted","handleToggleExpand","nodes","isTopLevel","hasChildNodes","BreakdownNode_Container","BreakdownNode_LeafNode","BreakdownNode_Nodes","Nodes","node","BreakdownNode_BreakdownNode","BreakdownNode_templateObject","LeafNode","BreakdownNode_NodeWrapper","Breakdown","components_BreakdownNode","ExpensesBreakdown","totalIncome","categoryNodes","payeeNodes","groupNodes","rootPayeeNodes","components_Breakdown","IncomeBreakdown","Breakdowns","expenseTransactions","incomeTransactions","components_ExpensesBreakdown","components_IncomeBreakdown","getSummaries","IncomeVsExpensesPage","showTotals","setShowTotals","allSummaries","summaries","summary","compact","totalExpenses","denominator","components_IncomeVsExpensesChart","components_Breakdowns","CREDIT_ACCOUNTS","NetWorthChart","groupedData","getStack","monthlyData","assets","asset","liabilities","liability","AccountBreakdown","hiddenAccounts","onToggleAccounts","propEq","ids","account","NetWorthAccounts","keyBy","accountsByGroup","startCase","getNodes","NetWorthAccounts_AccountBreakdown","NetWorthChanges","accountSummaries","totals","changes","t","i","year","change","years","keys","sort","v","positiveColor","negativeColor","groupByMonthAndAccount","mapValues","identity","getSummaryByAccount","groupedTransactions","getSelectedBalances","selectedMonthIndex","eq","NetWorthPage","_useHiddenAccounts","setHiddenAccounts","onToggleHiddenAccounts","shouldHide","newHiddenAccounts","useHiddenAccounts","selectedBalances","filterHidden","omitBy","selectedLiabilities","sum","b","selectedAssets","components_NetWorthChart","constant","components_NetWorthAccounts","components_NetWorthChanges","isContribution","account_id","isCapitalGainOrLoss","InvestmentsPage","selectedBreakdown","onSelectBreakdown","investmentTransactions","isInvestmentTransaction","transactionsInMonth","contribution","capitalGain","positiveIsRed","ProjectionsChart","investmentsProjection","mortgageProjection","amountNeededToRetire","yearsUntilRetirement","floor","isDescendant","parent","child","parentNode","ClickOff","handleBodyClick","onClickOff","addEventListener","removeEventListener","bodyEl","getElementsByTagName","ProjectionsSlider_templateObject","ProjectionsSlider","formatter","onBlur","onReset","rangeOptions","components_ClickOff","ProjectionsSlider_Container","ProjectionsSlider_Range","val","Range","adjustableEntries","adjustableEntriesByName","getInitialState","mortgageAccount","lastMonthTransactions","takeRightWhile","P","P1","c","prop","r","N","log","rate","paymentsLeft","projection","pow","mortgagePayment","principalProjection","getMortgageRate","remainingMortgagePayments","returnOnInvestments","investmentAccountIds","tr","reject","startForMonth","returnRates","trs","contributions","gains","returns","totalReturn","multiply","getReturnOnInvestments","averageContribution","transferAccountId","_ref7","accountId","diff","head","getAverageContribution","currentInvestments","getCurrentInvestments","averageExpenses","_ref8","startingBalanceId","mortgageAccountIds","getAverageExpensesWithoutMortgage","retirementReturns","retirementTaxRate","maxAverageExpenses","ceil","maxAverageContribution","ProjectionsPage","handleChange","parseFloat","handleSelectAdjusting","adjustingName","handleClearSelection","handleResetCalculation","calculation","_ref9","monthlyRate","getProjection","YEARS_TO_PROJECT","monthlyRetirementReturn","remainingMortgage","projectionWithRetirement","_ref10","monthsBeforeRetirement","monthlyExpenses","getProjectionWithRetirement","hasMortgage","projectionByYear","chunk","mortgageProjectionByYear","nameToRangeOptions","step","components_ProjectionsChart","ProjectionsPage_AdjustableEntry","isAdjusting","onSelect","ProjectionsPage_Entry","components_ProjectionsSlider","AdjustableEntry","highlightValue","isAdjustable","Entry","_ref4$formatter","borderRadius","Section","Section_templateObject","top","AccountsSelectionForm","_evt$target","SectionHeader","SettingsInvestmentAccounts_templateObject","SettingsInvestmentAccounts","onUpdateAccounts","investmentModalOpen","closeInvestmentModal","openInvestmentModal","potentialInvestmentAccounts","on_budget","investmentAccountsList","components_AccountsSelectionForm","accountsObject","SettingsMortgageAccounts_templateObject","SettingsMortgageAccounts","mortgageModalOpen","closeMortgageModal","openMortgageModal","potentialMortageAccounts","mortgageAccountList","SettingsMortgageAccounts_SectionHeader","Space","SettingsPage_templateObject","SettingsPage","components_Section","components_SettingsInvestmentAccounts","components_SettingsMortgageAccounts","getFilteredSpendingTransactions","components_CurrentMonthPage","components_CurrentMonthGroupPage","components_CurrentMonthCategoryPage","components_IncomePage","components_IncomeVsExpensesPage","components_NetWorthPage","components_InvestmentsPage","components_ProjectionsPage","components_SettingsPage","components_CategoriesState","components_GroupsPage","components_GroupPage","components_CategoryPage","components_CategoryPayeePage","nextProps","Unauthorized","ErrorPage_templateObject","ErrorPage","ErrorPage_Container","NotFound","components_ErrorPage","ErrorBoundary","hasError","Rollbar","token","Budgets","budgetsLoaded","onRequestBudgets","App","budgetIds","defaultBudget","handleRequestBudgets","handleRequestBudget","handleAuthorize","hasToken","components_ErrorBoundary","components_Budgets","history","components_PageWrapper","pathname","Provider","components_PageContent","forceUpdate","component","components_Unauthorized","search","substring","decodeURIComponent","getAuthorizeToken","ynab","ReactDOM","components_App","getElementById"],"mappings":"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","file":"static/js/main.db642480.chunk.js","sourcesContent":["const cache = {};\n\nexport const getStorage = key => {\n  if (cache[key]) {\n    return cache[key];\n  }\n  const raw = localStorage.getItem(key);\n  if (raw) {\n    const parsed = JSON.parse(raw);\n    cache[key] = parsed;\n    return parsed;\n  }\n  return null;\n};\n\nexport const setStorage = (key, obj) => {\n  delete cache[key];\n\n  try {\n    localStorage.setItem(key, JSON.stringify(obj));\n  } catch (e) {\n    // Most likely exceeds storage quota\n  }\n};\n","import { getStorage, setStorage } from \"./localstorageUtils\";\nimport get from \"lodash/get\";\n\nconst SETTINGS = {\n  excludeFirstMonth: {\n    localStorageKey: \"budget-reports-exclude-first-month\",\n    default: false\n  },\n  excludeLastMonth: {\n    localStorageKey: \"budget-reports-exclude-last-month\",\n    default: false\n  },\n  investmentAccounts: {\n    localStorageKey: \"budget-reports-investment-accounts\",\n    default: {}\n  },\n  lastUpdated: {\n    localStorageKey: \"budget-reports-last-updated\",\n    default: null\n  },\n  mortgageAccounts: {\n    localStorageKey: \"budget-reports-mortgage-accounts\",\n    default: {}\n  },\n  netWorthHiddenAccounts: {\n    localStorageKey: \"budget-reports-networth-hidden-accounts\",\n    default: {}\n  },\n  spendingMonthsToCompare: {\n    localStorageKey: \"budget-reports-spending-months-to-compare\",\n    default: 3\n  },\n  trendsShowAverage: {\n    localStorageKey: \"budget-reports-trends-show-average\",\n    default: true\n  }\n};\n\nexport const getSetting = (settingsKey, budgetId) => {\n  const setting = SETTINGS[settingsKey];\n\n  if (!setting) {\n    throw new Error(\"not a valid settings key\");\n  }\n\n  return get(getStorage(setting.localStorageKey), budgetId, setting.default);\n};\n\nexport const setSetting = (settingsKey, budgetId, value) => {\n  const setting = SETTINGS[settingsKey];\n\n  if (!setting) {\n    throw new Error(\"not a valid settings key\");\n  }\n\n  const previousSetting = getStorage(setting.localStorageKey);\n\n  setStorage(setting.localStorageKey, {\n    ...previousSetting,\n    [budgetId]: value\n  });\n};\n","export const groupBy = func => arr => {\n  const grouped = {};\n  arr.forEach(obj => {\n    const key = func(obj);\n    if (!grouped[key]) {\n      grouped[key] = [];\n    }\n    grouped[key].push(obj);\n  });\n  return grouped;\n};\n\nexport const groupByProp = key => arr => {\n  const grouped = {};\n  arr.forEach(obj => {\n    if (!grouped[obj[key]]) {\n      grouped[obj[key]] = [];\n    }\n    grouped[obj[key]].push(obj);\n  });\n  return grouped;\n};\n\nexport const keyByProp = key => arr =>\n  arr.reduce((acc, curr) => ({ ...acc, [curr[key]]: curr }), {});\n\nexport const sumBy = func => arr =>\n  arr.reduce((acc, curr) => acc + func(curr), 0);\n\nexport const sumByProp = key => arr =>\n  arr.reduce((acc, curr) => acc + curr[key], 0);\n\nexport const simpleMemoize = func => {\n  let lastArgs = null;\n  let lastResult = null;\n  return (...args) => {\n    if (\n      lastArgs !== null &&\n      lastArgs.length === args.length &&\n      args.every((value, index) => value === lastArgs[index])\n    ) {\n      return lastResult;\n    }\n    lastArgs = args;\n    lastResult = func(...args);\n    return lastResult;\n  };\n};\n\nexport const notAny = predicates => arg =>\n  predicates.every(predicate => !predicate(arg));\n\nexport const upsertBy = (arr, key, obj, updater = (prev, curr) => curr) => {\n  let exists = false;\n  const newArr = arr.map(item => {\n    if (item[key] === obj[key]) {\n      exists = true;\n      return updater(item, obj);\n    }\n    return item;\n  });\n  return exists ? newArr : newArr.concat(obj);\n};\n","import { utils } from \"ynab\";\nimport moment from \"moment\";\nimport compose from \"lodash/fp/compose\";\nimport flatMap from \"lodash/fp/flatMap\";\nimport dropWhile from \"lodash/fp/dropWhile\";\nimport matchesProperty from \"lodash/fp/matchesProperty\";\nimport omit from \"lodash/fp/omit\";\nimport reverse from \"lodash/fp/reverse\";\nimport sortBy from \"lodash/fp/sortBy\";\nimport uniq from \"lodash/fp/uniq\";\nimport { upsertBy, keyByProp } from \"./dataUtils\";\n\nconst formatCurrency = utils.convertMilliUnitsToCurrencyAmount;\n\nconst GROUPS_TO_HIDE = [\"Internal Master Category\", \"Credit Card Payments\"];\n\nconst MAX_MONTHS_TO_SHOW = 240;\n\nexport const sanitizeBudget = budget => {\n  const transactionIdsFromSub = uniq(\n    budget.subtransactions.map(transaction => transaction.transaction_id)\n  );\n  const categoryGroups = budget.category_groups.filter(\n    group => !GROUPS_TO_HIDE.includes(group.name)\n  );\n  const categories = budget.categories\n    .filter(category => !category.deleted)\n    .map(category => ({\n      ...category,\n      activity: formatCurrency(category.activity),\n      balance: formatCurrency(category.balance),\n      budgeted: formatCurrency(category.budgeted)\n    }));\n  const categoriesById = keyByProp(\"id\")(categories);\n  const earliestDate = moment()\n    .subtract(MAX_MONTHS_TO_SHOW - 1, \"months\")\n    .format(\"YYYY-MM-01\");\n  const currencyFormat = {\n    symbol: budget.currency_format.currency_symbol\n  };\n\n  return {\n    ...omit([\"category_groups\", \"currency_format\"])(budget),\n    accountsById: keyByProp(\"id\")(budget.accounts),\n    categoryGroups,\n    categoryGroupsById: keyByProp(\"id\")(categoryGroups),\n    categories,\n    categoriesById,\n    currencyFormat,\n    payeesById: keyByProp(\"id\")(budget.payees),\n    months: sortBy(\"month\")(budget.months),\n    transactions: compose([\n      transactions =>\n        transactions.map(transaction => ({\n          ...transaction,\n          amount: formatCurrency(transaction.amount)\n        })),\n      // Not sure how this would happen, but seeing it in production\n      transactions =>\n        transactions.filter(\n          transaction =>\n            !transaction.category_id ||\n            !!categoriesById[transaction.category_id]\n        ),\n      flatMap(transaction =>\n        transactionIdsFromSub.includes(transaction.id)\n          ? compose([\n              subs =>\n                subs.map(sub =>\n                  omit(\"transaction_id\")({\n                    ...transaction,\n                    ...sub,\n                    payee_id: sub.payee_id || transaction.payee_id\n                  })\n                ),\n              subs =>\n                subs.filter(matchesProperty(\"transaction_id\", transaction.id))\n            ])(budget.subtransactions)\n          : transaction\n      ),\n      reverse,\n      dropWhile(transaction => transaction.date < earliestDate),\n      sortBy(\"date\"),\n      transactions =>\n        transactions.filter(\n          transaction => transaction.amount !== 0 && !transaction.deleted\n        )\n    ])(budget.transactions)\n  };\n};\n\nconst applyDeltas = (arr, deltas, key = \"id\", updater) =>\n  deltas.reduce((acc, curr) => upsertBy(acc, key, curr, updater), arr);\n\nconst arraysToUpdate = [\n  \"accounts\",\n  \"categories\",\n  \"category_groups\",\n  \"payee_locations\",\n  \"payees\",\n  \"scheduled_subtransactions\",\n  \"scheduled_transactions\",\n  \"subtransactions\",\n  \"transactions\"\n];\n\nexport const mergeBudgets = (budget, deltas) => ({\n  ...budget,\n  ...deltas,\n  ...arraysToUpdate.reduce(\n    (acc, curr) => ({\n      ...acc,\n      [curr]: applyDeltas(budget[curr], deltas[curr])\n    }),\n    {}\n  ),\n  months: applyDeltas(budget.months, deltas.months, \"month\", (prev, curr) => ({\n    ...prev,\n    ...curr,\n    categories: applyDeltas(prev.categories, curr.categories)\n  }))\n});\n","import get from \"lodash/fp/get\";\nimport { getStorage, setStorage } from \"./localstorageUtils\";\n\nconst BUDGET_DETAILS_STORAGE_KEY = \"ynab_budget_details\";\n\nlet cachedDetails = null;\n\nconst getAllBudgetDetails = () => {\n  if (cachedDetails) {\n    return cachedDetails;\n  }\n  cachedDetails = getStorage(BUDGET_DETAILS_STORAGE_KEY);\n  return cachedDetails;\n};\n\nexport const getBudgetDetails = id => get(id)(getAllBudgetDetails());\n\nexport const setBudgetDetails = ({ id, budget, server_knowledge }) => {\n  const details = getAllBudgetDetails();\n  const newDetails = {\n    ...details,\n    [id]: { budget, server_knowledge }\n  };\n  setStorage(BUDGET_DETAILS_STORAGE_KEY, newDetails);\n  cachedDetails = newDetails;\n};\n","import * as ynab from \"ynab\";\r\nimport moment from \"moment\";\r\nimport get from \"lodash/fp/get\";\r\nimport matches from \"lodash/fp/matches\";\r\nimport { getStorage, setStorage } from \"./localstorageUtils\";\r\nimport { setSetting, getSetting } from \"./uiRepo\";\r\nimport { sanitizeBudget, mergeBudgets } from \"./repoUtils\";\r\nimport { getBudgetDetails, setBudgetDetails } from \"./localBudgetCache\";\r\nimport { clientId, redirectUri } from \"./ynabConfig\";\r\n\r\nconst TOKEN_STORAGE_KEY = \"ynab_access_token\";\r\nconst BUDGETS_STORAGE_KEY = \"ynab_budgets\";\r\nconst LAST_LOCATION_KEY = \"budget-reports-last-location\";\r\n\r\nconst TIME_LIMIT_FOR_FULL_REFRESH = 8 * 1000;\r\n\r\nexport const AUTHORIZE_URL =\r\n  \"https://api.youneedabudget.com/oauth/authorize?client_id=\" +\r\n  clientId +\r\n  \"&redirect_uri=\" +\r\n  redirectUri +\r\n  \"&response_type=token\" +\r\n  \"&scope=read-only\";\r\n\r\nexport const getAuthorizeToken = () => {\r\n  // check for hash route\r\n  if (window.location.hash[1] === \"/\") {\r\n    return localStorage.getItem(TOKEN_STORAGE_KEY);\r\n  }\r\n\r\n  const search = window.location.hash\r\n    .substring(1)\r\n    .replace(/&/g, '\",\"')\r\n    .replace(/=/g, '\":\"');\r\n\r\n  if (!search) {\r\n    return localStorage.getItem(TOKEN_STORAGE_KEY);\r\n  }\r\n\r\n  const token = get(\"access_token\")(\r\n    JSON.parse(\r\n      '{\"' + search + '\"}',\r\n      (key, value) => (key === \"\" ? value : decodeURIComponent(value))\r\n    )\r\n  );\r\n  localStorage.setItem(TOKEN_STORAGE_KEY, token);\r\n  window.location.hash = localStorage.getItem(LAST_LOCATION_KEY) || \"\";\r\n  localStorage.removeItem(LAST_LOCATION_KEY);\r\n\r\n  return token;\r\n};\r\n\r\nlet api = null;\r\n\r\nexport const initializeYnabApi = token => {\r\n  api = new ynab.api(token);\r\n};\r\n\r\nexport const getBudgets = () =>\r\n  api.budgets\r\n    .getBudgets()\r\n    .then(({ data }) => {\r\n      setStorage(BUDGETS_STORAGE_KEY, data);\r\n      return data;\r\n    })\r\n    .catch(e => {\r\n      if (\r\n        matches({\r\n          id: \"401\",\r\n          name: \"unauthorized\"\r\n        })(e.error) ||\r\n        e.message === \"Failed to fetch\"\r\n      ) {\r\n        localStorage.removeItem(TOKEN_STORAGE_KEY);\r\n        return getStorage(BUDGETS_STORAGE_KEY) || { budgets: [] };\r\n      }\r\n\r\n      throw e;\r\n    });\r\n\r\nconst getBudget = id =>\r\n  api.budgets\r\n    .getBudgetById(id)\r\n    .then(({ data }) => {\r\n      const { budget, server_knowledge } = data;\r\n\r\n      setBudgetDetails({ id, budget, server_knowledge });\r\n      setSetting(\"lastUpdated\", id, moment().valueOf());\r\n\r\n      return { budget: sanitizeBudget(budget), authorized: true };\r\n    })\r\n    .catch(e => {\r\n      if (\r\n        matches({ id: \"401\", name: \"unauthorized\" })(e.error) ||\r\n        e.message === \"Failed to fetch\"\r\n      ) {\r\n        localStorage.removeItem(TOKEN_STORAGE_KEY);\r\n        return {\r\n          budget: { categories: [], transactions: [], payees: [] },\r\n          authorized: false\r\n        };\r\n      }\r\n\r\n      throw e;\r\n    });\r\n\r\nexport const getUpdatedBudget = id => {\r\n  const budgetDetails = getBudgetDetails(id);\r\n\r\n  if (!budgetDetails) {\r\n    return getBudget(id);\r\n  }\r\n\r\n  if (\r\n    moment().valueOf() - getSetting(\"lastUpdated\", id) <\r\n    TIME_LIMIT_FOR_FULL_REFRESH\r\n  ) {\r\n    return getBudget(id);\r\n  }\r\n\r\n  return api.budgets\r\n    .getBudgetById(id, budgetDetails.server_knowledge)\r\n    .then(({ data }) => {\r\n      try {\r\n        const budget = mergeBudgets(budgetDetails.budget, data.budget);\r\n\r\n        setBudgetDetails({ id, budget, server_knowledge: data.server_knowledge });\r\n        setSetting(\"lastUpdated\", id, moment().valueOf());\r\n\r\n        return { budget: sanitizeBudget(budget), authorized: true };\r\n      } catch (e) {\r\n        return getBudget(id);\r\n      }\r\n    })\r\n    .catch(e => {\r\n      if (\r\n        matches({ id: \"401\", name: \"unauthorized\" })(e.error) ||\r\n        e.message === \"Failed to fetch\"\r\n      ) {\r\n        return {\r\n          budget: sanitizeBudget(budgetDetails.budget),\r\n          authorized: false\r\n        };\r\n      }\r\n\r\n      throw e;\r\n    });\r\n};\r\n\r\nexport const getDefaultBudget = () => {\r\n  const data = getStorage(BUDGETS_STORAGE_KEY);\r\n  return data && data.default_budget;\r\n}\r\n\r\nexport const setLastLocation = () => {\r\n  localStorage.setItem(LAST_LOCATION_KEY, window.location.hash);\r\n};\r\n","import styled from \"styled-components\";\n\nexport const PageTitle = styled.div`\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 24px;\n  color: #222;\n`;\n\nexport const LargeNumber = styled.div`\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 24px;\n  color: #222;\n`;\n\nexport const StrongText = styled.div`\n  font-size: 14px;\n  line-height: 22px;\n  font-weight: 500;\n  color: #222;\n`;\n\nexport const SecondaryText = styled.div`\n  font-size: 13px;\n  line-height: 21px;\n  font-weight: 400;\n  color: #666;\n`;\n\nexport const MinorText = styled.div`\n  font-size: 11px;\n  line-height: 16px;\n  font-weight: 400;\n  color: #999;\n`;\n","import React from \"react\";\nimport { StrongText, SecondaryText } from \"./typeComponents\";\n\nconst Loading = () => (\n  <div\n    style={{\n      height: \"100vh\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    }}\n  >\n    <StrongText>Loading&hellip;</StrongText>\n    <SecondaryText>beep, beep, boop</SecondaryText>\n  </div>\n);\n\nLoading.propTypes = {};\n\nexport default Loading;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Loading from \"./Loading\";\n\nclass EnsureBudgetLoaded extends Component {\n  static propTypes = {\n    budgetId: PropTypes.string.isRequired,\n    budgetLoaded: PropTypes.bool.isRequired,\n    children: PropTypes.node.isRequired,\n    onRequestBudget: PropTypes.func.isRequired\n  };\n\n  componentDidMount() {\n    const { budgetId, budgetLoaded, onRequestBudget } = this.props;\n\n    if (!budgetLoaded) {\n      onRequestBudget(budgetId);\n    }\n  }\n\n  render() {\n    if (!this.props.budgetLoaded) {\n      return <Loading />\n    }\n\n    return this.props.children;\n  }\n}\n\nexport default EnsureBudgetLoaded;\n","import tinyColor from \"tinycolor2\";\n\nexport const primaryColor = \"#4399ff\";\nexport const positiveColor = \"#2cbc2f\";\nexport const plotBandColor = \"#f2f2f2\";\nexport const negativeColor = \"red\";\nexport const selectedPlotBandColor = tinyColor(primaryColor)\n  .lighten(32)\n  .desaturate()\n  .toHexString();\nexport const lighterPrimaryColor = tinyColor(primaryColor)\n  .lighten(5)\n  .desaturate()\n  .toHexString();\nexport const lightPrimaryColor = tinyColor(primaryColor)\n  .lighten(25)\n  .desaturate()\n  .toHexString();\nexport const negativeChartColor = tinyColor(negativeColor)\n  .lighten(30)\n  .desaturate(60)\n  .toHexString();\n\nexport const iconWidth = 60;\n","import styled from \"styled-components\";\nimport { SecondaryText } from \"./typeComponents\";\nimport { primaryColor } from \"../styleVariables\";\n\nconst Button = styled(SecondaryText)`\n  display: inline-block;\n  user-select: none;\n  border: 1px solid #ccc;\n  padding: 4px 12px;\n  border-radius: 2px;\n\n  & + & {\n    margin-left: 5px;\n  }\n`;\n\nexport const PrimaryButton = styled(Button)`\n  background-color: ${primaryColor};\n  border-color: ${primaryColor};\n  color: #fff;\n`;\n\nexport default Button;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport keys from \"lodash/fp/keys\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { faArrowLeft } from \"@fortawesome/free-solid-svg-icons/faArrowLeft\";\nimport { faBars } from \"@fortawesome/free-solid-svg-icons/faBars\";\nimport { faCaretDown } from \"@fortawesome/free-solid-svg-icons/faCaretDown\";\nimport { faChevronRight } from \"@fortawesome/free-solid-svg-icons/faChevronRight\";\nimport { faCog } from \"@fortawesome/free-solid-svg-icons/faCog\";\nimport { faEllipsisV } from \"@fortawesome/free-solid-svg-icons/faEllipsisV\";\nimport { faEye } from \"@fortawesome/free-solid-svg-icons/faEye\";\nimport { faEyeSlash } from \"@fortawesome/free-solid-svg-icons/faEyeSlash\";\nimport { faPencilAlt } from \"@fortawesome/free-solid-svg-icons/faPencilAlt\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons/faTimes\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nlibrary.add(\n  faArrowLeft,\n  faBars,\n  faCaretDown,\n  faChevronRight,\n  faCog,\n  faEllipsisV,\n  faEye,\n  faEyeSlash,\n  faPencilAlt,\n  faTimes\n);\n\nconst ICONS = {\n  \"arrow-left\": faArrowLeft,\n  bars: faBars,\n  \"caret-down\": faCaretDown,\n  \"chevron-right\": faChevronRight,\n  cog: faCog,\n  pencil: faPencilAlt,\n  \"ellipsis-v\": faEllipsisV,\n  eye: faEye,\n  \"eye-slash\": faEyeSlash,\n  times: faTimes\n};\n\nconst PRESET_STYLES = {\n  faded: {\n    fontWeight: 400,\n    color: \"#aaa\",\n    fontSize: 10\n  }\n};\n\nconst Icon = ({ icon, style, faded, ...other }) => (\n  <FontAwesomeIcon\n    {...other}\n    icon={ICONS[icon]}\n    style={{ ...style, ...(faded && PRESET_STYLES.faded) }}\n  />\n);\n\nIcon.propTypes = {\n  icon: PropTypes.oneOf(keys(ICONS)).isRequired,\n  faded: PropTypes.bool\n};\n\nexport default Icon;\n","import get from \"lodash/fp/get\";\n\nexport const makeLink = (path, params) =>\n  path.replace(/:([a-zA-Z]*)/g, (_, part) => params[part]);\n\nconst pages = {\n  currentMonth: {\n    path: \"/budgets/:budgetId/current\",\n    title: \"Current Month Spending\",\n    props: [\"budget\", \"currentMonth\", \"investmentAccounts\"]\n  },\n  currentMonthGroup: {\n    path: \"/budgets/:budgetId/current/:categoryGroupId\",\n    title: (params, budget) =>\n      budget.categoryGroupsById[params.categoryGroupId].name,\n    props: [\"budget\", \"currentMonth\"],\n    paramProps: [\"categoryGroupId\"],\n    breadcrumbs: [\"currentMonth\"]\n  },\n  currentMonthCategory: {\n    path: \"/budgets/:budgetId/current/:categoryGroupId/:categoryId\",\n    title: (params, budget) => budget.categoriesById[params.categoryId].name,\n    props: [\"budget\", \"currentMonth\"],\n    paramProps: [\"categoryId\", \"categoryGroupId\"],\n    breadcrumbs: [\"currentMonth\", \"currentMonthGroup\"]\n  },\n  groups: {\n    path: \"/budgets/:budgetId/groups\",\n    title: \"Spending Trends\",\n    props: [\"budget\"]\n  },\n  group: {\n    path: \"/budgets/:budgetId/groups/:categoryGroupId\",\n    title: (params, budget) =>\n      budget.categoryGroupsById[params.categoryGroupId].name,\n    props: [\"budget\"],\n    paramProps: [\"categoryGroupId\"],\n    breadcrumbs: [\"groups\"]\n  },\n  category: {\n    path: \"/budgets/:budgetId/groups/:categoryGroupId/categories/:categoryId\",\n    title: (params, budget) => budget.categoriesById[params.categoryId].name,\n    props: [\"budget\"],\n    paramProps: [\"categoryId\"],\n    breadcrumbs: [\"groups\", \"group\"]\n  },\n  categoryPayee: {\n    path:\n      \"/budgets/:budgetId/groups/:categoryGroupId/categories/:categoryId/payees/:payeeId\",\n    title: (params, budget) =>\n      get([\"payeesById\", params.payeeId, \"name\"], budget) || \"Payee Not Found\",\n    props: [\"budget\"],\n    paramProps: [\"categoryId\", \"payeeId\"],\n    breadcrumbs: [\"groups\", \"group\", \"category\"]\n  },\n  income: {\n    path: \"/budgets/:budgetId/income\",\n    title: \"Income Trends\",\n    props: [\"budget\"]\n  },\n  incomeVsExpenses: {\n    path: \"/budgets/:budgetId/income-vs-expenses\",\n    title: \"Income vs Expenses\",\n    props: [\"budget\", \"investmentAccounts\"]\n  },\n  netWorth: {\n    path: \"/budgets/:budgetId/net-worth\",\n    title: \"Net Worth\",\n    props: [\"budget\", \"investmentAccounts\", \"mortgageAccounts\"]\n  },\n  investments: {\n    path: \"/budgets/:budgetId/investments\",\n    title: \"Investments\",\n    props: [\"budget\", \"investmentAccounts\"]\n  },\n  projections: {\n    path: \"/budgets/:budgetId/projections\",\n    title: \"Retirement Calculator\",\n    props: [\"budget\", \"investmentAccounts\", \"mortgageAccounts\"]\n  },\n  settings: {\n    path: \"/budgets/:budgetId/settings\",\n    title: \"Budget Settings\",\n    props: [\n      \"budget\",\n      \"investmentAccounts\",\n      \"mortgageAccounts\",\n      \"onUpdateAccounts\"\n    ]\n  }\n};\n\nexport default pages;\n","import React, { Fragment, PureComponent } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport { matchPath } from \"react-router\";\r\nimport styled from \"styled-components\";\r\nimport pages, { makeLink } from \"../pages\";\r\nimport Icon from \"./Icon\";\r\nimport { selectedPlotBandColor, iconWidth } from \"../styleVariables\";\r\n\r\nconst Header = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: stretch;\r\n  height: 60px;\r\n`;\r\n\r\nconst IconWrapper = styled.div`\r\n  width: ${iconWidth}px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst StyledLink = styled(NavLink)`\r\n  color: inherit;\r\n  display: flex;\r\n  align-items: center;\r\n  height: 60px;\r\n  padding: 0 20px;\r\n  background-color: ${props => props.active && selectedPlotBandColor};\r\n`;\r\n\r\nclass SidebarMenuContent extends PureComponent {\r\n  static propTypes = {\r\n    budgetId: PropTypes.string.isRequired,\r\n    location: PropTypes.string.isRequired,\r\n    onCloseSidebar: PropTypes.func.isRequired\r\n  };\r\n\r\n  render() {\r\n    const { budgetId, location, onCloseSidebar } = this.props;\r\n\r\n    return (\r\n      <Fragment>\r\n        <PureHeader onCloseSidebar={onCloseSidebar} budgetId={budgetId} />\r\n        {[\r\n          \"currentMonth\",\r\n          \"groups\",\r\n          \"income\",\r\n          \"incomeVsExpenses\",\r\n          \"netWorth\",\r\n          \"investments\",\r\n          \"projections\"\r\n        ].map(page => {\r\n          const { path, title } = pages[page];\r\n\r\n          return (\r\n            <PureStyledLink\r\n              key={path}\r\n              to={makeLink(path, { budgetId })}\r\n              active={matchPath(location, { path })}\r\n              onClick={onCloseSidebar}\r\n            >\r\n              {title}\r\n            </PureStyledLink>\r\n          );\r\n        })}\r\n        {(\r\n          <PureStyledLink to=\"/budgets\">Switch Budgets</PureStyledLink>\r\n        )}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nclass PureHeader extends PureComponent {\r\n  render() {\r\n    const { onCloseSidebar, budgetId } = this.props;\r\n    return (\r\n      <Header>\r\n        <IconWrapper onClick={onCloseSidebar}>\r\n          <Icon icon=\"times\" />\r\n        </IconWrapper>\r\n        <Link\r\n          to={makeLink(pages.settings.path, { budgetId })}\r\n          style={{ display: \"flex\", color: \"inherit\" }}\r\n          onClick={onCloseSidebar}\r\n        >\r\n          <IconWrapper>\r\n            <Icon icon=\"cog\" />\r\n          </IconWrapper>\r\n        </Link>\r\n      </Header>\r\n    );\r\n  }\r\n}\r\n\r\nclass PureStyledLink extends PureComponent {\r\n  render() {\r\n    return <StyledLink {...this.props} />;\r\n  }\r\n}\r\n\r\nexport default SidebarMenuContent;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Sidebar from \"react-sidebar\";\r\nimport { iconWidth } from \"../styleVariables\";\r\nimport Icon from \"./Icon\";\r\nimport SidebarMenuContent from \"./SidebarMenuContent\";\r\n\r\nclass SidebarMenu extends Component {\r\n  static propTypes = {\r\n    budgetId: PropTypes.string.isRequired,\r\n    children: PropTypes.func.isRequired,\r\n    location: PropTypes.string.isRequired\r\n  };\r\n\r\n  state = { open: false };\r\n\r\n  handleSetOpen = open => {\r\n    this.setState({ open });\r\n  };\r\n\r\n  handleTriggerClick = () => {\r\n    this.setState({ open: true });\r\n  };\r\n\r\n  handleCloseSidebar = () => {\r\n    this.setState({ open: false });\r\n  };\r\n\r\n  render() {\r\n    const { budgetId, children, location } = this.props;\r\n    const { open } = this.state;\r\n\r\n    return (\r\n      <Sidebar\r\n        sidebar={\r\n          <SidebarMenuContent\r\n            budgetId={budgetId}\r\n            location={location}\r\n            onCloseSidebar={this.handleCloseSidebar}\r\n          />\r\n        }\r\n        open={open}\r\n        onSetOpen={this.handleSetOpen}\r\n        styles={{\r\n          sidebar: {\r\n            backgroundColor: \"#fff\",\r\n            width: 280,\r\n            pointerEvents: !open && \"none\"\r\n          }\r\n        }}\r\n      >\r\n        {children({\r\n          sidebarTrigger: <Trigger onClick={this.handleTriggerClick} />\r\n        })}\r\n      </Sidebar>\r\n    );\r\n  }\r\n}\r\n\r\nconst Trigger = ({ onClick }) => (\r\n  <div\r\n    onClick={onClick}\r\n    style={{\r\n      alignSelf: \"stretch\",\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"center\",\r\n      width: iconWidth\r\n    }}\r\n  >\r\n    <Icon icon=\"bars\" />\r\n  </div>\r\n);\r\n\r\nexport default SidebarMenu;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport EnsureBudgetLoaded from \"./EnsureBudgetLoaded\";\r\nimport { PrimaryButton } from \"./Button\";\r\nimport SidebarMenu from \"./SidebarMenu\";\r\n\r\nconst Container = styled.div`\r\n  height: 100%;\r\n  overflow: hidden;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst PageWrapper = ({\r\n  authorized,\r\n  budgetId,\r\n  budgetLoaded,\r\n  children,\r\n  location,\r\n  onAuthorize,\r\n  onRequestBudget\r\n}) => (\r\n  <EnsureBudgetLoaded\r\n    budgetId={budgetId}\r\n    budgetLoaded={budgetLoaded}\r\n    onRequestBudget={onRequestBudget}\r\n  >\r\n    <SidebarMenu\r\n      budgetId={budgetId}\r\n      location={location}\r\n    >\r\n      {({ sidebarTrigger }) => (\r\n        <Container>\r\n          {children({ sidebarTrigger })}\r\n          {!authorized && (\r\n            <div\r\n              style={{\r\n                padding: \"15px 20px\",\r\n                backgroundColor: \"#fff\",\r\n                display: \"flex\",\r\n                justifyContent: \"space-between\",\r\n                alignItems: \"center\",\r\n                flexShrink: 0,\r\n                borderTop: \"1px solid #ccc\"\r\n              }}\r\n            >\r\n              Your authorization expired.\r\n              <PrimaryButton onClick={onAuthorize}>Reauthorize</PrimaryButton>\r\n            </div>\r\n          )}\r\n        </Container>\r\n      )}\r\n    </SidebarMenu>\r\n  </EnsureBudgetLoaded>\r\n);\r\n\r\nPageWrapper.propTypes = {\r\n  authorized: PropTypes.bool.isRequired,\r\n  budgetId: PropTypes.string.isRequired,\r\n  budgetLoaded: PropTypes.bool.isRequired,\r\n  children: PropTypes.func.isRequired,\r\n  location: PropTypes.string.isRequired,\r\n  onAuthorize: PropTypes.func.isRequired,\r\n  onRequestBudget: PropTypes.func.isRequired\r\n};\r\n\r\nexport default PageWrapper;\r\n","import compose from \"lodash/fp/compose\";\nimport pick from \"lodash/fp/pick\";\nimport mapRaw from \"lodash/fp/map\";\nimport get from \"lodash/fp/get\";\nimport last from \"lodash/fp/last\";\nimport { groupByProp, simpleMemoize, sumByProp } from \"./dataUtils\";\n\nconst map = mapRaw.convert({ cap: false });\n\nexport const isStartingBalanceOrReconciliation = simpleMemoize(budget => {\n  const startingBalancePayeeId = get(\"id\")(\n    budget.payees.find(payee => payee.name === \"Starting Balance\")\n  );\n  const reconciliationPayeeId = get(\"id\")(\n    budget.payees.find(\n      payee => payee.name === \"Reconciliation Balance Adjustment\"\n    )\n  );\n\n  return transaction =>\n    transaction.payee_id === startingBalancePayeeId ||\n    transaction.payee_id === reconciliationPayeeId;\n});\n\nexport const isIncome = simpleMemoize(budget => {\n  const toBeBudgetedId = get(\"id\")(\n    budget.categories.find(category => category.name === \"To be Budgeted\")\n  );\n  return transaction => transaction.category_id === toBeBudgetedId;\n});\n\nexport const isTransfer = (investmentAccounts = {}) => transaction =>\n  !transaction.category_id ||\n  !!investmentAccounts[transaction.transfer_account_id];\n\nexport const getTransactionMonth = transaction => transaction.date.slice(0, 7);\n\nconst rejectNonCategoryTransations = simpleMemoize(transactions =>\n  transactions.filter(tran => !!tran.category_id)\n);\n\nexport const getFirstMonth = budget => {\n  const filteredTransactions = rejectNonCategoryTransations(\n    budget.transactions\n  );\n\n  return filteredTransactions.length\n    ? getTransactionMonth(last(filteredTransactions))\n    : undefined;\n};\n\nexport const getPayeeNodes = ({ payeesById, transactions }, divideBy = 1) =>\n  compose([\n    map((transactions, payeeId) => ({\n      ...(payeesById[payeeId]\n        ? pick([\"id\", \"name\"])(payeesById[payeeId])\n        : { id: \"no-payee\", name: \"(no payee)\" }),\n      amount: sumByProp(\"amount\")(transactions) / divideBy\n    })),\n    groupByProp(\"payee_id\")\n  ])(transactions);\n\nexport const sanitizeName = name => name.replace(/[^a-zA-Z0-9 ]/g, \"\").trim();\n","import { useRef, useState } from \"react\";\nimport moment from \"moment\";\nimport { getSetting, setSetting } from \"./uiRepo\";\nimport { getFirstMonth } from \"./budgetUtils\";\n\nconst MAX_MONTHS_TO_COMPARE = 12;\n\nexport const useSelectedMonth = () => {\n  const [selectedMonth, setSelectedMonth] = useState(null);\n  const selectedMonthRef = useRef(selectedMonth);\n  selectedMonthRef.current = selectedMonth;\n\n  const onSelectMonth = month => {\n    setSelectedMonth(month === selectedMonthRef.current ? null : month);\n  };\n\n  return [selectedMonth, onSelectMonth];\n};\n\nexport const useSelectedEntityId = () => {\n  const [selectedEntityId, setSelectedEntityId] = useState(null);\n  const onSelectEntityId = entityId => {\n    setSelectedEntityId(entityId === selectedEntityId ? null : entityId);\n  };\n\n  return [selectedEntityId, onSelectEntityId];\n};\n\nexport const useTrendsShowAverage = budgetId => {\n  const [showAverage, setShowAverage] = useState(\n    getSetting(\"trendsShowAverage\", budgetId)\n  );\n  const onToggleShowAverage = () => {\n    setShowAverage(!showAverage);\n    setSetting(\"trendsShowAverage\", budgetId, !showAverage);\n  };\n\n  return [showAverage, onToggleShowAverage];\n};\n\nconst getMonths = (firstMonth, lastMonth) => {\n  const months = [firstMonth];\n  let m = firstMonth;\n\n  while (m !== lastMonth) {\n    m = moment(m)\n      .add(1, \"months\")\n      .format(\"YYYY-MM\");\n    months.push(m);\n  }\n\n  return months;\n};\n\nexport const useMonthExclusions = budget => {\n  const [excludeFirstMonth, setExcludeFirstMonth] = useState(\n    getSetting(\"excludeFirstMonth\", budget.id)\n  );\n  const [excludeLastMonth, setExcludeLastMonth] = useState(\n    getSetting(\"excludeLastMonth\", budget.id)\n  );\n\n  const firstBudgetMonth = getFirstMonth(budget);\n  const firstMonth = excludeFirstMonth\n    ? moment(firstBudgetMonth)\n        .add(1, \"months\")\n        .format(\"YYYY-MM\")\n    : firstBudgetMonth;\n  const lastMonth = excludeLastMonth\n    ? moment()\n        .subtract(1, \"months\")\n        .format(\"YYYY-MM\")\n    : moment().format(\"YYYY-MM\");\n  const months = getMonths(firstMonth, lastMonth);\n\n  const onSetExclusion = ({ month, exclude }) => {\n    if (month === \"first\") {\n      setExcludeFirstMonth(exclude);\n      setSetting(\"excludeFirstMonth\", budget.id, exclude);\n    } else {\n      setExcludeLastMonth(exclude);\n      setSetting(\"excludeLastMonth\", budget.id, exclude);\n    }\n  };\n\n  return { excludeFirstMonth, excludeLastMonth, months, onSetExclusion };\n};\n\nexport const useMonthsToCompare = budgetId => {\n  const [monthsToCompare, setMonthsToCompare] = useState(\n    getSetting(\"spendingMonthsToCompare\", budgetId)\n  );\n\n  const onDecrementMonths = () => {\n    const newMonths = Math.max(monthsToCompare - 1, 0);\n    setMonthsToCompare(newMonths);\n    setSetting(\"spendingMonthsToCompare\", budgetId, newMonths);\n  };\n\n  const onIncrementMonths = () => {\n    const newMonths = Math.min(monthsToCompare + 1, MAX_MONTHS_TO_COMPARE);\n    setMonthsToCompare(newMonths);\n    setSetting(\"spendingMonthsToCompare\", budgetId, newMonths);\n  };\n\n  return { monthsToCompare, onDecrementMonths, onIncrementMonths };\n};\n\nexport const useFlagState = initial => {\n  const [flag, setFlag] = useState(initial);\n\n  return [\n    flag,\n    () => {\n      setFlag(false);\n    },\n    () => {\n      setFlag(true);\n    },\n    () => {\n      setFlag(!flag);\n    }\n  ];\n};\n","import { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass Scroller extends Component {\n  static propTypes = {\n    action: PropTypes.string.isRequired,\n    children: PropTypes.func.isRequired,\n    location: PropTypes.string.isRequired\n  };\n\n  toBeScrolled = null;\n\n  raf = null;\n\n  scrollPositions = {};\n\n  getSnapshotBeforeUpdate() {\n    return { scrollTop: this.toBeScrolled.scrollTop };\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    const { action, location } = this.props;\n\n    if (location === prevProps.location) {\n      return;\n    }\n\n    if (action === \"POP\") {\n      this.scrollPositions[prevProps.location] = snapshot.scrollTop;\n      this.raf = requestAnimationFrame(() => {\n        this.toBeScrolled.scrollTop = this.scrollPositions[location] || 0;\n      });\n    }\n\n    if (action === \"PUSH\") {\n      this.scrollPositions[prevProps.location] = snapshot.scrollTop;\n      this.raf = requestAnimationFrame(() => {\n        this.toBeScrolled.scrollTop = 0;\n      });\n    }\n\n    if (action === \"REPLACE\") {\n      this.raf = requestAnimationFrame(() => {\n        this.toBeScrolled.scrollTop = 0;\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    cancelAnimationFrame(this.raf);\n  }\n\n  render() {\n    return this.props.children({\n      ref: el => {\n        this.toBeScrolled = el;\n      }\n    });\n  }\n}\n\nexport default Scroller;\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link, Route, Switch } from \"react-router-dom\";\nimport values from \"lodash/fp/values\";\nimport pages, { makeLink } from \"../pages\";\nimport { MinorText } from \"./typeComponents\";\nimport Icon from \"./Icon\";\n\nconst routes = values(pages)\n  .filter(page => !!page.breadcrumbs)\n  .map(page => ({\n    path: page.path,\n    breadcrumbs: page.breadcrumbs.map(pageKey => ({\n      title: pages[pageKey].title,\n      path: pages[pageKey].path\n    }))\n  }));\n\nconst PageBreadcrumbs = ({ budget }) =>\n  budget ? (\n    <Switch>\n      {routes.map(({ path, breadcrumbs }) => (\n        <Route\n          key={path}\n          path={path}\n          exact\n          render={props => (\n            <MinorText style={{ lineHeight: 1, whiteSpace: \"normal\" }}>\n              {breadcrumbs.map(({ title, path }, index) => (\n                <Fragment key={path}>\n                  <Link\n                    to={makeLink(path, props.match.params)}\n                    style={{\n                      paddingBottom: 8,\n                      display: \"inline-block\"\n                    }}\n                  >\n                    {typeof title === \"function\"\n                      ? title(props.match.params, budget)\n                      : title}\n                  </Link>\n                  {index !== breadcrumbs.length - 1 && (\n                    <Icon\n                      icon=\"chevron-right\"\n                      style={{ padding: \"0 5px\", fontSize: 8 }}\n                    />\n                  )}\n                </Fragment>\n              ))}\n            </MinorText>\n          )}\n        />\n      ))}\n    </Switch>\n  ) : null;\n\nPageBreadcrumbs.propTypes = {\n  budget: PropTypes.object\n};\n\nexport default PageBreadcrumbs;\n","import React from \"react\";\nimport pages, { makeLink } from \"../pages\";\nimport { Switch, Route, Link } from \"react-router-dom\";\nimport { SecondaryText } from \"./typeComponents\";\n\nconst PageActions = () => (\n  <Switch>\n    <Route\n      path={pages.currentMonth.path}\n      exact\n      render={({ match }) => (\n        <SecondaryText>\n          <Link to={makeLink(pages.groups.path, match.params)}>\n            Past Months\n          </Link>\n        </SecondaryText>\n      )}\n    />\n    <Route\n      path={pages.currentMonthGroup.path}\n      exact\n      render={({ match }) => (\n        <SecondaryText>\n          <Link to={makeLink(pages.group.path, match.params)}>Past Months</Link>\n        </SecondaryText>\n      )}\n    />\n    <Route\n      path={pages.currentMonthCategory.path}\n      exact\n      render={({ match }) => (\n        <SecondaryText>\n          <Link to={makeLink(pages.category.path, match.params)}>\n            Past Months\n          </Link>\n        </SecondaryText>\n      )}\n    />\n    <Route\n      path={pages.groups.path}\n      exact\n      render={({ match }) => (\n        <SecondaryText>\n          <Link to={makeLink(pages.currentMonth.path, match.params)}>\n            Current Month\n          </Link>\n        </SecondaryText>\n      )}\n    />\n    <Route\n      path={pages.group.path}\n      exact\n      render={({ match }) => (\n        <SecondaryText>\n          <Link to={makeLink(pages.currentMonthGroup.path, match.params)}>\n            Current Month\n          </Link>\n        </SecondaryText>\n      )}\n    />\n    <Route\n      path={pages.category.path}\n      exact\n      render={({ match }) => (\n        <SecondaryText>\n          <Link to={makeLink(pages.currentMonthCategory.path, match.params)}>\n            Current Month\n          </Link>\n        </SecondaryText>\n      )}\n    />\n  </Switch>\n);\n\nPageActions.propTypes = {};\n\nexport default PageActions;\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { PageTitle } from \"./typeComponents\";\nimport Scroller from \"./Scroller\";\nimport PageBreadcrumbs from \"./PageBreadcrumbs\";\nimport PageActions from \"./PageActions\";\n\nconst Header = styled.div`\n  flex-shrink: 0;\n  display: flex;\n  align-items: center;\n  height: 60px;\n  padding-left: 0;\n  padding-right: 20px;\n  background-color: #fff;\n  background-clip: padding-box;\n  border-bottom: 2px solid rgba(0, 0, 0, 0.1);\n  white-space: pre;\n  user-select: none;\n`;\n\nconst Body = styled.div`\n  flex-grow: 1;\n  overflow-y: auto;\n`;\n\nconst PageLayout = ({\n  sidebarTrigger, // from PageWrapper\n  historyAction, // from PageWrapper\n  location, // from PageWrapper\n  budget,\n  title,\n  breadcrumbs,\n  fixedContent,\n  content\n}) => (\n  <Fragment>\n    <Header>\n      {sidebarTrigger}\n      <div style={{ flexGrow: 1 }}>\n        <PageBreadcrumbs budget={budget} />\n        <PageTitle style={{ lineHeight: 1 }}>{title}</PageTitle>\n      </div>\n      <PageActions />\n    </Header>\n    {fixedContent}\n    <Scroller action={historyAction} location={location}>\n      {({ ref }) => <Body ref={ref}>{content}</Body>}\n    </Scroller>\n  </Fragment>\n);\n\nPageLayout.propTypes = {\n  sidebarTrigger: PropTypes.node.isRequired,\n  historyAction: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  budget: PropTypes.object,\n  breadcrumbs: PropTypes.node,\n  fixedContent: PropTypes.node,\n  content: PropTypes.node\n};\n\nexport default PageLayout;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport AnimateHeight from \"react-animate-height-auto\";\nimport { StrongText } from \"./typeComponents\";\nimport Icon from \"./Icon\";\n\nconst Container = styled.div`\n  margin: ${props => (props.fullWidth ? \"0\" : \"2px\")};\n  background-color: #fff;\n  background-clip: padding-box;\n  border: ${props => (props.fullWidth ? \"0\" : \"1px\")} solid rgba(0, 0, 0, 0.05);\n  border-bottom-width: 1px;\n  border-radius: 2px;\n`;\n\nconst Header = styled(StrongText)`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 15px 20px;\n  user-select: none;\n`;\n\nconst SettingsContainer = styled.div`\n  padding: 0 10px;\n  margin-right: -10px;\n  align-self: stretch;\n  display: flex;\n  align-items: center;\n  margin-left: 5px;\n`;\n\nconst Body = styled.div`\n  padding: 0 ${props => (props.fullWidth ? \"22px\" : \"20px\")} 15px;\n`;\n\nconst CollapsibleSection = ({\n  actions,\n  children,\n  fullWidth,\n  hasSettings,\n  noPadding,\n  title,\n  onClickSettings\n}) => {\n  const [expanded, setExpanded] = useState(true);\n\n  return (\n    <Container fullWidth={fullWidth}>\n      <Header>\n        <div\n          style={{ display: \"flex\", alignItems: \"center\" }}\n          onClick={() => {\n            setExpanded(!expanded);\n          }}\n        >\n          {title}\n          <Icon\n            icon=\"chevron-right\"\n            transform={{ rotate: expanded ? 90 : 0 }}\n            style={{ marginLeft: 10 }}\n            faded\n          />\n        </div>\n        <div style={{ display: \"flex\", alignItems: \"center\" }}>\n          {expanded && actions}\n          {hasSettings &&\n            expanded && (\n              <SettingsContainer onClick={onClickSettings}>\n                <Icon icon=\"cog\" faded />\n              </SettingsContainer>\n            )}\n        </div>\n      </Header>\n      <AnimateHeight isExpanded={expanded}>\n        <Body style={{ padding: noPadding && 0 }}>{children}</Body>\n      </AnimateHeight>\n    </Container>\n  );\n};\n\nCollapsibleSection.propTypes = {\n  children: PropTypes.node.isRequired,\n  title: PropTypes.string.isRequired,\n  actions: PropTypes.node,\n  fullWidth: PropTypes.bool,\n  hasSettings: PropTypes.bool,\n  noPadding: PropTypes.bool,\n  onClickSettings: PropTypes.func\n};\n\nexport default CollapsibleSection;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Highcharts from \"highcharts\";\nimport HighchartsReact from \"highcharts-react-official\";\n\nconst CHART_DEFAULTS = {\n  chart: { height: 240, spacing: [0, 0, 0, 0] },\n  credits: { enabled: false },\n  legend: { enabled: false },\n  title: { text: \"\" },\n  subtitle: { text: \"\" },\n  tooltip: { enabled: false },\n  xAxis: { tickLength: 0 }\n};\n\nconst Chart = ({ options }) => (\n  <HighchartsReact\n    highcharts={Highcharts}\n    options={{\n      ...CHART_DEFAULTS,\n      ...options,\n      chart: { ...CHART_DEFAULTS.chart, ...options.chart },\n      xAxis: { ...CHART_DEFAULTS.xAxis, ...options.xAxis }\n    }}\n  />\n);\n\nChart.propTypes = {\n  options: PropTypes.object\n};\n\nexport default Chart;\n","import React from \"react\";\n\nconst CurrencyContext = React.createContext();\n\nexport default CurrencyContext;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport get from \"lodash/fp/get\";\nimport {\n  positiveColor as green,\n  negativeColor as red\n} from \"../styleVariables\";\nimport CurrencyContext from \"./CurrencyContext\";\n\nexport const addCommas = nStr => {\n  nStr += \"\";\n\n  const x = nStr.split(\".\");\n  let x1 = x[0];\n  const x2 = x.length > 1 ? \".\" + x[1] : \"\";\n  const rgx = /(\\d+)(\\d{3})/;\n  while (rgx.test(x1)) {\n    x1 = x1.replace(rgx, \"$1,$2\");\n  }\n  return x1 + x2;\n};\n\nconst Amount = ({\n  amount,\n  amountAfterDecimal,\n  expectNegative,\n  expectPositive,\n  showCurrencySymbol,\n  style\n}) => (\n  <CurrencyContext.Consumer>\n    {currencyFormat => (\n      <span\n        style={{\n          ...style,\n          color:\n            amount === 0\n              ? null\n              : amount > 0\n              ? expectPositive\n                ? null\n                : green\n              : expectNegative\n              ? null\n              : red\n        }}\n      >\n        {amount === 0\n          ? null\n          : amount > 0\n          ? expectPositive\n            ? null\n            : \"+\"\n          : expectNegative\n          ? null\n          : \"-\"}\n        {showCurrencySymbol && (get(\"symbol\")(currencyFormat) || \"$\")}\n        {addCommas(Math.abs(amount).toFixed(amountAfterDecimal))}\n      </span>\n    )}\n  </CurrencyContext.Consumer>\n);\n\nAmount.propTypes = {\n  amount: PropTypes.number.isRequired,\n  amountAfterDecimal: PropTypes.number,\n  expectNegative: PropTypes.bool,\n  expectPositive: PropTypes.bool,\n  showCurrencySymbol: PropTypes.bool,\n  style: PropTypes.object\n};\n\nAmount.defaultProps = {\n  amountAfterDecimal: 2\n};\n\nexport default Amount;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport isNumber from \"lodash/fp/isNumber\";\nimport { MinorText, LargeNumber } from \"./typeComponents\";\nimport Amount from \"./Amount\";\n\nconst ChartNumbers = ({ numbers, alwaysRound, expectPositive }) => {\n  const smallNumbers = numbers.some(({ amount }) => Math.abs(amount) < 100);\n  return (\n    <div\n      style={{\n        textAlign: \"right\",\n        lineHeight: \"16px\",\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n        flexDirection: \"row-reverse\",\n        marginBottom: 8\n      }}\n    >\n      {numbers.map(({ amount, label, isMoney = true, decimalsToRound }) => (\n        <div key={label} style={{ marginLeft: 20 }}>\n          <LargeNumber style={{ lineHeight: \"16px\" }}>\n            <Amount\n              amount={amount}\n              amountAfterDecimal={\n                isNumber(decimalsToRound)\n                  ? decimalsToRound\n                  : smallNumbers && !alwaysRound\n                  ? 2\n                  : 0\n              }\n              showCurrencySymbol={isMoney}\n              expectNegative={!expectPositive}\n              expectPositive={expectPositive}\n            />\n          </LargeNumber>\n          <MinorText>{label}</MinorText>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nChartNumbers.propTypes = {\n  numbers: PropTypes.arrayOf(\n    PropTypes.shape({\n      amount: PropTypes.number.isRequired,\n      label: PropTypes.string.isRequired,\n      alwaysRound: PropTypes.bool,\n      decimalsToRound: PropTypes.number,\n      isMoney: PropTypes.bool\n    })\n  ).isRequired,\n  alwaysRound: PropTypes.bool,\n  expectPositive: PropTypes.bool\n};\n\nexport default ChartNumbers;\n","import React, { Fragment, PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport moment from \"moment\";\nimport tinyColor from \"tinycolor2\";\nimport compose from \"lodash/fp/compose\";\nimport isNumber from \"lodash/fp/isNumber\";\nimport padCharsStart from \"lodash/fp/padCharsStart\";\nimport range from \"lodash/fp/range\";\nimport sumBy from \"lodash/fp/sumBy\";\nimport takeWhile from \"lodash/fp/takeWhile\";\nimport { groupByProp, sumByProp } from \"../dataUtils\";\nimport { getTransactionMonth } from \"../budgetUtils\";\nimport { primaryColor, plotBandColor } from \"../styleVariables\";\nimport { MinorText } from \"./typeComponents\";\nimport Chart from \"./Chart\";\nimport ChartNumbers from \"./ChartNumbers\";\n\nconst DateLabels = styled.div`\n  border-top: 1px solid #ddd;\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst getData = ({ month, transactionsByDate }) => {\n  const today = moment().format(\"YYYY-MM-DD\");\n  let cumulative = 0;\n  return range(-1, moment(month).daysInMonth()).map(numDays => {\n    const date =\n      numDays === -1\n        ? moment(month).add(-1, \"days\")\n        : `${month}-${padCharsStart(\"0\")(2)(numDays + 1)}`;\n\n    if (date > today) {\n      return null;\n    }\n\n    cumulative += -sumBy(\"amount\")(transactionsByDate[date] || []);\n\n    return cumulative;\n  });\n};\n\nclass SpendingChart extends PureComponent {\n  static propTypes = {\n    budgetId: PropTypes.string.isRequired,\n    currentMonth: PropTypes.string.isRequired,\n    transactions: PropTypes.arrayOf(\n      PropTypes.shape({\n        amount: PropTypes.number.isRequired,\n        date: PropTypes.string.isRequired\n      })\n    ).isRequired,\n    total: PropTypes.number\n  };\n\n  render() {\n    const {\n      total,\n      transactions,\n      highlightFunction,\n      currentMonth,\n      monthsToCompare\n    } = this.props;\n\n    const highlightedTransactions = highlightFunction\n      ? transactions.filter(highlightFunction)\n      : [];\n    const highlightData = getData({\n      month: currentMonth,\n      transactionsByDate: groupByProp(\"date\")(highlightedTransactions)\n    });\n    const highlightSeries = {\n      type: \"areaspline\",\n      data: highlightData,\n      enableMouseTracking: false,\n      marker: { enabled: false },\n      animation: false,\n      color: primaryColor,\n      lineWidth: 0,\n      fillOpacity: 0.8\n    };\n    const daysInMonth = moment(currentMonth).daysInMonth();\n    const firstDate = moment(currentMonth).add(-1, \"days\");\n    const lastDate = moment(currentMonth).add(daysInMonth - 1, \"days\");\n\n    const transactionsByDate = groupByProp(\"date\")(transactions);\n    const data = getData({ month: currentMonth, transactionsByDate });\n    const lineData = range(0, daysInMonth + 1).map(\n      day => (day / daysInMonth) * total\n    );\n    const firstDayOfWeek = parseInt(firstDate.format(\"d\"), 10);\n    const plotBands = range(0, 6).map(num => ({\n      color: plotBandColor,\n      from: num * 7 - 1.5 - firstDayOfWeek,\n      to: num * 7 + 0.5 - firstDayOfWeek\n    }));\n\n    const comparisonSeries = range(monthsToCompare, 0).map(numMonths => ({\n      type: \"spline\",\n      data: getData({\n        month: moment(currentMonth)\n          .subtract(numMonths, \"months\")\n          .format(\"YYYY-MM\"),\n        transactionsByDate\n      }),\n      enableMouseTracking: false,\n      color:\n        \"#\" +\n        tinyColor\n          .mix(\n            primaryColor,\n            \"#f2f2f2\",\n            30 + ((numMonths - 1) * 70) / monthsToCompare\n          )\n          .toHex(),\n      lineWidth: 1,\n      marker: { enabled: false },\n      animation: false\n    }));\n\n    const spent = compose([\n      sumByProp(\"amount\"),\n      takeWhile(\n        transaction => getTransactionMonth(transaction) === currentMonth\n      )\n    ])(transactions);\n    const chartNumbers = [{ amount: spent, label: \"spent\" }];\n    if (isNumber(total)) {\n      chartNumbers.push({ amount: -(total + spent), label: \"available\" });\n    }\n\n    return (\n      <Fragment>\n        <ChartNumbers numbers={chartNumbers} />\n        <Chart\n          key={monthsToCompare}\n          options={{\n            chart: { spacing: [0, 0, 0, 0], height: 140, animation: false },\n            xAxis: {\n              labels: { enabled: false },\n              plotBands\n            },\n            yAxis: { visible: false, endOnTick: false, startOnTick: false },\n            series: [\n              {\n                type: \"line\",\n                color: \"#aaa\",\n                dashStyle: \"Dot\",\n                lineWidth: 1,\n                data: lineData,\n                enableMouseTracking: false,\n                marker: { enabled: false },\n                animation: false\n              },\n              ...comparisonSeries,\n              {\n                type: \"spline\",\n                data,\n                enableMouseTracking: false,\n                color: primaryColor,\n                marker: { enabled: false },\n                animation: false,\n                ...(highlightFunction && {\n                  type: \"areaspline\",\n                  fillOpacity: 0.2\n                })\n              },\n              highlightSeries\n            ]\n          }}\n        />\n        <DateLabels>\n          <MinorText>{firstDate.format(\"MMM D\")}</MinorText>\n          <MinorText>{lastDate.format(\"MMM D\")}</MinorText>\n        </DateLabels>\n      </Fragment>\n    );\n  }\n}\n\nexport default SpendingChart;\n","import React, { Component } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { StrongText } from \"./typeComponents\";\nimport { PrimaryButton } from \"./Button\";\n\nconst Container = styled.div`\n  position: fixed;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 1000;\n`;\n\nconst Overlay = styled.div`\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  background-color: rgba(0, 0, 0, 0.7);\n  opacity: 0;\n  transition: opacity 0.2s ease-in-out;\n`;\n\nconst ModalContent = styled.div`\n  position: relative;\n  min-width: 200px;\n  padding: 15px 20px;\n  margin-left: 20px;\n  margin-right: 20px;\n  background-color: #fff;\n  border-radius: 2px;\n  transition: transform 0.2s ease-in-out, opacity 0.2s ease-in-out;\n`;\n\nconst ensureNextTick = callback =>\n  requestAnimationFrame(() => {\n    requestAnimationFrame(callback);\n  });\n\nclass Modal extends Component {\n  static propTypes = {\n    children: PropTypes.node.isRequired,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    title: PropTypes.string,\n    width: PropTypes.number\n  };\n\n  constructor() {\n    super();\n    this.el = document.createElement(\"div\");\n    this.state = { animationState: \"left\" };\n  }\n\n  componentDidMount() {\n    document.body.appendChild(this.el);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (!prevProps.open && this.props.open) {\n      ensureNextTick(() => {\n        this.setState({ animationState: \"entering\" });\n      });\n    }\n    if (prevProps.open && !this.props.open) {\n      ensureNextTick(() => {\n        this.setState({ animationState: \"leaving\" });\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    document.body.removeChild(this.el);\n  }\n\n  handleTransitionEnd = () => {\n    const { animationState } = this.state;\n\n    if (animationState === \"entering\") {\n      this.setState({ animationState: \"entered\" });\n    } else if (animationState === \"leaving\") {\n      this.setState({ animationState: \"left\" });\n    }\n  };\n\n  render() {\n    const { open, children, title, onClose, width } = this.props;\n    const { animationState } = this.state;\n\n    if (!open && animationState === \"left\") {\n      return null;\n    }\n\n    const shouldShow = [\"entering\", \"entered\"].includes(animationState);\n\n    return createPortal(\n      <Container>\n        <Overlay\n          onClick={onClose}\n          style={{ opacity: shouldShow ? 1 : 0 }}\n          onTransitionEnd={this.handleTransitionEnd}\n        />\n        <ModalContent\n          style={{\n            opacity: shouldShow ? 1 : 0,\n            transform: `translate3d(0, ${shouldShow ? \"0\" : \"20px\"}, 0)`,\n            width\n          }}\n        >\n          {title && (\n            <StrongText style={{ marginBottom: 10 }}>{title}</StrongText>\n          )}\n          {children}\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"flex-end\",\n              marginTop: 20\n            }}\n          >\n            <PrimaryButton onClick={onClose}>Done</PrimaryButton>\n          </div>\n        </ModalContent>\n      </Container>,\n      this.el\n    );\n  }\n}\n\nexport default Modal;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Modal from \"./Modal\";\nimport { SecondaryText } from \"./typeComponents\";\nimport Button from \"./Button\";\n\nconst ChartSettingsModal = ({\n  open,\n  monthsToCompare,\n  onClose,\n  onDecrementMonths,\n  onIncrementMonths\n}) => (\n  <Modal open={open} title=\"Chart Settings\" onClose={onClose}>\n    <div style={{ display: \"flex\", alignItems: \"center\" }}>\n      <div style={{ marginRight: 10 }}>\n        <Button onClick={onDecrementMonths}>-</Button>\n        <Button onClick={onIncrementMonths}>+</Button>\n      </div>\n      <SecondaryText>\n        Compare with the last {monthsToCompare} month\n        {monthsToCompare === 1 ? \"\" : \"s\"}\n      </SecondaryText>\n    </div>\n  </Modal>\n);\n\nChartSettingsModal.propTypes = {\n  open: PropTypes.bool.isRequired,\n  monthsToCompare: PropTypes.number.isRequired,\n  onClose: PropTypes.func.isRequired,\n  onDecrementMonths: PropTypes.func.isRequired,\n  onIncrementMonths: PropTypes.func.isRequired\n};\n\nexport default ChartSettingsModal;\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useMonthsToCompare, useFlagState } from \"../commonHooks\";\nimport CollapsibleSection from \"./CollapsibleSection\";\nimport SpendingChart from \"./SpendingChart\";\nimport ChartSettingsModal from \"./ChartSettingsModal\";\n\nconst DayByDaySection = ({\n  actions,\n  budgetId,\n  currentMonth,\n  highlightFunction,\n  title,\n  total,\n  transactions\n}) => {\n  const [modalOpen, onCloseModal, onOpenModal] = useFlagState(false);\n  const {\n    monthsToCompare,\n    onIncrementMonths,\n    onDecrementMonths\n  } = useMonthsToCompare(budgetId);\n\n  return (\n    <Fragment>\n      <CollapsibleSection\n        actions={actions}\n        title={title}\n        hasSettings\n        onClickSettings={onOpenModal}\n      >\n        <SpendingChart\n          budgetId={budgetId}\n          currentMonth={currentMonth}\n          highlightFunction={highlightFunction}\n          monthsToCompare={monthsToCompare}\n          total={total}\n          transactions={transactions}\n        />\n      </CollapsibleSection>\n      <ChartSettingsModal\n        open={modalOpen}\n        monthsToCompare={monthsToCompare}\n        onClose={onCloseModal}\n        onDecrementMonths={onDecrementMonths}\n        onIncrementMonths={onIncrementMonths}\n      />\n    </Fragment>\n  );\n};\n\nDayByDaySection.propTypes = {\n  budgetId: PropTypes.string.isRequired,\n  currentMonth: PropTypes.string.isRequired,\n  transactions: PropTypes.array.isRequired,\n  actions: PropTypes.node,\n  highlightFunction: PropTypes.func,\n  title: PropTypes.string,\n  total: PropTypes.number\n};\n\nDayByDaySection.defaultProps = { title: \"Day by Day\" };\n\nexport default DayByDaySection;\n","import styled from \"styled-components\";\n\nconst ListItem = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 8px 0;\n  user-select: none;\n\n  &:first-child {\n    padding-top: ${props => !props.isContinuing && 0};\n  }\n`;\n\nexport default ListItem;\n","import styled from \"styled-components\";\nimport { SecondaryText } from \"./typeComponents\";\n\nconst EmptyText = styled(SecondaryText)`\n  text-align: center;\n  margin: 10px;\n  opacity: 0.5;\n`;\n\nexport default EmptyText;\n","import React from \"react\";\nimport EmptyText from \"./EmptyText\";\n\nconst NoTransactions = () => <EmptyText>No transactions this month</EmptyText>;\n\nexport default NoTransactions;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { SecondaryText, MinorText } from \"./typeComponents\";\n\nconst LabelWithMinorText = ({ label, minorText, inLink, to, bold }) => (\n  <SecondaryText\n    style={{\n      fontWeight: bold && 700,\n      display: \"flex\",\n      alignItems: \"baseline\",\n      whiteSpace: \"pre\",\n      overflow: \"hidden\",\n      color: inLink && \"inherit\"\n    }}\n  >\n    {to ? <Link to={to}>{label}</Link> : label}\n    {minorText && (\n      <MinorText\n        style={{\n          fontWeight: bold && 700,\n          overflow: \"hidden\",\n          textOverflow: \"ellipsis\"\n        }}\n      >\n        &nbsp;&ndash; {minorText}\n      </MinorText>\n    )}\n  </SecondaryText>\n);\n\nLabelWithMinorText.propTypes = {\n  label: PropTypes.string.isRequired,\n  bold: PropTypes.bool,\n  inLink: PropTypes.bool,\n  minorText: PropTypes.string,\n  to: PropTypes.string\n};\n\nexport default LabelWithMinorText;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport LabelWithMinorText from \"./LabelWithMinorText\";\n\nconst LabelWithTransactionCount = ({\n  label,\n  count,\n  inLink,\n  selected,\n  showCount,\n  to\n}) => (\n  <LabelWithMinorText\n    bold={selected}\n    label={label}\n    minorText={showCount && `${count} transaction${count === 1 ? \"\" : \"s\"}`}\n    inLink={inLink}\n    to={to}\n  />\n);\n\nLabelWithTransactionCount.propTypes = {\n  count: PropTypes.number.isRequired,\n  label: PropTypes.string.isRequired,\n  inLink: PropTypes.bool,\n  selected: PropTypes.bool,\n  showCount: PropTypes.bool,\n  to: PropTypes.string\n};\n\nLabelWithTransactionCount.defaultProps = { showCount: true };\n\nexport default LabelWithTransactionCount;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { SecondaryText, MinorText } from \"./typeComponents\";\nimport Amount from \"./Amount\";\n\nconst AmountWithPercentage = ({\n  amount,\n  expectNegative,\n  expectPositive,\n  total,\n  faded,\n  selected\n}) => (\n  <SecondaryText\n    style={{\n      display: \"flex\",\n      alignItems: \"baseline\",\n      opacity: faded ? 0.3 : 1,\n      fontWeight: selected && 700\n    }}\n  >\n    <Amount\n      amount={amount}\n      expectNegative={expectNegative}\n      expectPositive={expectPositive}\n    />\n    <MinorText\n      style={{ width: 44, textAlign: \"right\", fontWeight: selected && 700 }}\n    >\n      {total ? `${((amount / total) * 100).toFixed(1)}%` : `–`}\n    </MinorText>\n  </SecondaryText>\n);\n\nAmountWithPercentage.propTypes = {\n  amount: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  expectNegative: PropTypes.bool,\n  expectPositive: PropTypes.bool,\n  faded: PropTypes.bool,\n  selected: PropTypes.bool\n};\n\nexport default AmountWithPercentage;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { MinorText } from \"./typeComponents\";\n\nconst SeeAll = ({ count, pluralizedName, showAll, onToggle }) => (\n  <MinorText style={{ textAlign: \"center\", marginTop: 5 }} onClick={onToggle}>\n    {showAll ? \"see less\" : `see all ${count} ${pluralizedName}`}\n  </MinorText>\n);\n\nSeeAll.propTypes = {\n  count: PropTypes.number.isRequired,\n  pluralizedName: PropTypes.string.isRequired,\n  showAll: PropTypes.bool.isRequired,\n  onToggle: PropTypes.func.isRequired\n};\n\nexport default SeeAll;\n","import React, { Component, PureComponent, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport compose from \"lodash/fp/compose\";\nimport get from \"lodash/fp/get\";\nimport map from \"lodash/fp/map\";\nimport sortBy from \"lodash/fp/sortBy\";\nimport { groupBy, groupByProp, sumByProp } from \"../dataUtils\";\nimport AnimateHeight from \"react-animate-height-auto\";\nimport { Link } from \"react-router-dom\";\nimport CollapsibleSection from \"./CollapsibleSection\";\nimport { SecondaryText } from \"./typeComponents\";\nimport ListItem from \"./ListItem\";\nimport NoTransactions from \"./NoTransactions\";\nimport LabelWithTransactionCount from \"./LabelWithTransactionCount\";\nimport AmountWithPercentage from \"./AmountWithPercentage\";\nimport SeeAll from \"./SeeAll\";\n\nconst mapWithKeys = map.convert({ cap: false });\nconst LIMIT = 5;\n\nconst keyToPluralizedName = {\n  category_group_id: \"category groups\",\n  category_id: \"categories\",\n  payee_id: \"payees\"\n};\n\nclass GenericEntitiesSection extends Component {\n  static propTypes = {\n    entitiesById: PropTypes.object.isRequired,\n    title: PropTypes.string.isRequired,\n    transactions: PropTypes.arrayOf(PropTypes.object).isRequired,\n    entityKey: PropTypes.oneOf([\n      \"category_id\",\n      \"category_group_id\",\n      \"payee_id\"\n    ]),\n    emptyName: PropTypes.string,\n    entityFunction: PropTypes.func,\n    expectNegative: PropTypes.bool,\n    expectPositive: PropTypes.bool,\n    linkFunction: PropTypes.func,\n    limitShowing: PropTypes.bool,\n    numMonths: PropTypes.number,\n    reverse: PropTypes.bool,\n    selectedEntityId: PropTypes.string,\n    showAverage: PropTypes.bool,\n    showAverageToggle: PropTypes.bool,\n    showTransactionCount: PropTypes.bool,\n    onClickEntity: PropTypes.func,\n    onToggleAverage: PropTypes.func\n  };\n\n  static defaultProps = { emptyName: \"(none)\" };\n\n  state = { showAll: false, allMounted: false };\n\n  handleToggleShowAll = () => {\n    const { allMounted, showAll } = this.state;\n    if (allMounted) {\n      this.setState({ showAll: !showAll });\n    } else {\n      this.setState({ allMounted: true });\n      requestAnimationFrame(() => {\n        this.setState({ showAll: true });\n      });\n    }\n  };\n\n  render() {\n    const {\n      emptyName,\n      entityKey,\n      entityFunction,\n      entitiesById,\n      expectNegative,\n      expectPositive,\n      linkFunction,\n      limitShowing: limitShowingProp,\n      numMonths,\n      reverse,\n      selectedEntityId,\n      showAverage,\n      showAverageToggle,\n      showTransactionCount,\n      title,\n      transactions,\n      onClickEntity,\n      onToggleAverage\n    } = this.props;\n    const { allMounted, showAll } = this.state;\n    let total = 0;\n    const entities = compose([\n      sortBy(e => (reverse ? -e.amount : e.amount)),\n      mapWithKeys((transactions, entityId) => {\n        const amount = sumByProp(\"amount\")(transactions);\n        total += amount;\n\n        return {\n          entityId,\n          transactions: transactions.length,\n          amount\n        };\n      }),\n      entityFunction ? groupBy(entityFunction) : groupByProp(entityKey)\n    ])(transactions);\n\n    const limitShowing = limitShowingProp && entities.length > LIMIT + 1;\n    const topEntities = entities.slice(0, LIMIT);\n    const otherEntities = entities.slice(LIMIT);\n\n    return (\n      <CollapsibleSection\n        title={title}\n        actions={\n          showAverageToggle && (\n            <SecondaryText onClick={onToggleAverage}>\n              {showAverage ? \"average\" : \"total\"}\n            </SecondaryText>\n          )\n        }\n      >\n        {entities.length === 0 && <NoTransactions />}\n        {(limitShowing ? topEntities : entities).map(\n          ({ entityId, transactions, amount }) => (\n            <GenericItemLink\n              key={entityId}\n              showTransactionCount={showTransactionCount}\n              to={\n                linkFunction && !!entitiesById[entityId]\n                  ? linkFunction(entityId)\n                  : null\n              }\n              transactions={transactions}\n              name={get(\"name\")(entitiesById[entityId]) || emptyName}\n              amount={showAverage ? amount / numMonths : amount}\n              expectNegative={expectNegative}\n              expectPositive={expectPositive}\n              selected={entityId === selectedEntityId}\n              total={showAverage ? total / numMonths : total}\n              id={entityId}\n              onClick={onClickEntity}\n            />\n          )\n        )}\n        {allMounted && (\n          <AnimateHeight isExpanded={showAll}>\n            <Fragment>\n              {otherEntities.map(({ entityId, transactions, amount }) => (\n                <GenericItemLink\n                  key={entityId}\n                  showTransactionCount={showTransactionCount}\n                  to={\n                    linkFunction && !!entitiesById[entityId]\n                      ? linkFunction(entityId)\n                      : null\n                  }\n                  transactions={transactions}\n                  name={get(\"name\")(entitiesById[entityId]) || emptyName}\n                  amount={showAverage ? amount / numMonths : amount}\n                  expectNegative={expectNegative}\n                  expectPositive={expectPositive}\n                  selected={entityId === selectedEntityId}\n                  total={total}\n                  id={entityId}\n                  onClick={onClickEntity}\n                  isContinuing\n                />\n              ))}\n            </Fragment>\n          </AnimateHeight>\n        )}\n        {!!otherEntities.length && limitShowing && (\n          <SeeAll\n            count={entities.length}\n            pluralizedName={keyToPluralizedName[entityKey]}\n            showAll={showAll}\n            onToggle={this.handleToggleShowAll}\n          />\n        )}\n      </CollapsibleSection>\n    );\n  }\n}\n\nconst MaybeLink = ({ to, children, ...other }) =>\n  to ? (\n    <Link {...other} to={to}>\n      {children}\n    </Link>\n  ) : (\n    <span {...other}>{children}</span>\n  );\n\nclass GenericItemLink extends PureComponent {\n  render() {\n    const {\n      showTransactionCount,\n      to,\n      transactions,\n      name,\n      amount,\n      expectNegative,\n      expectPositive,\n      total,\n      selected,\n      id,\n      onClick,\n      isContinuing\n    } = this.props;\n    return (\n      <ListItem\n        isContinuing={isContinuing}\n        onClick={onClick && (() => onClick(id))}\n      >\n        {showTransactionCount ? (\n          <LabelWithTransactionCount\n            count={transactions}\n            label={name}\n            selected={selected}\n            to={to}\n          />\n        ) : (\n          <MaybeLink\n            to={to}\n            onClick={\n              to &&\n              (evt => {\n                evt.stopPropagation();\n              })\n            }\n          >\n            <SecondaryText\n              style={{\n                whiteSpace: \"pre\",\n                overflow: \"hidden\",\n                textOverflow: \"ellipsis\",\n                color: \"inherit\",\n                fontWeight: selected && 700\n              }}\n            >\n              {name}\n            </SecondaryText>\n          </MaybeLink>\n        )}\n        <AmountWithPercentage\n          amount={amount}\n          expectNegative={expectNegative}\n          expectPositive={expectPositive}\n          selected={selected}\n          total={total}\n        />\n      </ListItem>\n    );\n  }\n}\n\nGenericItemLink.propTypes = {\n  amount: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired,\n  total: PropTypes.number.isRequired,\n  transactions: PropTypes.number.isRequired,\n  id: PropTypes.string,\n  isContinuing: PropTypes.bool,\n  selected: PropTypes.bool,\n  showTransactionCount: PropTypes.bool,\n  to: PropTypes.string\n};\n\nexport default GenericEntitiesSection;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport get from \"lodash/fp/get\";\nimport { SecondaryText } from \"./typeComponents\";\nimport ListItem from \"./ListItem\";\nimport Amount from \"./Amount\";\nimport LabelWithMinorText from \"./LabelWithMinorText\";\n\nconst StyledListItem = styled(ListItem)`\n  border-top: 0;\n  padding-bottom: 0;\n`;\n\nconst DateSummaryTransaction = ({ category, payee, memo, amount }) => (\n  <StyledListItem isContinuing>\n    <div style={{ overflow: \"hidden\" }}>\n      <LabelWithMinorText\n        label={get(\"name\")(payee) || \"(no payee)\"}\n        minorText={\n          get(\"name\")(category) || \"(no category)\" + (memo ? ` (${memo})` : \"\")\n        }\n      />\n    </div>\n    <SecondaryText>\n      <Amount amount={amount} expectNegative />\n    </SecondaryText>\n  </StyledListItem>\n);\n\nDateSummaryTransaction.propTypes = {\n  amount: PropTypes.number.isRequired,\n  category: PropTypes.shape({\n    name: PropTypes.string.isRequired\n  }),\n  isContinuing: PropTypes.bool,\n  memo: PropTypes.string,\n  payee: PropTypes.shape({\n    name: PropTypes.string.isRequired\n  })\n};\n\nexport default DateSummaryTransaction;\n","import React from \"react\";\nimport { SecondaryText } from \"./typeComponents\";\nimport Icon from \"./Icon\";\nimport Amount from \"./Amount\";\nimport styled from \"styled-components\";\nimport ListItem from \"./ListItem\";\n\nconst INDENTATION = 18;\n\nconst NodeWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: ${props => (props.isCompact ? \"0\" : \"8px 0\")};\n  user-select: none;\n\n  ${ListItem}:first-child > & {\n    padding-top: 0;\n  }\n`;\n\nconst IconWrapper = styled.div`\n  box-sizing: border-box;\n  padding-left: 3px;\n  width: ${INDENTATION}px;\n  font-weight: 400;\n  color: #888;\n  font-size: 10px;\n`;\n\nconst ToggleNode = ({\n  expanded,\n  name,\n  id,\n  amount,\n  valueRenderer,\n  onToggle,\n  isCompact\n}) => (\n  <NodeWrapper onClick={onToggle} isCompact={isCompact}>\n    <SecondaryText\n      style={{ whiteSpace: \"pre\", display: \"flex\", alignItems: \"center\" }}\n    >\n      <IconWrapper>\n        <Icon icon=\"chevron-right\" transform={{ rotate: expanded ? 90 : 0 }} />\n      </IconWrapper>\n      {typeof name === \"function\" ? name({ expanded }) : name}\n    </SecondaryText>\n    {valueRenderer ? (\n      valueRenderer({ amount, id, faded: expanded })\n    ) : (\n      <SecondaryText style={{ opacity: expanded ? 0.3 : 1 }}>\n        <Amount amount={amount} expectNegative />\n      </SecondaryText>\n    )}\n  </NodeWrapper>\n);\n\nexport default ToggleNode;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport AnimateHeight from \"react-animate-height-auto\";\nimport ListItem from \"./ListItem\";\nimport moment from \"moment\";\nimport { MinorText } from \"./typeComponents\";\nimport { sumByProp } from \"../dataUtils\";\nimport EmptyText from \"./EmptyText\";\nimport DateSummaryTransaction from \"./DateSummaryTransaction\";\nimport ToggleNode from \"./ToggleNode\";\n\nconst Container = styled(ListItem)`\n  display: block;\n`;\n\nconst DateSummary = ({\n  categoriesById,\n  date,\n  expanded,\n  payeesById,\n  transactions,\n  onToggleExpanded\n}) => (\n  <Container>\n    <ToggleNode\n      amount={sumByProp(\"amount\")(transactions)}\n      expanded={expanded}\n      name={\n        <div style={{ display: \"flex\", alignItems: \"baseline\" }}>\n          {moment(date).calendar(null, {\n            sameDay: \"[Today]\",\n            nextDay: \"[Tomorrow]\",\n            nextWeek: \"dddd\",\n            lastDay: \"[Yesterday]\",\n            lastWeek: \"dddd\",\n            sameElse: \"DD/MM/YYYY\"\n          })}\n          {!expanded && (\n            <MinorText>\n              {\" \"}\n              &ndash; {transactions.length} transaction\n              {transactions.length === 1 ? \"\" : \"s\"}\n            </MinorText>\n          )}\n        </div>\n      }\n      onToggle={onToggleExpanded}\n      isCompact\n    />\n    <AnimateHeight isExpanded={expanded}>\n      <div style={{ paddingLeft: 18 }}>\n        {transactions.length ? (\n          transactions.map(transaction => (\n            <DateSummaryTransaction\n              key={transaction.id}\n              amount={transaction.amount}\n              payee={payeesById[transaction.payee_id]}\n              category={categoriesById[transaction.category_id]}\n              memo={transaction.memo}\n            />\n          ))\n        ) : (\n          <EmptyText style={{ margin: 0 }}>no transactions</EmptyText>\n        )}\n      </div>\n    </AnimateHeight>\n  </Container>\n);\n\nDateSummary.propTypes = {\n  categoriesById: PropTypes.object.isRequired,\n  date: PropTypes.string.isRequired,\n  expanded: PropTypes.bool.isRequired,\n  payeesById: PropTypes.object.isRequired,\n  transactions: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      amount: PropTypes.number.isRequired,\n      category_id: PropTypes.string,\n      payee_id: PropTypes.string\n    })\n  ).isRequired,\n  onToggleExpanded: PropTypes.func.isRequired\n};\n\nexport default DateSummary;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { groupByProp } from \"../dataUtils\";\nimport moment from \"moment\";\nimport range from \"lodash/fp/range\";\nimport CollapsibleSection from \"./CollapsibleSection\";\nimport DateSummary from \"./DateSummary\";\n\nconst NUM_DAYS = 5;\n\nconst RecentSpending = ({\n  categoriesById,\n  currentMonth,\n  payeesById,\n  transactions\n}) => {\n  const transactionsByDate = groupByProp(\"date\")(transactions);\n  const recentDays = range(0, NUM_DAYS)\n    .map(n =>\n      moment()\n        .subtract(n, \"days\")\n        .format(\"YYYY-MM-DD\")\n    )\n    .filter(date => date.startsWith(currentMonth));\n\n  const [expanded, setExpanded] = useState(\n    recentDays.reduce((acc, date) => ({ ...acc, [date]: false }), {})\n  );\n\n  return (\n    <CollapsibleSection title=\"Recent Spending\">\n      {recentDays.map(date => (\n        <DateSummary\n          key={date}\n          categoriesById={categoriesById}\n          date={date}\n          expanded={!!expanded[date]}\n          onToggleExpanded={() => {\n            setExpanded({ ...expanded, [date]: !expanded[date] });\n          }}\n          payeesById={payeesById}\n          transactions={transactionsByDate[date] || []}\n        />\n      ))}\n    </CollapsibleSection>\n  );\n};\n\nRecentSpending.propTypes = {\n  categoriesById: PropTypes.object.isRequired,\n  currentMonth: PropTypes.string.isRequired,\n  payeesById: PropTypes.object.isRequired,\n  transactions: PropTypes.arrayOf(\n    PropTypes.shape({\n      date: PropTypes.string.isRequired\n    })\n  ).isRequired\n};\n\nexport default RecentSpending;\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport takeWhile from \"lodash/fp/takeWhile\";\nimport {\n  getTransactionMonth,\n  isTransfer,\n  isStartingBalanceOrReconciliation,\n  isIncome,\n  sanitizeName\n} from \"../budgetUtils\";\nimport { notAny } from \"../dataUtils\";\nimport pages, { makeLink } from \"../pages\";\nimport { useSelectedEntityId } from \"../commonHooks\";\nimport PageLayout from \"./PageLayout\";\nimport DayByDaySection from \"./DayByDaySection\";\nimport GenericEntitiesSection from \"./GenericEntitiesSection\";\nimport RecentSpending from \"./RecentSpending\";\n\nconst CurrentMonthPage = ({\n  budget,\n  currentMonth,\n  historyAction,\n  investmentAccounts,\n  location,\n  sidebarTrigger,\n  title\n}) => {\n  const [selectedGroupId, onSelectGroupId] = useSelectedEntityId();\n\n  const {\n    categoryGroupsById,\n    categoriesById,\n    payeesById,\n    id: budgetId\n  } = budget;\n  const selectedGroup = selectedGroupId && categoryGroupsById[selectedGroupId];\n  const transactions = budget.transactions.filter(\n    notAny([\n      isIncome(budget),\n      isTransfer(investmentAccounts),\n      isStartingBalanceOrReconciliation(budget)\n    ])\n  );\n  const transactionsThisMonth = takeWhile(\n    transaction => getTransactionMonth(transaction) === currentMonth\n  )(transactions);\n\n  return (\n    <PageLayout\n      historyAction={historyAction}\n      location={location}\n      sidebarTrigger={sidebarTrigger}\n      title={title}\n      content={\n        <Fragment>\n          <DayByDaySection\n            budgetId={budget.id}\n            currentMonth={currentMonth}\n            transactions={transactions}\n            highlightFunction={\n              selectedGroupId &&\n              (transaction =>\n                categoriesById[transaction.category_id].category_group_id ===\n                selectedGroupId)\n            }\n            title={\n              selectedGroup\n                ? `Day by Day: ${sanitizeName(selectedGroup.name)}`\n                : \"Day by Day\"\n            }\n          />\n          <RecentSpending\n            categoriesById={categoriesById}\n            currentMonth={currentMonth}\n            payeesById={payeesById}\n            transactions={transactionsThisMonth}\n          />\n          <GenericEntitiesSection\n            entitiesById={categoryGroupsById}\n            entityFunction={transaction =>\n              categoriesById[transaction.category_id].category_group_id\n            }\n            entityKey=\"category_group_id\"\n            expectNegative\n            linkFunction={groupId =>\n              makeLink(pages.currentMonthGroup.path, {\n                budgetId,\n                categoryGroupId: groupId\n              })\n            }\n            selectedEntityId={selectedGroupId}\n            title=\"Category Groups\"\n            transactions={transactionsThisMonth}\n            showTransactionCount\n            onClickEntity={onSelectGroupId}\n          />\n        </Fragment>\n      }\n    />\n  );\n};\n\nCurrentMonthPage.propTypes = {\n  budget: PropTypes.object.isRequired,\n  currentMonth: PropTypes.string.isRequired,\n  historyAction: PropTypes.string.isRequired,\n  investmentAccounts: PropTypes.object.isRequired,\n  location: PropTypes.string.isRequired,\n  sidebarTrigger: PropTypes.node.isRequired,\n  title: PropTypes.string.isRequired\n};\n\nexport default CurrentMonthPage;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport moment from \"moment\";\nimport findIndex from \"lodash/fp/findIndex\";\nimport { selectedPlotBandColor } from \"../styleVariables\";\nimport Chart from \"./Chart\";\n\nconst MonthlyChart = ({\n  average,\n  data,\n  height,\n  series,\n  selectedMonth,\n  stacked,\n  onSelectMonth\n}) => {\n  const yearLines = [];\n  const plotBands = [];\n  const categories = data.map(d => moment(d.month).format(\"MMM\"));\n  let highlights = null;\n\n  if (selectedMonth) {\n    highlights = { months: [selectedMonth], color: selectedPlotBandColor };\n  }\n\n  data.forEach(({ month }, index) => {\n    if (moment(month).format(\"MMM\") === \"Jan\") {\n      yearLines.push({\n        color: \"#ccc\",\n        width: 1,\n        value: index - 0.5,\n        zIndex: 3\n      });\n    }\n  });\n\n  if (highlights) {\n    highlights.months.forEach(month => {\n      const index = findIndex(d => d.month === month)(data);\n      plotBands.push({\n        color: highlights.color,\n        from: index - 0.5,\n        to: index + 0.5\n      });\n    });\n  }\n\n  return (\n    <Chart\n      key={data.length}\n      options={{\n        chart: {\n          animation: false,\n          height,\n          type: \"column\",\n          events: {\n            click: event => {\n              onSelectMonth &&\n                onSelectMonth(data[Math.round(event.xAxis[0].value)].month);\n            }\n          }\n        },\n        xAxis: {\n          categories,\n          plotBands,\n          plotLines: yearLines\n        },\n        yAxis: {\n          endOnTick: false,\n          startOnTick: false,\n          gridLineColor: \"#f0f0f0\",\n          labels: {\n            align: \"left\",\n            x: 0,\n            y: -2,\n            style: { color: \"#bbb\", fontSize: \"9px\" },\n            zIndex: 3\n          },\n          tickPixelInterval: 30,\n          title: { text: null },\n          plotLines: average && [\n            {\n              color: \"#aaa\",\n              dashStyle: \"Dot\",\n              width: 1,\n              value: -average,\n              zIndex: 2\n            }\n          ]\n        },\n        plotOptions: {\n          series: { animation: false, stacking: stacked ? \"normal\" : null }\n        },\n        series: series.map(s => {\n          if (s.type === \"line\") {\n            return {\n              color: s.color,\n              data: data.map(s.valueFunction),\n              enableMouseTracking: false,\n              type: \"line\",\n              lineWidth: 1,\n              marker: {\n                radius: 0\n              },\n              zIndex: 3\n            };\n          }\n\n          return {\n            borderWidth: 0,\n            color: s.color,\n            data: data.map(s.valueFunction),\n            enableMouseTracking: false,\n            states: { hover: { brightness: 0 } }\n          };\n        })\n      }}\n    />\n  );\n};\n\nMonthlyChart.propTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      month: PropTypes.string.isRequired\n    })\n  ).isRequired,\n  series: PropTypes.arrayOf(\n    PropTypes.shape({\n      color: PropTypes.string.isRequired,\n      valueFunction: PropTypes.func.isRequired,\n      type: PropTypes.oneOf([\"line\"])\n    })\n  ).isRequired,\n  average: PropTypes.number,\n  height: PropTypes.number,\n  selectedMonth: PropTypes.string,\n  stacked: PropTypes.bool,\n  onSelectMonth: PropTypes.func\n};\n\nMonthlyChart.defaultProps = { height: 140, stacked: true };\n\nexport default MonthlyChart;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { primaryColor } from \"../styleVariables\";\n\nconst PADDING = 2;\nconst WIDTH = 32;\nconst HEIGHT = 18;\n\nconst Track = styled.div`\n  box-sizing: border-box;\n  padding: ${PADDING}px;\n  display: inline-block;\n  width: ${WIDTH}px;\n  height: ${HEIGHT}px;\n  border-radius: ${HEIGHT / 2}px;\n  background-color: ${props => (props.on ? primaryColor : \"#ddd\")};\n  transition: background-color 0.15s ease-in-out;\n`;\n\nconst Handle = styled.div`\n  box-sizing: border-box;\n  height: ${HEIGHT - 2 * PADDING}px;\n  width: ${HEIGHT - 2 * PADDING}px;\n  border-radius: 50%;\n  background-color: #fff;\n  transform: translate3d(${props => (props.on ? WIDTH - HEIGHT : 0)}px, 0, 0);\n  transition: transform 0.15s ease-in-out;\n`;\n\nconst Toggle = ({ on, onClick }) => (\n  <Track on={on} onClick={onClick}>\n    <Handle on={on} />\n  </Track>\n);\n\nToggle.propTypes = {\n  on: PropTypes.bool.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default Toggle;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Toggle from \"./Toggle\";\n\nconst Container = styled.div`\n  user-select: none;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin: 10px 0;\n`;\n\nconst Label = styled.div``;\n\nconst ToggleWithLabel = ({ label, name, checked, onChange }) => (\n  <Container\n    onClick={() => {\n      onChange({ target: { name, checked: !checked } });\n    }}\n  >\n    <Label>{label}</Label>\n    <Toggle\n      on={checked}\n      onClick={() => {\n        onChange({ target: { name, checked: !checked } });\n      }}\n    />\n  </Container>\n);\n\nToggleWithLabel.propTypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  checked: PropTypes.bool.isRequired,\n  onChange: PropTypes.func.isRequired\n};\n\nexport default ToggleWithLabel;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Modal from \"./Modal\";\nimport ToggleWithLabel from \"./ToggleWithLabel\";\nimport { MinorText } from \"./typeComponents\";\n\nconst MonthByMonthSettingsModal = ({\n  excludeFirstMonth,\n  excludeLastMonth,\n  open,\n  onClose,\n  onSetExclusion\n}) => (\n  <Modal open={open} onClose={onClose} title=\"Chart Settings\" width={240}>\n    <ToggleWithLabel\n      checked={excludeFirstMonth}\n      label=\"Exclude first month\"\n      name=\"excludeFirstMonth\"\n      onChange={() => {\n        onSetExclusion({ month: \"first\", exclude: !excludeFirstMonth });\n      }}\n    />\n    <ToggleWithLabel\n      checked={excludeLastMonth}\n      label=\"Exclude last month\"\n      name=\"excludeLastMonth\"\n      onChange={() => {\n        onSetExclusion({ month: \"last\", exclude: !excludeLastMonth });\n      }}\n    />\n    <MinorText style={{ marginTop: 5 }}>\n      Excluding incomplete months may lead to more representative averages\n    </MinorText>\n  </Modal>\n);\n\nMonthByMonthSettingsModal.propTypes = {\n  excludeFirstMonth: PropTypes.bool.isRequired,\n  excludeLastMonth: PropTypes.bool.isRequired,\n  open: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n  onSetExclusion: PropTypes.func.isRequired\n};\n\nexport default MonthByMonthSettingsModal;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport moment from \"moment\";\nimport { getTransactionMonth } from \"../budgetUtils\";\nimport { groupBy, sumByProp } from \"../dataUtils\";\nimport { lightPrimaryColor, lighterPrimaryColor } from \"../styleVariables\";\nimport CollapsibleSection from \"./CollapsibleSection\";\nimport ChartNumbers from \"./ChartNumbers\";\nimport MonthlyChart from \"./MonthlyChart\";\nimport MonthByMonthSettingsModal from \"./MonthByMonthSettingsModal\";\n\nconst MonthByMonthSection = ({\n  excludeFirstMonth,\n  excludeLastMonth,\n  expectPositive,\n  highlightFunction,\n  months,\n  selectedMonth,\n  title,\n  transactions,\n  onSelectMonth,\n  onSetExclusion\n}) => {\n  const [settingsModalOpen, setSettingsModalOpen] = useState(false);\n\n  let total = 0;\n  let selectedMonthTotal = 0;\n\n  const transactionsByMonth = groupBy(getTransactionMonth)(transactions);\n  const data = months.map(month => {\n    const grouped = groupBy(highlightFunction || (() => false))(\n      transactionsByMonth[month] || []\n    );\n    const amount = sumByProp(\"amount\")(grouped.false || []);\n    const highlighted = sumByProp(\"amount\")(grouped.true || []);\n    total += highlightFunction ? highlighted : amount;\n    if (month === selectedMonth) {\n      selectedMonthTotal = highlightFunction ? highlighted : amount;\n    }\n\n    return {\n      month,\n      amount: expectPositive ? amount : -amount,\n      highlighted: expectPositive ? highlighted : -highlighted\n    };\n  });\n\n  const chartNumbers = selectedMonth\n    ? [\n        { amount: total / months.length, label: \"average\" },\n        {\n          amount: selectedMonthTotal,\n          label: moment(selectedMonth).format(\"MMM YYYY\")\n        }\n      ]\n    : [\n        { amount: total / months.length, label: \"average\" },\n        {\n          amount: total,\n          label: \"total\"\n        }\n      ];\n  const series = [\n    {\n      color: highlightFunction ? lightPrimaryColor : lighterPrimaryColor,\n      valueFunction: d => d.amount\n    }\n  ];\n\n  if (highlightFunction) {\n    series.push({\n      color: lighterPrimaryColor,\n      valueFunction: d => d.highlighted\n    });\n  }\n\n  return (\n    <CollapsibleSection\n      title={title}\n      hasSettings\n      onClickSettings={() => {\n        setSettingsModalOpen(true);\n      }}\n    >\n      <ChartNumbers numbers={chartNumbers} expectPositive={expectPositive} />\n      <MonthlyChart\n        data={data}\n        average={total / months.length}\n        series={series}\n        selectedMonth={selectedMonth}\n        onSelectMonth={onSelectMonth}\n      />\n      <MonthByMonthSettingsModal\n        excludeFirstMonth={excludeFirstMonth}\n        excludeLastMonth={excludeLastMonth}\n        open={settingsModalOpen}\n        onClose={() => {\n          setSettingsModalOpen(false);\n        }}\n        onSetExclusion={onSetExclusion}\n      />\n    </CollapsibleSection>\n  );\n};\n\nMonthByMonthSection.propTypes = {\n  excludeFirstMonth: PropTypes.bool.isRequired,\n  excludeLastMonth: PropTypes.bool.isRequired,\n  months: PropTypes.arrayOf(PropTypes.string).isRequired,\n  transactions: PropTypes.arrayOf(PropTypes.object).isRequired,\n  onSelectMonth: PropTypes.func.isRequired,\n  onSetExclusion: PropTypes.func.isRequired,\n  highlightFunction: PropTypes.func,\n  selectedMonth: PropTypes.string,\n  title: PropTypes.string\n};\n\nMonthByMonthSection.defaultProps = { title: \"Month by Month\" };\n\nexport default MonthByMonthSection;\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport moment from \"moment\";\nimport {\n  useFlagState,\n  useMonthExclusions,\n  useSelectedEntityId,\n  useSelectedMonth\n} from \"../commonHooks\";\nimport { notAny, simpleMemoize } from \"../dataUtils\";\nimport {\n  getFirstMonth,\n  getTransactionMonth,\n  isIncome,\n  isStartingBalanceOrReconciliation,\n  isTransfer,\n  sanitizeName\n} from \"../budgetUtils\";\nimport PageLayout from \"./PageLayout\";\nimport MonthByMonthSection from \"./MonthByMonthSection\";\nimport GenericEntitiesSection from \"./GenericEntitiesSection\";\n\nconst getFilteredTransactions = simpleMemoize(\n  (budget, investmentAccounts, excludeFirstMonth, excludeLastMonth) => {\n    const firstMonth = getFirstMonth(budget);\n    const lastMonth = moment().format(\"YYYY-MM\");\n    return budget.transactions.filter(\n      notAny([\n        isStartingBalanceOrReconciliation(budget),\n        isTransfer(investmentAccounts),\n        transaction =>\n          excludeFirstMonth && getTransactionMonth(transaction) === firstMonth,\n        transaction =>\n          excludeLastMonth && getTransactionMonth(transaction) === lastMonth\n      ])\n    );\n  }\n);\n\nconst getFilteredIncomeTransactions = simpleMemoize(\n  (budget, investmentAccounts, excludeFirstMonth, excludeLastMonth) =>\n    getFilteredTransactions(\n      budget,\n      investmentAccounts,\n      excludeFirstMonth,\n      excludeLastMonth\n    ).filter(transaction => isIncome(budget)(transaction))\n);\n\nconst IncomePage = ({\n  budget,\n  historyAction,\n  investmentAccounts,\n  location,\n  sidebarTrigger,\n  title\n}) => {\n  const {\n    excludeFirstMonth,\n    excludeLastMonth,\n    months,\n    onSetExclusion\n  } = useMonthExclusions(budget);\n  const [selectedMonth, onSelectMonth] = useSelectedMonth();\n  const [selectedPayeeId, onSelectPayeeId] = useSelectedEntityId();\n  const [showAverage, , , onToggleShowAverage] = useFlagState(true);\n\n  const { payeesById } = budget;\n  const filteredTransactions = getFilteredIncomeTransactions(\n    budget,\n    investmentAccounts,\n    excludeFirstMonth,\n    excludeLastMonth\n  );\n  const transactionsInSelectedMonth =\n    selectedMonth &&\n    filteredTransactions.filter(\n      transaction => getTransactionMonth(transaction) === selectedMonth\n    );\n\n  return (\n    <PageLayout\n      historyAction={historyAction}\n      location={location}\n      sidebarTrigger={sidebarTrigger}\n      title={title}\n      content={\n        <Fragment>\n          <MonthByMonthSection\n            excludeFirstMonth={excludeFirstMonth}\n            excludeLastMonth={excludeLastMonth}\n            expectPositive\n            highlightFunction={\n              selectedPayeeId &&\n              (transaction => transaction.payee_id === selectedPayeeId)\n            }\n            months={months}\n            selectedMonth={selectedMonth}\n            title={\n              selectedPayeeId\n                ? `Month by Month: ${sanitizeName(\n                    budget.payeesById[selectedPayeeId].name\n                  )}`\n                : \"Month by Month\"\n            }\n            transactions={filteredTransactions}\n            onSelectMonth={onSelectMonth}\n            onSetExclusion={onSetExclusion}\n          />\n          <GenericEntitiesSection\n            key={`payee-${selectedMonth || \"all\"}`}\n            entityKey=\"payee_id\"\n            entitiesById={payeesById}\n            numMonths={selectedMonth ? 1 : months.length}\n            reverse\n            title={\n              selectedMonth\n                ? `Payees: ${moment(selectedMonth).format(\"MMMM\")}`\n                : \"Payees\"\n            }\n            transactions={transactionsInSelectedMonth || filteredTransactions}\n            selectedEntityId={selectedPayeeId}\n            showAverageToggle={!selectedMonth}\n            showAverage={showAverage}\n            onClickEntity={onSelectPayeeId}\n            onToggleAverage={onToggleShowAverage}\n          />\n        </Fragment>\n      }\n    />\n  );\n};\n\nIncomePage.propTypes = {\n  budget: PropTypes.object.isRequired,\n  historyAction: PropTypes.string.isRequired,\n  investmentAccounts: PropTypes.object.isRequired,\n  location: PropTypes.string.isRequired,\n  sidebarTrigger: PropTypes.node.isRequired,\n  title: PropTypes.string.isRequired\n};\n\nexport default IncomePage;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport moment from \"moment\";\nimport get from \"lodash/fp/get\";\nimport { SecondaryText, MinorText } from \"./typeComponents\";\nimport ListItem from \"./ListItem\";\nimport Amount from \"./Amount\";\nimport LabelWithMinorText from \"./LabelWithMinorText\";\n\nconst Transaction = ({ category, payee, memo, date, amount, isContinuing }) => (\n  <ListItem isContinuing={isContinuing}>\n    <div style={{ overflow: \"hidden\" }}>\n      <LabelWithMinorText\n        label={get(\"name\")(payee) || \"(no payee)\"}\n        minorText={(get(\"name\")(category) || \"\") + (memo ? ` (${memo})` : \"\")}\n      />\n      <MinorText>{moment(date).format(\"dddd, MMM D\")}</MinorText>\n    </div>\n    <SecondaryText>\n      <Amount amount={amount} expectNegative />\n    </SecondaryText>\n  </ListItem>\n);\n\nTransaction.propTypes = {\n  amount: PropTypes.number.isRequired,\n  date: PropTypes.string.isRequired,\n  category: PropTypes.shape({\n    name: PropTypes.string.isRequired\n  }),\n  isContinuing: PropTypes.bool,\n  memo: PropTypes.string,\n  payee: PropTypes.shape({\n    name: PropTypes.string.isRequired\n  })\n};\n\nexport default Transaction;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport CollapsibleSection from \"./CollapsibleSection\";\nimport Transaction from \"./Transaction\";\nimport NoTransactions from \"./NoTransactions\";\n\nconst TransactionsSection = ({\n  transactions,\n  title,\n  categoriesById,\n  payeesById\n}) => (\n  <CollapsibleSection title={title}>\n    {transactions.length ? (\n      transactions.map(\n        ({\n          id,\n          category_id: categoryId,\n          payee_id: payeeId,\n          date,\n          memo,\n          amount\n        }) => (\n          <Transaction\n            key={id}\n            amount={amount}\n            category={categoriesById[categoryId]}\n            date={date}\n            memo={memo}\n            payee={payeesById[payeeId]}\n          />\n        )\n      )\n    ) : (\n      <NoTransactions />\n    )}\n  </CollapsibleSection>\n);\n\nTransactionsSection.propTypes = {\n  categoriesById: PropTypes.object.isRequired,\n  payeesById: PropTypes.object.isRequired,\n  transactions: PropTypes.arrayOf(\n    PropTypes.shape({\n      amount: PropTypes.number.isRequired,\n      category_id: PropTypes.string.isRequired,\n      date: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,\n      payee_id: PropTypes.string\n    })\n  ).isRequired,\n  title: PropTypes.string\n};\n\nTransactionsSection.defaultProps = { title: \"Transactions\" };\n\nexport default TransactionsSection;\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { getTransactionMonth, sanitizeName } from \"../budgetUtils\";\nimport { sumByProp } from \"../dataUtils\";\nimport pages, { makeLink } from \"../pages\";\nimport PageLayout from \"./PageLayout\";\nimport DayByDaySection from \"./DayByDaySection\";\nimport GenericEntitiesSection from \"./GenericEntitiesSection\";\nimport TransactionsSection from \"./TransactionsSection\";\nimport { useSelectedEntityId } from \"../commonHooks\";\n\nconst CurrentMonthGroupPage = ({\n  budget,\n  categoryGroupId,\n  currentMonth,\n  historyAction,\n  location,\n  sidebarTrigger,\n  title\n}) => {\n  const [selectedCategoryId, onSelectCategoryId] = useSelectedEntityId();\n  const {\n    id: budgetId,\n    payeesById,\n    categories: allCategories,\n    categoriesById,\n    transactions: allTransactions\n  } = budget;\n\n  const selectedCategory =\n    selectedCategoryId && categoriesById[selectedCategoryId];\n  const categories = allCategories.filter(\n    category => category.category_group_id === categoryGroupId\n  );\n  const categoryIds = categories.map(category => category.id);\n  const transactionsInGroup = allTransactions.filter(transaction =>\n    categoryIds.includes(transaction.category_id)\n  );\n  const transactionsInGroupForMonth = transactionsInGroup.filter(\n    transaction => getTransactionMonth(transaction) === currentMonth\n  );\n  const highlightedTransactions =\n    selectedCategoryId &&\n    transactionsInGroupForMonth.filter(\n      transaction => transaction.category_id === selectedCategoryId\n    );\n\n  const spent = -sumByProp(\"activity\")(categories);\n  const available = sumByProp(\"balance\")(categories);\n\n  return (\n    <PageLayout\n      location={location}\n      historyAction={historyAction}\n      sidebarTrigger={sidebarTrigger}\n      budget={budget}\n      title={title}\n      content={\n        <Fragment>\n          <DayByDaySection\n            budgetId={budgetId}\n            currentMonth={currentMonth}\n            highlightFunction={\n              selectedCategoryId &&\n              (transaction => transaction.category_id === selectedCategoryId)\n            }\n            title={\n              selectedCategory\n                ? `Day by Day: ${sanitizeName(selectedCategory.name)}`\n                : \"Day by Day\"\n            }\n            transactions={transactionsInGroup}\n            total={spent + available}\n          />\n          <GenericEntitiesSection\n            entityKey=\"category_id\"\n            entitiesById={categoriesById}\n            expectNegative\n            linkFunction={categoryId =>\n              makeLink(pages.currentMonthCategory.path, {\n                budgetId,\n                categoryGroupId,\n                categoryId\n              })\n            }\n            selectedEntityId={selectedCategoryId}\n            title=\"Categories\"\n            transactions={transactionsInGroupForMonth}\n            showTransactionCount\n            onClickEntity={onSelectCategoryId}\n          />\n          <TransactionsSection\n            categoriesById={categoriesById}\n            payeesById={payeesById}\n            transactions={\n              highlightedTransactions || transactionsInGroupForMonth\n            }\n            title={\n              selectedCategory\n                ? `Transactions: ${sanitizeName(selectedCategory.name)}`\n                : \"Transactions\"\n            }\n          />\n        </Fragment>\n      }\n    />\n  );\n};\n\nCurrentMonthGroupPage.propTypes = {\n  budget: PropTypes.shape({\n    categories: PropTypes.array.isRequired,\n    id: PropTypes.string.isRequired,\n    payeesById: PropTypes.object.isRequired,\n    transactions: PropTypes.array.isRequired\n  }).isRequired,\n  categoryGroupId: PropTypes.string.isRequired,\n  currentMonth: PropTypes.string.isRequired,\n  historyAction: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  sidebarTrigger: PropTypes.node.isRequired,\n  title: PropTypes.string.isRequired\n};\n\nexport default CurrentMonthGroupPage;\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { getTransactionMonth } from \"../budgetUtils\";\nimport PageLayout from \"./PageLayout\";\nimport DayByDaySection from \"./DayByDaySection\";\nimport TransactionsSection from \"./TransactionsSection\";\n\nconst CurrentMonthCategoryPage = ({\n  budget,\n  currentMonth,\n  categoryId,\n  historyAction,\n  location,\n  sidebarTrigger,\n  title\n}) => {\n  const {\n    id: budgetId,\n    payeesById,\n    categoriesById,\n    transactions: allTransactions\n  } = budget;\n\n  const category = categoriesById[categoryId];\n  const transactionsInCategory = allTransactions.filter(\n    transaction => transaction.category_id === categoryId\n  );\n  const transactionsInCategoryForMonth = transactionsInCategory.filter(\n    transaction => getTransactionMonth(transaction) === currentMonth\n  );\n\n  const spent = -category.activity;\n  const available = category.balance;\n\n  return (\n    <PageLayout\n      historyAction={historyAction}\n      location={location}\n      sidebarTrigger={sidebarTrigger}\n      budget={budget}\n      title={title}\n      content={\n        <Fragment>\n          <DayByDaySection\n            key={category ? category.name : \"day-by-day\"}\n            budgetId={budgetId}\n            currentMonth={currentMonth}\n            title=\"Day by Day\"\n            transactions={transactionsInCategory}\n            total={spent + available}\n          />\n          <TransactionsSection\n            categoriesById={categoriesById}\n            payeesById={payeesById}\n            transactions={transactionsInCategoryForMonth}\n          />\n        </Fragment>\n      }\n    />\n  );\n};\n\nCurrentMonthCategoryPage.propTypes = {\n  budget: PropTypes.shape({\n    categories: PropTypes.array.isRequired,\n    id: PropTypes.string.isRequired,\n    payeesById: PropTypes.object.isRequired,\n    transactions: PropTypes.array.isRequired\n  }).isRequired,\n  categoryGroupId: PropTypes.string.isRequired,\n  categoryId: PropTypes.string.isRequired,\n  currentMonth: PropTypes.string.isRequired,\n  historyAction: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  sidebarTrigger: PropTypes.node.isRequired,\n  title: PropTypes.string.isRequired\n};\n\nexport default CurrentMonthCategoryPage;\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport moment from \"moment\";\nimport { getTransactionMonth, sanitizeName } from \"../budgetUtils\";\nimport pages, { makeLink } from \"../pages\";\nimport { useTrendsShowAverage } from \"../commonHooks\";\nimport PageLayout from \"./PageLayout\";\nimport MonthByMonthSection from \"./MonthByMonthSection\";\nimport GenericEntitiesSection from \"./GenericEntitiesSection\";\n\nconst GroupsPage = ({\n  budget,\n  excludeFirstMonth,\n  excludeLastMonth,\n  historyAction,\n  location,\n  months,\n  sidebarTrigger,\n  title,\n  transactions,\n  selectedMonth,\n  selectedGroupId,\n  onSelectGroup,\n  onSelectMonth,\n  onSetExclusion\n}) => {\n  const [showAverage, onToggleShowAverage] = useTrendsShowAverage(budget.id);\n\n  const { categoryGroupsById, categoriesById, id: budgetId } = budget;\n  const selectedGroup = selectedGroupId && categoryGroupsById[selectedGroupId];\n\n  const transactionsForMonth =\n    selectedMonth &&\n    transactions.filter(\n      transaction => getTransactionMonth(transaction) === selectedMonth\n    );\n\n  return (\n    <PageLayout\n      historyAction={historyAction}\n      location={location}\n      sidebarTrigger={sidebarTrigger}\n      title={title}\n      content={\n        <Fragment>\n          <MonthByMonthSection\n            excludeFirstMonth={excludeFirstMonth}\n            excludeLastMonth={excludeLastMonth}\n            highlightFunction={\n              selectedGroupId &&\n              (transaction =>\n                categoriesById[transaction.category_id].category_group_id ===\n                selectedGroupId)\n            }\n            months={months}\n            selectedMonth={selectedMonth}\n            title={\n              selectedGroup\n                ? `Month by Month: ${sanitizeName(selectedGroup.name)}`\n                : \"Month by Month\"\n            }\n            transactions={transactions}\n            onSelectMonth={onSelectMonth}\n            onSetExclusion={onSetExclusion}\n          />\n          <GenericEntitiesSection\n            key={selectedMonth || \"all\"}\n            entityFunction={transaction =>\n              categoriesById[transaction.category_id].category_group_id\n            }\n            entityKey=\"category_group_id\"\n            entitiesById={categoryGroupsById}\n            expectNegative\n            linkFunction={categoryGroupId =>\n              makeLink(pages.group.path, { budgetId, categoryGroupId })\n            }\n            selectedEntityId={selectedGroupId}\n            title={\n              selectedMonth\n                ? `Category Groups: ${moment(selectedMonth).format(\"MMMM\")}`\n                : \"Category Groups\"\n            }\n            transactions={transactionsForMonth || transactions}\n            onClickEntity={onSelectGroup}\n            numMonths={months.length}\n            showAverageToggle={!selectedMonth}\n            showAverage={showAverage && !selectedMonth}\n            onToggleAverage={onToggleShowAverage}\n          />\n        </Fragment>\n      }\n    />\n  );\n};\n\nGroupsPage.propTypes = {\n  budget: PropTypes.object.isRequired,\n  excludeFirstMonth: PropTypes.bool.isRequired,\n  excludeLastMonth: PropTypes.bool.isRequired,\n  historyAction: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  months: PropTypes.arrayOf(PropTypes.string).isRequired,\n  sidebarTrigger: PropTypes.node.isRequired,\n  title: PropTypes.string.isRequired,\n  transactions: PropTypes.arrayOf(PropTypes.object).isRequired,\n  onSelectGroup: PropTypes.func.isRequired,\n  onSelectMonth: PropTypes.func.isRequired,\n  onSetExclusion: PropTypes.func.isRequired,\n  selectedGroupId: PropTypes.string,\n  selectedMonth: PropTypes.string\n};\n\nexport default GroupsPage;\n","import React, { Component, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport moment from \"moment\";\nimport compose from \"lodash/fp/compose\";\nimport sortBy from \"lodash/fp/sortBy\";\nimport { getTransactionMonth } from \"../budgetUtils\";\nimport AnimateHeight from \"react-animate-height-auto\";\nimport CollapsibleSection from \"./CollapsibleSection\";\nimport Transaction from \"./Transaction\";\nimport NoTransactions from \"./NoTransactions\";\nimport SeeAll from \"./SeeAll\";\n\nconst LIMIT = 3;\n\nclass TransactionsByMonthSection extends Component {\n  static propTypes = {\n    categoriesById: PropTypes.object.isRequired,\n    payeesById: PropTypes.object.isRequired,\n    selectedMonth: PropTypes.string.isRequired,\n    transactions: PropTypes.arrayOf(PropTypes.object).isRequired,\n    limitShowing: PropTypes.bool,\n    selectedCategoryId: PropTypes.string,\n    selectedPayeeId: PropTypes.string\n  };\n\n  static defaultProps = { limitShowing: true };\n\n  state = { allMounted: false, showAll: false };\n\n  handleToggleShowAll = () => {\n    const { allMounted, showAll } = this.state;\n\n    if (allMounted) {\n      this.setState({ showAll: !showAll });\n    } else {\n      this.setState({ allMounted: true });\n      requestAnimationFrame(() => {\n        this.setState({ showAll: true });\n      });\n    }\n  };\n\n  render() {\n    const {\n      categoriesById,\n      payeesById,\n      selectedCategoryId,\n      selectedPayeeId,\n      selectedMonth,\n      transactions,\n      limitShowing: limitShowingProp\n    } = this.props;\n    const { allMounted, showAll } = this.state;\n\n    const selectedCategory =\n      selectedCategoryId && categoriesById[selectedCategoryId];\n    const selectedPayee = selectedPayeeId && payeesById[selectedPayeeId];\n    const month = moment(selectedMonth).format(\"MMMM\");\n    const transactionsForMonth = compose([\n      limitShowingProp\n        ? sortBy(\"amount\")\n        : transactions => transactions.reverse(),\n      transactions =>\n        transactions.filter(\n          transaction =>\n            getTransactionMonth(transaction) === selectedMonth &&\n            (!selectedCategoryId ||\n              transaction.category_id === selectedCategoryId) &&\n            (!selectedPayeeId || transaction.payee_id === selectedPayeeId)\n        )\n    ])(transactions);\n    const limitShowing =\n      limitShowingProp && transactionsForMonth.length > LIMIT + 2;\n    const topTransactions = limitShowing\n      ? transactionsForMonth.slice(0, LIMIT)\n      : transactionsForMonth;\n    const otherTransactions = limitShowing\n      ? transactionsForMonth.slice(LIMIT)\n      : [];\n\n    return (\n      <CollapsibleSection\n        title={\n          selectedPayee\n            ? `Transactions: ${month}, ${selectedPayee.name}`\n            : selectedCategory\n              ? `Transactions: ${month}, ${selectedCategory.name}`\n              : `Transactions: ${month}`\n        }\n      >\n        {topTransactions.length ? (\n          topTransactions.map(\n            ({\n              id,\n              date,\n              amount,\n              memo,\n              payee_id: payeeId,\n              category_id: categoryId\n            }) => (\n              <Transaction\n                key={id}\n                amount={amount}\n                category={categoriesById[categoryId]}\n                date={date}\n                memo={memo}\n                payee={payeesById[payeeId]}\n              />\n            )\n          )\n        ) : (\n          <NoTransactions />\n        )}\n        {allMounted && (\n          <AnimateHeight isExpanded={showAll}>\n            <Fragment>\n              {otherTransactions.map(\n                ({\n                  id,\n                  date,\n                  amount,\n                  payee_id: payeeId,\n                  category_id: categoryId\n                }) => (\n                  <Transaction\n                    key={id}\n                    amount={amount}\n                    category={categoriesById[categoryId]}\n                    date={date}\n                    payee={payeesById[payeeId]}\n                    isContinuing\n                  />\n                )\n              )}\n            </Fragment>\n          </AnimateHeight>\n        )}\n        {!!otherTransactions.length && (\n          <SeeAll\n            count={transactionsForMonth.length}\n            pluralizedName=\"transactions\"\n            showAll={showAll}\n            onToggle={this.handleToggleShowAll}\n          />\n        )}\n      </CollapsibleSection>\n    );\n  }\n}\n\nexport default TransactionsByMonthSection;\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport moment from \"moment\";\nimport compose from \"lodash/fp/compose\";\nimport sortBy from \"lodash/fp/sortBy\";\nimport { getTransactionMonth, sanitizeName } from \"../budgetUtils\";\nimport pages, { makeLink } from \"../pages\";\nimport { useTrendsShowAverage } from \"../commonHooks\";\nimport PageLayout from \"./PageLayout\";\nimport MonthByMonthSection from \"./MonthByMonthSection\";\nimport TransactionsByMonthSection from \"./TransactionsByMonthSection\";\nimport GenericEntitiesSection from \"./GenericEntitiesSection\";\n\nconst GroupPage = ({\n  budget,\n  categoryGroupId,\n  excludeFirstMonth,\n  excludeLastMonth,\n  historyAction,\n  location,\n  months,\n  selectedMonth,\n  selectedCategoryId,\n  sidebarTrigger,\n  title,\n  transactions,\n  onSelectMonth,\n  onSelectCategory,\n  onSetExclusion\n}) => {\n  const [showAverage, onToggleShowAverage] = useTrendsShowAverage(budget.id);\n\n  const {\n    categories,\n    categoriesById,\n    categoryGroupsById,\n    payeesById,\n    id: budgetId\n  } = budget;\n  const categoryGroup = categoryGroupsById[categoryGroupId];\n  const selectedCategory =\n    selectedCategoryId && categoriesById[selectedCategoryId];\n  const categoriesInGroup = categories.filter(\n    category => category.category_group_id === categoryGroup.id\n  );\n  const categoryIds = categoriesInGroup.map(category => category.id);\n  const transactionsInGroup = transactions.filter(transaction =>\n    categoryIds.includes(transaction.category_id)\n  );\n  const transactionsInSelectedMonth =\n    selectedMonth &&\n    compose([\n      sortBy(\"amount\"),\n      transactions =>\n        transactions.filter(\n          transaction => getTransactionMonth(transaction) === selectedMonth\n        )\n    ])(transactionsInGroup);\n\n  return (\n    <PageLayout\n      historyAction={historyAction}\n      location={location}\n      sidebarTrigger={sidebarTrigger}\n      budget={budget}\n      title={title}\n      content={\n        <Fragment>\n          <MonthByMonthSection\n            excludeFirstMonth={excludeFirstMonth}\n            excludeLastMonth={excludeLastMonth}\n            months={months}\n            highlightFunction={\n              selectedCategoryId &&\n              (transaction => transaction.category_id === selectedCategoryId)\n            }\n            selectedMonth={selectedMonth}\n            title={\n              selectedCategory\n                ? `Month by Month: ${sanitizeName(selectedCategory.name)}`\n                : \"Month by Month\"\n            }\n            transactions={transactionsInGroup}\n            onSelectMonth={onSelectMonth}\n            onSetExclusion={onSetExclusion}\n          />\n          <GenericEntitiesSection\n            key={`categories-${selectedMonth || \"all\"}`}\n            entityKey=\"category_id\"\n            entitiesById={categoriesById}\n            expectNegative\n            linkFunction={categoryId =>\n              makeLink(pages.category.path, {\n                budgetId,\n                categoryGroupId: categoryGroup.id,\n                categoryId\n              })\n            }\n            title={\n              selectedMonth\n                ? `Categories: ${moment(selectedMonth).format(\"MMMM\")}`\n                : \"Categories\"\n            }\n            transactions={transactionsInSelectedMonth || transactionsInGroup}\n            selectedEntityId={selectedCategoryId}\n            onClickEntity={onSelectCategory}\n            showAverageToggle={!selectedMonth}\n            showAverage={showAverage && !selectedMonth}\n            numMonths={months.length}\n            onToggleAverage={onToggleShowAverage}\n            limitShowing\n          />\n          {selectedMonth && transactionsInSelectedMonth.length > 0 && (\n            <TransactionsByMonthSection\n              key={`transactions-${selectedMonth ||\n                \"all\"}-${selectedCategoryId || \"all\"}`}\n              categoriesById={categoriesById}\n              payeesById={payeesById}\n              selectedMonth={selectedMonth}\n              selectedCategoryId={selectedCategoryId}\n              transactions={transactionsInSelectedMonth}\n            />\n          )}\n        </Fragment>\n      }\n    />\n  );\n};\n\nGroupPage.propTypes = {\n  budget: PropTypes.shape({\n    transactions: PropTypes.arrayOf(\n      PropTypes.shape({\n        categoryId: PropTypes.string\n      })\n    ).isRequired,\n    payeesById: PropTypes.object.isRequired,\n    categoryGroupsById: PropTypes.objectOf(\n      PropTypes.shape({\n        id: PropTypes.string.isRequired\n      })\n    ).isRequired\n  }).isRequired,\n  categoryGroupId: PropTypes.string.isRequired,\n  excludeFirstMonth: PropTypes.bool.isRequired,\n  excludeLastMonth: PropTypes.bool.isRequired,\n  historyAction: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  months: PropTypes.arrayOf(PropTypes.string).isRequired,\n  sidebarTrigger: PropTypes.node.isRequired,\n  title: PropTypes.string.isRequired,\n  transactions: PropTypes.arrayOf(PropTypes.object).isRequired,\n  onSelectCategory: PropTypes.func.isRequired,\n  onSelectMonth: PropTypes.func.isRequired,\n  onSetExclusion: PropTypes.func.isRequired,\n  selectedCategoryId: PropTypes.string,\n  selectedMonth: PropTypes.string\n};\n\nexport default GroupPage;\n","import { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst INITIAL_STATE = {\n  selectedMonth: null,\n  selectedGroupId: null,\n  selectedCategoryId: null,\n  selectedPayeeId: null\n};\n\nclass CategoriesState extends Component {\n  static propTypes = {\n    action: PropTypes.oneOf([\"PUSH\", \"POP\", \"REPLACE\"]).isRequired,\n    children: PropTypes.func.isRequired,\n    location: PropTypes.string.isRequired\n  };\n\n  state = INITIAL_STATE;\n\n  cachedStates = {};\n\n  getSnapshotBeforeUpdate() {\n    return this.state;\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    const { location, action } = this.props;\n\n    if (location === prevProps.location) {\n      return;\n    }\n\n    if (action === \"POP\") {\n      this.cachedStates[prevProps.location] = snapshot;\n      this.setState(this.cachedStates[location]);\n    }\n\n    if (action === \"PUSH\") {\n      this.cachedStates[prevProps.location] = snapshot;\n      this.setState(INITIAL_STATE);\n    }\n\n    if (action === \"REPLACE\") {\n      this.setState(INITIAL_STATE);\n    }\n  }\n\n  handleSelectMonth = month => {\n    this.setState(state => ({\n      ...state,\n      selectedMonth: state.selectedMonth === month ? null : month\n    }));\n  };\n\n  handleSelectGroup = groupId => {\n    this.setState(state => ({\n      ...state,\n      selectedGroupId: state.selectedGroupId === groupId ? null : groupId\n    }));\n  };\n\n  handleSelectCategory = categoryId => {\n    this.setState(state => ({\n      ...state,\n      selectedCategoryId:\n        state.selectedCategoryId === categoryId ? null : categoryId\n    }));\n  };\n\n  handleSelectPayee = payeeId => {\n    this.setState(state => ({\n      ...state,\n      selectedPayeeId: state.selectedPayeeId === payeeId ? null : payeeId\n    }));\n  };\n\n  render() {\n    return this.props.children({\n      ...this.state,\n      onSelectMonth: this.handleSelectMonth,\n      onSelectGroup: this.handleSelectGroup,\n      onSelectCategory: this.handleSelectCategory,\n      onSelectPayee: this.handleSelectPayee,\n      onSetExclusion: this.handleSetExclusion\n    });\n  }\n}\n\nexport default CategoriesState;\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport moment from \"moment\";\nimport { getTransactionMonth, sanitizeName } from \"../budgetUtils\";\nimport pages, { makeLink } from \"../pages\";\nimport PageLayout from \"./PageLayout\";\nimport MonthByMonthSection from \"./MonthByMonthSection\";\nimport GenericEntitiesSection from \"./GenericEntitiesSection\";\nimport TransactionsByMonthSection from \"./TransactionsByMonthSection\";\n\nconst CategoryPage = ({\n  categoryId,\n  budget,\n  excludeFirstMonth,\n  excludeLastMonth,\n  historyAction,\n  location,\n  months,\n  selectedMonth,\n  selectedPayeeId,\n  sidebarTrigger,\n  title,\n  transactions,\n  onSelectMonth,\n  onSelectPayee,\n  onSetExclusion\n}) => {\n  const { categoriesById, payeesById, id: budgetId } = budget;\n  const category = categoriesById[categoryId];\n  const selectedPayee = selectedPayeeId && payeesById[selectedPayeeId];\n  const transactionsForCategory = transactions.filter(\n    transaction => transaction.category_id === categoryId\n  );\n  const transactionsForMonth =\n    selectedMonth &&\n    transactionsForCategory.filter(\n      transaction => getTransactionMonth(transaction) === selectedMonth\n    );\n\n  return (\n    <PageLayout\n      historyAction={historyAction}\n      location={location}\n      sidebarTrigger={sidebarTrigger}\n      budget={budget}\n      title={title}\n      content={\n        <Fragment>\n          <MonthByMonthSection\n            excludeFirstMonth={excludeFirstMonth}\n            excludeLastMonth={excludeLastMonth}\n            months={months}\n            onSetExclusion={onSetExclusion}\n            highlightFunction={\n              selectedPayeeId &&\n              (transaction => transaction.payee_id === selectedPayeeId)\n            }\n            selectedMonth={selectedMonth}\n            title={\n              selectedPayee\n                ? `Month by Month: ${sanitizeName(selectedPayee.name)}`\n                : \"Month by Month\"\n            }\n            transactions={transactionsForCategory}\n            onSelectMonth={onSelectMonth}\n          />\n          <GenericEntitiesSection\n            key={`payees-${selectedMonth || \"all\"}`}\n            emptyName=\"(no payee)\"\n            entitiesById={payeesById}\n            entityKey=\"payee_id\"\n            expectNegative\n            linkFunction={payeeId =>\n              makeLink(pages.categoryPayee.path, {\n                budgetId,\n                categoryGroupId: category.category_group_id,\n                categoryId: categoryId,\n                payeeId\n              })\n            }\n            title={\n              selectedMonth\n                ? `Payees: ${moment(selectedMonth).format(\"MMMM\")}`\n                : \"Payees\"\n            }\n            transactions={transactionsForMonth || transactionsForCategory}\n            selectedEntityId={selectedPayeeId}\n            onClickEntity={onSelectPayee}\n            limitShowing\n          />\n          {selectedMonth &&\n            transactionsForMonth.length > 0 && (\n              <TransactionsByMonthSection\n                key={`transactions-${selectedMonth ||\n                  \"all\"}-${selectedPayeeId || \"all\"}`}\n                categoriesById={categoriesById}\n                payeesById={payeesById}\n                transactions={transactionsForMonth}\n                selectedMonth={selectedMonth}\n                selectedPayeeId={selectedPayeeId}\n              />\n            )}\n        </Fragment>\n      }\n    />\n  );\n};\n\nCategoryPage.propTypes = {\n  budget: PropTypes.shape({\n    categoriesById: PropTypes.objectOf(\n      PropTypes.shape({\n        id: PropTypes.string.isRequired\n      })\n    ).isRequired,\n    transactions: PropTypes.arrayOf(\n      PropTypes.shape({\n        payee_id: PropTypes.string\n      })\n    ).isRequired,\n    payeesById: PropTypes.object.isRequired\n  }).isRequired,\n  categoryId: PropTypes.string.isRequired,\n  excludeFirstMonth: PropTypes.bool.isRequired,\n  excludeLastMonth: PropTypes.bool.isRequired,\n  historyAction: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  months: PropTypes.arrayOf(PropTypes.string).isRequired,\n  sidebarTrigger: PropTypes.node.isRequired,\n  title: PropTypes.string.isRequired,\n  transactions: PropTypes.arrayOf(PropTypes.object).isRequired,\n  onSelectMonth: PropTypes.func.isRequired,\n  onSelectPayee: PropTypes.func.isRequired,\n  onSetExclusion: PropTypes.func.isRequired,\n  selectedMonth: PropTypes.string,\n  selectedPayeeId: PropTypes.string\n};\n\nexport default CategoryPage;\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport PageLayout from \"./PageLayout\";\nimport MonthByMonthSection from \"./MonthByMonthSection\";\nimport TransactionsByMonthSection from \"./TransactionsByMonthSection\";\n\nconst CategoryPayeePage = ({\n  budget,\n  categoryId,\n  excludeFirstMonth,\n  excludeLastMonth,\n  historyAction,\n  location,\n  months,\n  payeeId,\n  selectedMonth,\n  sidebarTrigger,\n  title,\n  transactions,\n  onSelectMonth,\n  onSetExclusion\n}) => {\n  const { categoriesById, payeesById } = budget;\n  const transactionsForCategoryAndPayee = transactions.filter(\n    transaction =>\n      transaction.category_id === categoryId && transaction.payee_id === payeeId\n  );\n\n  return (\n    <PageLayout\n      historyAction={historyAction}\n      location={location}\n      sidebarTrigger={sidebarTrigger}\n      budget={budget}\n      title={title}\n      content={\n        <Fragment>\n          <MonthByMonthSection\n            excludeFirstMonth={excludeFirstMonth}\n            excludeLastMonth={excludeLastMonth}\n            months={months}\n            selectedMonth={selectedMonth}\n            transactions={transactionsForCategoryAndPayee}\n            onSelectMonth={onSelectMonth}\n            onSetExclusion={onSetExclusion}\n          />\n          {selectedMonth && (\n            <TransactionsByMonthSection\n              categoriesById={categoriesById}\n              payeesById={payeesById}\n              selectedMonth={selectedMonth}\n              transactions={transactionsForCategoryAndPayee}\n              limitShowing={false}\n            />\n          )}\n        </Fragment>\n      }\n    />\n  );\n};\n\nCategoryPayeePage.propTypes = {\n  budget: PropTypes.shape({\n    payeesById: PropTypes.objectOf(\n      PropTypes.shape({\n        id: PropTypes.string.isRequired\n      })\n    ).isRequired,\n    categoriesById: PropTypes.objectOf(\n      PropTypes.shape({\n        id: PropTypes.string.isRequired\n      })\n    ).isRequired\n  }).isRequired,\n  categoryId: PropTypes.string.isRequired,\n  excludeFirstMonth: PropTypes.bool.isRequired,\n  excludeLastMonth: PropTypes.bool.isRequired,\n  historyAction: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  months: PropTypes.arrayOf(PropTypes.string).isRequired,\n  payeeId: PropTypes.string.isRequired,\n  sidebarTrigger: PropTypes.node.isRequired,\n  title: PropTypes.string.isRequired,\n  transactions: PropTypes.arrayOf(\n    PropTypes.shape({\n      payee_id: PropTypes.string.isRequired\n    })\n  ).isRequired,\n  onSelectMonth: PropTypes.func.isRequired,\n  onSetExclusion: PropTypes.func.isRequired,\n  selectedMonth: PropTypes.string\n};\n\nexport default CategoryPayeePage;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  primaryColor,\n  lightPrimaryColor,\n  negativeChartColor\n} from \"../styleVariables\";\nimport MonthlyChart from \"./MonthlyChart\";\n\nconst IncomeVsExpensesChart = ({ data, onSelectMonth, selectedMonth }) => (\n  <MonthlyChart\n    data={data}\n    height={180}\n    selectedMonth={selectedMonth}\n    series={[\n      { color: lightPrimaryColor, valueFunction: d => d.income },\n      { color: negativeChartColor, valueFunction: d => d.expenses },\n      {\n        type: \"line\",\n        color: primaryColor,\n        valueFunction: d => d.income + d.expenses\n      }\n    ]}\n    onSelectMonth={onSelectMonth}\n  />\n);\n\nIncomeVsExpensesChart.propTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      expenses: PropTypes.number.isRequired,\n      income: PropTypes.number.isRequired,\n      month: PropTypes.string.isRequired\n    })\n  ).isRequired,\n  onSelectMonth: PropTypes.func.isRequired,\n  selectedMonth: PropTypes.string\n};\n\nexport default IncomeVsExpensesChart;\n","import React, { Component, PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport AnimateHeight from \"react-animate-height-auto\";\nimport { SecondaryText } from \"./typeComponents\";\nimport Amount from \"./Amount\";\nimport ListItem from \"./ListItem\";\nimport ToggleNode from \"./ToggleNode\";\n\nconst INDENTATION = 18;\n\nclass BreakdownNode extends Component {\n  static propTypes = {\n    amount: PropTypes.number.isRequired,\n    id: PropTypes.string.isRequired,\n    isTopLevel: PropTypes.bool.isRequired,\n    name: PropTypes.oneOfType([PropTypes.node, PropTypes.func]).isRequired,\n    nodes: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.string.isRequired\n      })\n    ),\n    valueRenderer: PropTypes.func\n  };\n\n  state = { expanded: false, childrenMounted: false };\n\n  handleToggleExpand = () => {\n    const { expanded, childrenMounted } = this.state;\n\n    if (childrenMounted) {\n      this.setState({ expanded: !expanded });\n    } else {\n      this.setState({ childrenMounted: true });\n      requestAnimationFrame(() => {\n        this.setState({ expanded: true });\n      });\n    }\n  };\n\n  render() {\n    const { name, id, amount, nodes, isTopLevel, valueRenderer } = this.props;\n    const { expanded, childrenMounted } = this.state;\n    const hasChildNodes = !!nodes && nodes.length > 0;\n\n    return (\n      <Container hasChildNodes={hasChildNodes} isTopLevel={isTopLevel}>\n        {hasChildNodes ? (\n          <ToggleNode\n            id={id}\n            name={name}\n            amount={amount}\n            expanded={expanded}\n            onToggle={this.handleToggleExpand}\n            valueRenderer={valueRenderer}\n          />\n        ) : (\n          <LeafNode\n            id={id}\n            name={name}\n            amount={amount}\n            valueRenderer={valueRenderer}\n          />\n        )}\n\n        {hasChildNodes &&\n          childrenMounted && (\n            <AnimateHeight isExpanded={expanded}>\n              <Nodes nodes={nodes} valueRenderer={valueRenderer} />\n            </AnimateHeight>\n          )}\n      </Container>\n    );\n  }\n}\n\nclass Nodes extends PureComponent {\n  render() {\n    const { nodes, valueRenderer } = this.props;\n    return (\n      <div style={{ paddingLeft: INDENTATION }}>\n        {nodes.map(node => (\n          <BreakdownNode\n            {...node}\n            key={node.id}\n            isTopLevel={false}\n            valueRenderer={valueRenderer}\n          />\n        ))}\n      </div>\n    );\n  }\n}\n\nconst NodeWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 8px 0;\n  user-select: none;\n\n  ${ListItem}:first-child > & {\n    padding-top: 0;\n  }\n`;\n\nconst LeafNode = ({ name, id, amount, valueRenderer }) => (\n  <NodeWrapper>\n    <SecondaryText>{name}</SecondaryText>\n    {valueRenderer ? (\n      valueRenderer({ amount, id })\n    ) : (\n      <SecondaryText>\n        <Amount amount={amount} />\n      </SecondaryText>\n    )}\n  </NodeWrapper>\n);\n\nconst Container = ({ isTopLevel, hasChildNodes, children }) =>\n  isTopLevel ? (\n    <ListItem style={{ display: \"block\", padding: 0 }}>{children}</ListItem>\n  ) : (\n    children\n  );\n\nexport default BreakdownNode;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport BreakdownNode from \"./BreakdownNode\";\n\nconst Breakdown = ({ nodes, valueRenderer }) =>\n  nodes.map(({ id, name, amount, nodes }) => (\n    <BreakdownNode\n      key={id}\n      id={id}\n      name={name}\n      amount={amount}\n      nodes={nodes}\n      valueRenderer={valueRenderer}\n      isTopLevel\n    />\n  ));\n\nBreakdown.propTypes = {\n  nodes: PropTypes.arrayOf(\n    PropTypes.shape({\n      amount: PropTypes.number.isRequired,\n      id: PropTypes.string.isRequired,\n      name: PropTypes.oneOfType([PropTypes.node, PropTypes.func]).isRequired,\n      nodes: PropTypes.array\n    })\n  ).isRequired,\n  valueRenderer: PropTypes.func\n};\n\nBreakdown.defaultProps = { reverse: false };\n\nexport default Breakdown;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport compose from \"lodash/fp/compose\";\nimport concat from \"lodash/fp/concat\";\nimport mapRaw from \"lodash/fp/map\";\nimport omit from \"lodash/fp/omit\";\nimport pick from \"lodash/fp/pick\";\nimport sortBy from \"lodash/fp/sortBy\";\nimport { sumByProp, groupByProp } from \"../dataUtils\";\nimport { getPayeeNodes } from \"../budgetUtils\";\nimport CollapsibleSection from \"./CollapsibleSection\";\nimport Breakdown from \"./Breakdown\";\nimport AmountWithPercentage from \"./AmountWithPercentage\";\n\nconst map = mapRaw.convert({ cap: false });\n\nconst ExpensesBreakdown = ({\n  categoriesById,\n  categoryGroupsById,\n  transactions,\n  totalIncome,\n  payeesById,\n  divideBy\n}) => {\n  const categoryNodes = compose([\n    map((transactions, categoryId) => {\n      const payeeNodes = getPayeeNodes({ payeesById, transactions }, divideBy);\n      return {\n        ...pick([\"id\", \"name\", \"category_group_id\"])(\n          categoriesById[categoryId]\n        ),\n        nodes: sortBy(\"amount\")(payeeNodes),\n        amount: sumByProp(\"amount\")(payeeNodes)\n      };\n    }),\n    groupByProp(\"category_id\")\n  ])(transactions);\n\n  const groupNodes = compose([\n    map((nodes, categoryGroupId) => {\n      const categoryNodes = map(omit(\"category_group_id\"))(nodes);\n      return {\n        ...pick([\"id\", \"name\"])(categoryGroupsById[categoryGroupId]),\n        nodes: sortBy(\"amount\")(categoryNodes),\n        amount: sumByProp(\"amount\")(categoryNodes)\n      };\n    }),\n    groupByProp(\"category_group_id\")\n  ])(categoryNodes);\n\n  const rootPayeeNodes = getPayeeNodes(\n    {\n      payeesById,\n      transactions: transactions.filter(transaction => !transaction.category_id)\n    },\n    divideBy\n  );\n\n  const nodes = compose([\n    nodes =>\n      concat(nodes)([\n        {\n          id: \"net\",\n          amount: -totalIncome - sumByProp(\"amount\")(nodes),\n          name: \"Net Income\"\n        }\n      ]),\n    sortBy(\"amount\"),\n    concat(rootPayeeNodes)\n  ])(groupNodes);\n\n  return (\n    <CollapsibleSection title=\"Expenses Breakdown\">\n      <Breakdown\n        nodes={nodes}\n        valueRenderer={node => (\n          <AmountWithPercentage {...node} expectNegative total={-totalIncome} />\n        )}\n      />\n    </CollapsibleSection>\n  );\n};\n\nExpensesBreakdown.propTypes = {\n  categoriesById: PropTypes.objectOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      category_group_id: PropTypes.string.isRequired\n    })\n  ).isRequired,\n  categoryGroupsById: PropTypes.objectOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired\n    })\n  ).isRequired,\n  divideBy: PropTypes.number.isRequired,\n  payeesById: PropTypes.objectOf(PropTypes.object).isRequired,\n  totalIncome: PropTypes.number.isRequired,\n  transactions: PropTypes.arrayOf(\n    PropTypes.shape({\n      amount: PropTypes.number.isRequired,\n      category_id: PropTypes.string\n    })\n  ).isRequired\n};\n\nExpensesBreakdown.defaultProps = { divideBy: 1 };\n\nexport default ExpensesBreakdown;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport sortBy from \"lodash/fp/sortBy\";\nimport sumBy from \"lodash/fp/sumBy\";\nimport { getPayeeNodes } from \"../budgetUtils\";\nimport CollapsibleSection from \"./CollapsibleSection\";\nimport Breakdown from \"./Breakdown\";\nimport AmountWithPercentage from \"./AmountWithPercentage\";\n\nconst IncomeBreakdown = ({ transactions, payeesById, divideBy }) => {\n  const nodes = getPayeeNodes({ payeesById, transactions }, divideBy);\n  const total = sumBy(\"amount\")(nodes);\n  return (\n    <CollapsibleSection title=\"Income Breakdown\">\n      <Breakdown\n        nodes={sortBy(\"amount\")(nodes).reverse()}\n        total={total}\n        valueRenderer={node => (\n          <AmountWithPercentage {...node} expectPositive total={total} />\n        )}\n      />\n    </CollapsibleSection>\n  );\n};\n\nIncomeBreakdown.propTypes = {\n  divideBy: PropTypes.number.isRequired,\n  payeesById: PropTypes.objectOf(PropTypes.object).isRequired,\n  transactions: PropTypes.arrayOf(\n    PropTypes.shape({\n      amount: PropTypes.number.isRequired,\n      categoryId: PropTypes.string\n    })\n  ).isRequired\n};\n\nIncomeBreakdown.defaultProps = { divideBy: 1 };\n\nexport default IncomeBreakdown;\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { sumByProp } from \"../dataUtils\";\nimport ExpensesBreakdown from \"./ExpensesBreakdown\";\nimport IncomeBreakdown from \"./IncomeBreakdown\";\n\nconst Breakdowns = ({\n  categoriesById,\n  categoryGroupsById,\n  payeesById,\n  expenseTransactions,\n  incomeTransactions,\n  divideBy\n}) => (\n  <Fragment>\n    <ExpensesBreakdown\n      categoriesById={categoriesById}\n      categoryGroupsById={categoryGroupsById}\n      payeesById={payeesById}\n      transactions={expenseTransactions}\n      totalIncome={sumByProp(\"amount\")(incomeTransactions) / divideBy}\n      divideBy={divideBy}\n    />\n    <IncomeBreakdown\n      payeesById={payeesById}\n      transactions={incomeTransactions}\n      divideBy={divideBy}\n    />\n  </Fragment>\n);\n\nBreakdowns.propTypes = {\n  categoriesById: PropTypes.object.isRequired,\n  categoryGroupsById: PropTypes.object.isRequired,\n  expenseTransactions: PropTypes.array.isRequired,\n  incomeTransactions: PropTypes.array.isRequired,\n  payeesById: PropTypes.object.isRequired,\n  divideBy: PropTypes.number.isRequired\n};\n\nexport default Breakdowns;\n","import React, { Fragment, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport compact from \"lodash/fp/compact\";\nimport compose from \"lodash/fp/compose\";\nimport find from \"lodash/fp/find\";\nimport flatMap from \"lodash/fp/flatMap\";\nimport mapRaw from \"lodash/fp/map\";\nimport matchesProperty from \"lodash/fp/matchesProperty\";\nimport sortBy from \"lodash/fp/sortBy\";\nimport { sumByProp, groupBy, simpleMemoize } from \"../dataUtils\";\nimport { getTransactionMonth, isIncome } from \"../budgetUtils\";\nimport { SecondaryText } from \"./typeComponents\";\nimport PageLayout from \"./PageLayout\";\nimport IncomeVsExpensesChart from \"./IncomeVsExpensesChart\";\nimport Breakdowns from \"./Breakdowns\";\nimport CollapsibleSection from \"./CollapsibleSection\";\nimport ChartNumbers from \"./ChartNumbers\";\nimport MonthByMonthSettingsModal from \"./MonthByMonthSettingsModal\";\nimport { useSelectedMonth } from \"../commonHooks\";\n\nconst map = mapRaw.convert({ cap: false });\n\nconst getSummaries = simpleMemoize((transactions, investmentAccounts, budget) =>\n  compose([\n    sortBy(\"month\"),\n    map((transactions, month) => {\n      const grouped = groupBy(isIncome(budget))(transactions);\n\n      return {\n        month,\n        expenseTransactions: grouped.false || [],\n        incomeTransactions: grouped.true || [],\n        income: sumByProp(\"amount\")(grouped.true || []),\n        expenses: sumByProp(\"amount\")(grouped.false || [])\n      };\n    }),\n    groupBy(getTransactionMonth)\n  ])(transactions)\n);\n\nconst IncomeVsExpensesPage = ({\n  budget,\n  excludeFirstMonth,\n  excludeLastMonth,\n  historyAction,\n  investmentAccounts,\n  location,\n  sidebarTrigger,\n  title,\n  transactions,\n  onSetExclusion\n}) => {\n  const [selectedMonth, onSelectMonth] = useSelectedMonth();\n  const [settingsModalOpen, setSettingsModalOpen] = useState(false);\n  const [showTotals, setShowTotals] = useState(false);\n  const { categoriesById, categoryGroupsById, payeesById } = budget;\n\n  const allSummaries = getSummaries(transactions, investmentAccounts, budget);\n  const summaries = selectedMonth\n    ? [find(matchesProperty(\"month\", selectedMonth))(allSummaries)]\n    : allSummaries;\n\n  const incomeTransactions = flatMap(summary => summary.incomeTransactions)(\n    compact(summaries)\n  );\n  const expenseTransactions = flatMap(summary => summary.expenseTransactions)(\n    compact(summaries)\n  );\n\n  const totalExpenses = sumByProp(\"amount\")(expenseTransactions);\n  const totalIncome = sumByProp(\"amount\")(incomeTransactions);\n  const denominator = showTotals ? 1 : summaries.length;\n\n  return (\n    <PageLayout\n      historyAction={historyAction}\n      location={location}\n      sidebarTrigger={sidebarTrigger}\n      title={title}\n      content={\n        <Fragment>\n          <CollapsibleSection\n            title=\"Monthly Trend\"\n            hasSettings\n            onClickSettings={() => {\n              setSettingsModalOpen(true);\n            }}\n            actions={\n              <SecondaryText\n                onClick={() => {\n                  setShowTotals(!showTotals);\n                }}\n              >\n                {showTotals ? \"show average\" : \"show total\"}\n              </SecondaryText>\n            }\n          >\n            <ChartNumbers\n              expectPositive\n              numbers={[\n                {\n                  label: \"net income\",\n                  amount: (totalExpenses + totalIncome) / denominator\n                },\n                {\n                  label: \"expenses\",\n                  amount: -totalExpenses / denominator\n                },\n                {\n                  label: \"income\",\n                  amount: totalIncome / denominator\n                }\n              ]}\n            />\n            <IncomeVsExpensesChart\n              data={allSummaries}\n              selectedMonth={selectedMonth}\n              onSelectMonth={onSelectMonth}\n            />\n            <MonthByMonthSettingsModal\n              excludeFirstMonth={excludeFirstMonth}\n              excludeLastMonth={excludeLastMonth}\n              open={settingsModalOpen}\n              onClose={() => {\n                setSettingsModalOpen(false);\n              }}\n              onSetExclusion={onSetExclusion}\n            />\n          </CollapsibleSection>\n          <Breakdowns\n            categoriesById={categoriesById}\n            categoryGroupsById={categoryGroupsById}\n            payeesById={payeesById}\n            expenseTransactions={expenseTransactions}\n            incomeTransactions={incomeTransactions}\n            divideBy={showTotals ? 1 : summaries.length}\n          />\n        </Fragment>\n      }\n    />\n  );\n};\n\nIncomeVsExpensesPage.propTypes = {\n  budget: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    months: PropTypes.arrayOf(\n      PropTypes.shape({\n        month: PropTypes.string.isRequired\n      })\n    ).isRequired\n  }).isRequired,\n  excludeFirstMonth: PropTypes.bool.isRequired,\n  excludeLastMonth: PropTypes.bool.isRequired,\n  historyAction: PropTypes.string.isRequired,\n  investmentAccounts: PropTypes.object.isRequired,\n  location: PropTypes.string.isRequired,\n  sidebarTrigger: PropTypes.node.isRequired,\n  title: PropTypes.string.isRequired,\n  transactions: PropTypes.arrayOf(\n    PropTypes.shape({\n      amount: PropTypes.number.isRequired,\n      date: PropTypes.string.isRequired\n    })\n  ).isRequired,\n  onSetExclusion: PropTypes.func.isRequired\n};\n\nexport default IncomeVsExpensesPage;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport includes from \"lodash/fp/includes\";\nimport sumBy from \"lodash/fp/sumBy\";\nimport { groupBy } from \"../dataUtils\";\nimport {\n  primaryColor,\n  lightPrimaryColor,\n  negativeChartColor\n} from \"../styleVariables\";\nimport MonthlyChart from \"./MonthlyChart\";\n\nconst CREDIT_ACCOUNTS = [\"mortgage\", \"creditCard\"];\nconst getStack = ({ type, id, mortgageAccounts }) => {\n  if (mortgageAccounts[id]) {\n    return \"liability\";\n  }\n\n  return includes(type)(CREDIT_ACCOUNTS) ? \"liability\" : \"asset\";\n};\n\nconst NetWorthChart = ({\n  data,\n  months,\n  mortgageAccounts,\n  selectedMonth,\n  onSelectMonth\n}) => {\n  const groupedData = groupBy(d =>\n    getStack({ type: d.type, id: d.id, mortgageAccounts })\n  )(data);\n  const monthlyData = months.map((month, index) => ({\n    month,\n    assets: sumBy(d => d.data[index])(groupedData.asset),\n    liabilities: sumBy(d => d.data[index])(groupedData.liability)\n  }));\n\n  return (\n    <MonthlyChart\n      selectedMonth={selectedMonth}\n      onSelectMonth={onSelectMonth}\n      data={monthlyData}\n      height={180}\n      series={[\n        {\n          color: negativeChartColor,\n          valueFunction: d => Math.max(-d.liabilities, 0)\n        },\n        {\n          color: lightPrimaryColor,\n          valueFunction: d => Math.max(d.assets, 0)\n        },\n        {\n          color: primaryColor,\n          type: \"line\",\n          valueFunction: d => d.assets + d.liabilities\n        }\n      ]}\n      stacked={false}\n    />\n  );\n};\n\nNetWorthChart.propTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      data: PropTypes.arrayOf(PropTypes.number).isRequired,\n      id: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired\n    })\n  ).isRequired,\n  months: PropTypes.arrayOf(PropTypes.string).isRequired,\n  mortgageAccounts: PropTypes.objectOf(PropTypes.bool).isRequired,\n  onSelectMonth: PropTypes.func.isRequired,\n  selectedMonth: PropTypes.string\n};\n\nexport default NetWorthChart;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport compose from \"lodash/fp/compose\";\nimport every from \"lodash/fp/every\";\nimport groupBy from \"lodash/fp/groupBy\";\nimport keyBy from \"lodash/fp/keyBy\";\nimport mapRaw from \"lodash/fp/map\";\nimport propEq from \"lodash/fp/propEq\";\nimport sortBy from \"lodash/fp/sortBy\";\nimport startCase from \"lodash/fp/startCase\";\nimport sumBy from \"lodash/fp/sumBy\";\nimport CollapsibleSection from \"./CollapsibleSection\";\nimport Breakdown from \"./Breakdown\";\nimport { SecondaryText } from \"./typeComponents\";\nimport Amount from \"./Amount\";\nimport Toggle from \"./Toggle\";\n\nconst map = mapRaw.convert({ cap: false });\n\nconst getNodes = ({ accounts, investmentAccounts, mortgageAccounts }) => {\n  const accountsByGroup = groupBy(account => {\n    if (investmentAccounts[account.id]) {\n      return \"Investments\";\n    }\n\n    if (mortgageAccounts[account.id]) {\n      return \"Mortgages\";\n    }\n\n    return startCase(account.type);\n  })(accounts);\n\n  return compose([\n    accounts => accounts.reverse(),\n    sortBy(\"amount\"),\n    map((accounts, name) => ({\n      name,\n      accounts,\n      amount: sumBy(\"balance\")(accounts),\n      id: name,\n      nodes: compose([\n        sortBy(\"balance\"),\n        map(({ id, name, balance }) => ({\n          amount: balance,\n          id,\n          name\n        }))\n      ])(accounts)\n    }))\n  ])(accountsByGroup);\n};\n\nconst NetWorthAccounts = ({\n  accounts,\n  hiddenAccounts,\n  onToggleAccounts,\n  investmentAccounts,\n  mortgageAccounts\n}) => {\n  const accountsById = keyBy(\"id\")(accounts);\n  const nodes = getNodes({\n    accounts,\n    investmentAccounts,\n    mortgageAccounts\n  });\n\n  return (\n    <CollapsibleSection title=\"Accounts\">\n      <AccountBreakdown\n        accountsById={accountsById}\n        hiddenAccounts={hiddenAccounts}\n        nodes={nodes}\n        onToggleAccounts={onToggleAccounts}\n      />\n    </CollapsibleSection>\n  );\n};\n\nNetWorthAccounts.propTypes = {\n  accounts: PropTypes.arrayOf(\n    PropTypes.shape({\n      balance: PropTypes.number.isRequired,\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired\n    })\n  ).isRequired,\n  hiddenAccounts: PropTypes.objectOf(PropTypes.bool).isRequired,\n  investmentAccounts: PropTypes.objectOf(PropTypes.bool).isRequired,\n  mortgageAccounts: PropTypes.objectOf(PropTypes.bool).isRequired,\n  onToggleAccounts: PropTypes.func.isRequired\n};\n\nconst AccountBreakdown = ({\n  accountsById,\n  hiddenAccounts,\n  nodes,\n  onToggleAccounts\n}) => (\n  <Breakdown\n    nodes={nodes}\n    valueRenderer={({ id, amount }) => {\n      const node = nodes.find(propEq(\"id\", id));\n      const accounts = node ? node.accounts : [accountsById[id]];\n\n      return (\n        <SecondaryText style={{ display: \"flex\", alignItems: \"center\" }}>\n          <Amount amount={amount} />\n          <div\n            style={{ display: \"flex\", alignItems: \"center\", marginLeft: 10 }}\n          >\n            <Toggle\n              onClick={evt => {\n                evt.stopPropagation();\n                onToggleAccounts({ ids: map(\"id\")(accounts) });\n              }}\n              on={!every(account => hiddenAccounts[account.id])(accounts)}\n            />\n          </div>\n        </SecondaryText>\n      );\n    }}\n  />\n);\n\nexport default NetWorthAccounts;\n","import React from \"react\";\nimport groupBy from \"lodash/fp/groupBy\";\nimport sumBy from \"lodash/fp/sumBy\";\nimport moment from \"moment\";\nimport CollapsibleSection from \"./CollapsibleSection\";\nimport Breakdown from \"./Breakdown\";\nimport { SecondaryText } from \"./typeComponents\";\nimport Amount from \"./Amount\";\n\nconst NetWorthChanges = ({ months, accountSummaries, hiddenAccounts }) => {\n  const totals = months.map(month => ({ month, total: 0 }));\n  accountSummaries.forEach(({ id, data }) => {\n    if (hiddenAccounts[id]) {\n      return;\n    }\n\n    data.forEach((num, index) => {\n      totals[index].total += num;\n    });\n  });\n\n  const changes = totals\n    .map((t, i) => ({\n      year: t.month.slice(0, 4),\n      month: t.month,\n      change: i === 0 ? null : t.total - totals[i - 1].total\n    }))\n    .reverse();\n\n  const years = groupBy(\"year\")(changes);\n\n  const nodes = Object.keys(years)\n    .sort()\n    .reverse()\n    .map(year => ({\n      amount: sumBy(\"change\")(years[year]),\n      id: year,\n      name: year,\n      nodes: years[year].map(v => ({\n        amount: v.change,\n        name: moment(v.month).format(\"MMMM\"),\n        id: v.month\n      }))\n    }));\n\n  return (\n    <CollapsibleSection title=\"Net Worth Changes\">\n      <Breakdown\n        nodes={nodes}\n        valueRenderer={({ faded, amount }) => (\n          <SecondaryText style={{ opacity: faded ? 0.3 : 1 }}>\n            <Amount amount={amount} positiveColor=\"green\" negativeColor=\"red\" />\n          </SecondaryText>\n        )}\n      />\n    </CollapsibleSection>\n  );\n};\n\nexport default NetWorthChanges;\n","import React, { Fragment, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport compose from \"lodash/fp/compose\";\nimport constant from \"lodash/fp/constant\";\nimport eq from \"lodash/fp/eq\";\nimport filter from \"lodash/fp/filter\";\nimport findIndex from \"lodash/fp/findIndex\";\nimport groupBy from \"lodash/fp/groupBy\";\nimport identity from \"lodash/fp/identity\";\nimport keyBy from \"lodash/fp/keyBy\";\nimport keys from \"lodash/fp/keys\";\nimport last from \"lodash/fp/last\";\nimport map from \"lodash/fp/map\";\nimport mapValues from \"lodash/fp/mapValues\";\nimport omitBy from \"lodash/fp/omitBy\";\nimport sortBy from \"lodash/fp/sortBy\";\nimport sum from \"lodash/fp/sum\";\nimport sumBy from \"lodash/fp/sumBy\";\nimport values from \"lodash/fp/values\";\nimport { simpleMemoize } from \"../dataUtils\";\nimport { useSelectedMonth } from \"../commonHooks\";\nimport { getSetting, setSetting } from \"../uiRepo\";\nimport PageLayout from \"./PageLayout\";\nimport CollapsibleSection from \"./CollapsibleSection\";\nimport ChartNumbers from \"./ChartNumbers\";\nimport NetWorthChart from \"./NetWorthChart\";\nimport NetWorthAccounts from \"./NetWorthAccounts\";\nimport NetWorthChanges from \"./NetWorthChanges\";\n\nconst useHiddenAccounts = budget => {\n  const [hiddenAccounts, setHiddenAccounts] = useState(\n    getSetting(\"netWorthHiddenAccounts\", budget.id)\n  );\n\n  const onToggleHiddenAccounts = ({ ids }) => {\n    const shouldHide = ids.some(id => !hiddenAccounts[id]);\n    const newHiddenAccounts = ids.reduce(\n      (acc, id) => ({ ...acc, [id]: shouldHide }),\n      hiddenAccounts\n    );\n\n    setHiddenAccounts(newHiddenAccounts);\n    setSetting(\"netWorthHiddenAccounts\", budget.id, newHiddenAccounts);\n  };\n\n  return { hiddenAccounts, onToggleHiddenAccounts };\n};\n\nconst cumulative = arr =>\n  arr.reduce(\n    (acc, curr) => (acc.length === 0 ? [curr] : acc.concat(last(acc) + curr)),\n    []\n  );\n\nconst groupByMonthAndAccount = simpleMemoize(\n  compose([\n    mapValues(groupBy(\"account_id\")),\n    groupBy(({ date }) => date.slice(0, 7))\n  ])\n);\n\nconst getMonths = simpleMemoize(budget =>\n  compose([sortBy(identity), keys, groupByMonthAndAccount])(budget.transactions)\n);\n\nconst getSummaryByAccount = simpleMemoize(budget => {\n  const groupedTransactions = groupByMonthAndAccount(budget.transactions);\n  const months = getMonths(budget);\n  return map(({ id }) => ({\n    id,\n    data: compose([\n      cumulative,\n      map(month => sumBy(\"amount\")(groupedTransactions[month][id]))\n    ])(months)\n  }))(budget.accounts);\n});\n\nconst getSelectedBalances = simpleMemoize((selectedMonth, budget) => {\n  const months = getMonths(budget);\n  const selectedMonthIndex = findIndex(eq(selectedMonth))(months);\n  const accountSummaries = getSummaryByAccount(budget);\n\n  return compose([\n    mapValues(({ data }) =>\n      selectedMonthIndex > -1 ? data[selectedMonthIndex] : last(data)\n    ),\n    keyBy(\"id\")\n  ])(accountSummaries);\n});\n\nconst NetWorthPage = ({\n  budget,\n  historyAction,\n  investmentAccounts,\n  location,\n  mortgageAccounts,\n  sidebarTrigger,\n  title\n}) => {\n  const [selectedMonth, onSelectMonth] = useSelectedMonth();\n  const { hiddenAccounts, onToggleHiddenAccounts } = useHiddenAccounts(budget);\n  const months = getMonths(budget);\n  const accountSummaries = getSummaryByAccount(budget);\n  const selectedBalances = getSelectedBalances(selectedMonth, budget);\n  const filterHidden = omitBy((_, id) => hiddenAccounts[id]);\n  const selectedLiabilities = compose([\n    sum,\n    filter(b => b < 0),\n    values,\n    filterHidden\n  ])(selectedBalances);\n  const selectedAssets = compose([\n    sum,\n    filter(b => b > 0),\n    values,\n    filterHidden\n  ])(selectedBalances);\n\n  return (\n    <PageLayout\n      historyAction={historyAction}\n      location={location}\n      sidebarTrigger={sidebarTrigger}\n      title={title}\n      content={\n        <Fragment>\n          <CollapsibleSection title=\"Monthly Trend\">\n            <ChartNumbers\n              alwaysRound\n              expectPositive\n              numbers={[\n                {\n                  amount: selectedAssets + selectedLiabilities,\n                  label: \"Net Worth\"\n                },\n                { amount: selectedAssets, label: \"Assets\" },\n                { amount: -selectedLiabilities, label: \"Liabilities\" }\n              ]}\n            />\n            <NetWorthChart\n              data={map(({ id, data }) => ({\n                data: hiddenAccounts[id] ? data.map(constant(0)) : data,\n                type: budget.accountsById[id].type,\n                id\n              }))(accountSummaries)}\n              months={months}\n              mortgageAccounts={mortgageAccounts}\n              selectedMonth={selectedMonth}\n              onSelectMonth={onSelectMonth}\n            />\n          </CollapsibleSection>\n          <NetWorthAccounts\n            accounts={map(account => ({\n              ...account,\n              balance: selectedBalances[account.id]\n            }))(budget.accounts)}\n            hiddenAccounts={hiddenAccounts}\n            investmentAccounts={investmentAccounts}\n            mortgageAccounts={mortgageAccounts}\n            onToggleAccounts={onToggleHiddenAccounts}\n          />\n          <NetWorthChanges\n            accountSummaries={accountSummaries}\n            hiddenAccounts={hiddenAccounts}\n            months={months}\n          />\n        </Fragment>\n      }\n    />\n  );\n};\n\nNetWorthPage.propTypes = {\n  budget: PropTypes.shape({\n    accounts: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired,\n        type: PropTypes.string.isRequired\n      })\n    ).isRequired,\n    accountsById: PropTypes.objectOf(\n      PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired,\n        type: PropTypes.string.isRequired\n      })\n    ).isRequired,\n    transactions: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        account_id: PropTypes.string.isRequired,\n        amount: PropTypes.number.isRequired,\n        date: PropTypes.string.isRequired\n      })\n    ).isRequired\n  }).isRequired,\n  historyAction: PropTypes.string.isRequired,\n  investmentAccounts: PropTypes.objectOf(PropTypes.bool).isRequired,\n  location: PropTypes.string.isRequired,\n  mortgageAccounts: PropTypes.objectOf(PropTypes.bool).isRequired,\n  sidebarTrigger: PropTypes.node.isRequired,\n  title: PropTypes.string.isRequired\n};\n\nexport default NetWorthPage;\n","import React, { Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport keys from \"lodash/fp/keys\";\r\nimport get from \"lodash/fp/get\";\r\nimport EmptyText from \"./EmptyText\";\r\nimport { Link } from \"react-router-dom\";\r\nimport pages, { makeLink } from \"../pages\";\r\nimport PageLayout from \"./PageLayout\";\r\nimport MonthByMonthSection from \"./MonthByMonthSection\";\r\nimport { getTransactionMonth } from \"../budgetUtils\";\r\nimport GenericEntitiesSection from \"./GenericEntitiesSection\";\r\nimport {\r\n  useMonthExclusions,\r\n  useSelectedEntityId,\r\n  useSelectedMonth\r\n} from \"../commonHooks\";\r\n\r\nconst isContribution = investmentAccounts => transaction =>\r\n  !!investmentAccounts[transaction.account_id] &&\r\n  !!transaction.transfer_account_id &&\r\n  !investmentAccounts[transaction.transfer_account_id];\r\n\r\nconst isCapitalGainOrLoss = (investmentAccounts, payeesById) => transaction =>\r\n  !!investmentAccounts[transaction.account_id] &&\r\n  !transaction.transfer_account_id &&\r\n  get([transaction.payee_id, \"name\"])(payeesById) !== \"Starting Balance\";\r\n\r\nconst isInvestmentTransaction = (\r\n  investmentAccounts,\r\n  payeesById\r\n) => transaction =>\r\n  isContribution(investmentAccounts)(transaction) ||\r\n  isCapitalGainOrLoss(investmentAccounts, payeesById)(transaction);\r\n\r\nconst InvestmentsPage = ({\r\n  budget,\r\n  historyAction,\r\n  investmentAccounts,\r\n  location,\r\n  sidebarTrigger,\r\n  title\r\n}) => {\r\n  const {\r\n    excludeFirstMonth,\r\n    excludeLastMonth,\r\n    months,\r\n    onSetExclusion\r\n  } = useMonthExclusions(budget);\r\n  const [selectedMonth, onSelectMonth] = useSelectedMonth();\r\n  const [selectedBreakdown, onSelectBreakdown] = useSelectedEntityId();\r\n\r\n  const { payeesById } = budget;\r\n\r\n  if (keys(investmentAccounts).length === 0) {\r\n    return (\r\n      <PageLayout\r\n        historyAction={historyAction}\r\n        location={location}\r\n        sidebarTrigger={sidebarTrigger}\r\n        title={title}\r\n        content={<EmptyText>\r\n          You don't have any accounts marked as investment accounts.{\" \"}\r\n          <Link to={makeLink(pages.settings.path, { budgetId: budget.id })}>\r\n            Go to Settings\r\n          </Link>\r\n        </EmptyText>}\r\n      />\r\n    );\r\n  }\r\n\r\n  const investmentTransactions = budget.transactions.filter(\r\n    isInvestmentTransaction(investmentAccounts, payeesById)\r\n  );\r\n  const transactionsInMonth =\r\n    selectedMonth &&\r\n    investmentTransactions.filter(\r\n      transaction => getTransactionMonth(transaction) === selectedMonth\r\n    );\r\n\r\n  return (\r\n    <PageLayout\r\n      historyAction={historyAction}\r\n      location={location}\r\n      sidebarTrigger={sidebarTrigger}\r\n      title={title}\r\n      content={\r\n        <Fragment>\r\n          <MonthByMonthSection\r\n            excludeFirstMonth={excludeFirstMonth}\r\n            excludeLastMonth={excludeLastMonth}\r\n            expectPositive\r\n            highlightFunction={\r\n              selectedBreakdown &&\r\n              (transaction =>\r\n                selectedBreakdown === \"contribution\"\r\n                  ? isContribution(investmentAccounts)(transaction)\r\n                  : isCapitalGainOrLoss(investmentAccounts, payeesById)(\r\n                      transaction\r\n                    ))\r\n            }\r\n            months={months}\r\n            selectedMonth={selectedMonth}\r\n            transactions={investmentTransactions}\r\n            onSelectMonth={onSelectMonth}\r\n            onSetExclusion={onSetExclusion}\r\n          />\r\n          <GenericEntitiesSection\r\n            transactions={transactionsInMonth || investmentTransactions}\r\n            entitiesById={{\r\n              contribution: { name: \"Contributions\" },\r\n              capitalGain: { name: \"Capital Gains/Losses\" }\r\n            }}\r\n            expectPositive\r\n            title=\"Growth Breakdown\"\r\n            onClickEntity={onSelectBreakdown}\r\n            selectedEntityId={selectedBreakdown}\r\n            entityFunction={transaction =>\r\n              isContribution(investmentAccounts)(transaction)\r\n                ? \"contribution\"\r\n                : \"capitalGain\"\r\n            }\r\n            positiveIsRed\r\n          />\r\n        </Fragment>\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nInvestmentsPage.propTypes = {\r\n  budget: PropTypes.object.isRequired,\r\n  historyAction: PropTypes.string.isRequired,\r\n  investmentAccounts: PropTypes.object.isRequired,\r\n  location: PropTypes.string.isRequired,\r\n  sidebarTrigger: PropTypes.node.isRequired,\r\n  title: PropTypes.string.isRequired\r\n};\r\n\r\nexport default InvestmentsPage;\r\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  primaryColor,\n  negativeColor,\n  selectedPlotBandColor\n} from \"../styleVariables\";\nimport Chart from \"./Chart\";\n\nconst ProjectionsChart = ({\n  investmentsProjection,\n  mortgageProjection,\n  amountNeededToRetire,\n  yearsUntilRetirement\n}) => (\n  <Chart\n    options={{\n      chart: {\n        type: \"column\"\n      },\n      xAxis: {\n        type: \"category\",\n        plotBands: [\n          {\n            color: selectedPlotBandColor,\n            from: Math.floor(yearsUntilRetirement) - 0.5,\n            to: Math.floor(yearsUntilRetirement) + 0.5\n          }\n        ]\n      },\n      yAxis: {\n        title: { text: null },\n        endOnTick: false,\n        plotLines: [\n          {\n            value: amountNeededToRetire,\n            color: \"#ccc\",\n            width: 1\n          }\n        ]\n      },\n      legend: {\n        enabled: false\n      },\n      series: [\n        { data: investmentsProjection, color: primaryColor, borderWidth: 0 },\n        { data: mortgageProjection, color: negativeColor, borderWidth: 0 }\n      ]\n    }}\n  />\n);\n\nProjectionsChart.propTypes = {\n  amountNeededToRetire: PropTypes.number.isRequired,\n  investmentsProjection: PropTypes.arrayOf(PropTypes.number).isRequired,\n  mortgageProjection: PropTypes.arrayOf(PropTypes.number).isRequired,\n  yearsUntilRetirement: PropTypes.number.isRequired\n};\n\nexport default ProjectionsChart;\n","import { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst isDescendant = (parent, child) => {\n  let node = child.parentNode;\n  while (node !== null) {\n    if (node === parent) {\n      return true;\n    }\n    node = node.parentNode;\n  }\n  return false;\n};\n\nclass ClickOff extends Component {\n  static propTypes = {\n    children: PropTypes.func.isRequired,\n    onClickOff: PropTypes.func\n  };\n\n  parent = null;\n\n  componentDidMount() {\n    document.body.addEventListener(\"click\", this.handleBodyClick);\n  }\n\n  componentWillUnmount() {\n    document.body.removeEventListener(\"click\", this.handleBodyClick);\n  }\n\n  handleBodyClick = evt => {\n    if (this.props.onClickOff && !isDescendant(this.parent, evt.target)) {\n      this.props.onClickOff();\n    }\n  };\n\n  render() {\n    return this.props.children({\n      ref: el => {\n        this.parent = el;\n      }\n    });\n  }\n}\n\nexport default ClickOff;\n","import React from \"react\";\nimport { createPortal } from \"react-dom\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport AnimateHeight from \"react-animate-height-auto\";\nimport ClickOff from \"./ClickOff\";\nimport Button from \"./Button\";\n\nconst bodyEl = document.getElementsByTagName(\"body\")[0];\n\nconst Container = styled.div`\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  background-color: #fff;\n`;\n\nconst ProjectionsSlider = ({\n  name,\n  formatter,\n  label,\n  value,\n  onBlur,\n  onChange,\n  onReset,\n  rangeOptions\n}) =>\n  createPortal(\n    <ClickOff onClickOff={name && onBlur}>\n      {({ ref }) => (\n        <Container ref={ref}>\n          <AnimateHeight isExpanded={!!name}>\n            <div style={{ borderTop: \"1px solid #bbb\", padding: \"15px 20px\" }}>\n              <div\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"space-between\",\n                  alignItems: \"center\",\n                  marginBottom: 15\n                }}\n              >\n                {label}: {formatter(value || 0)}\n                <Button\n                  onClick={() => {\n                    onReset(name);\n                  }}\n                >\n                  reset\n                </Button>\n              </div>\n              <Range\n                {...rangeOptions}\n                name={name}\n                value={value || 0}\n                onChange={onChange}\n              />\n            </div>\n          </AnimateHeight>\n        </Container>\n      )}\n    </ClickOff>,\n    bodyEl\n  );\n\nProjectionsSlider.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  onReset: PropTypes.func.isRequired,\n  formatter: PropTypes.func,\n  label: PropTypes.string,\n  name: PropTypes.string,\n  value: PropTypes.number\n};\n\nProjectionsSlider.defaultProps = {\n  formatter: val => val\n};\n\nconst Range = ({ name, onReset, ...other }) => (\n  <input\n    {...other}\n    name={name}\n    type=\"range\"\n    style={{ display: \"block\", width: \"100%\" }}\n  />\n);\n\nexport default ProjectionsSlider;\n","import React, { Fragment, PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport chunk from \"lodash/fp/chunk\";\nimport compose from \"lodash/fp/compose\";\nimport get from \"lodash/fp/get\";\nimport head from \"lodash/fp/head\";\nimport map from \"lodash/fp/map\";\nimport pick from \"lodash/fp/pick\";\nimport range from \"lodash/fp/range\";\nimport { simpleMemoize, keyByProp } from \"../dataUtils\";\nimport { selectedPlotBandColor } from \"../styleVariables\";\nimport {\n  getMortgageRate,\n  getReturnOnInvestments,\n  getAverageContribution,\n  getCurrentInvestments,\n  getAverageExpensesWithoutMortgage,\n  getProjection,\n  getProjectionWithRetirement\n} from \"../projectionUtils\";\nimport PageLayout from \"./PageLayout\";\nimport Icon from \"./Icon\";\nimport CollapsibleSection from \"./CollapsibleSection\";\nimport ProjectionsChart from \"./ProjectionsChart\";\nimport ProjectionsSlider from \"./ProjectionsSlider\";\nimport ChartNumbers from \"./ChartNumbers\";\n\nconst YEARS_TO_PROJECT = 50;\n\nconst adjustableEntries = [\n  {\n    label: \"Average monthly contribution\",\n    name: \"averageContribution\",\n    formatter: val => `$${Math.round(val)}`\n  },\n  {\n    label: \"Average return on investments\",\n    name: \"returnOnInvestments\",\n    formatter: val => `${(val * 100).toFixed(1)}%`\n  },\n  {\n    label: \"Average expenses without mortgage\",\n    name: \"averageExpenses\",\n    formatter: val => `$${Math.round(val)}`\n  },\n  {\n    label: \"Return on investment after retirement\",\n    name: \"retirementReturns\",\n    formatter: val => `${(val * 100).toFixed(1)}%`\n  },\n  {\n    label: \"Average tax rate after retirement\",\n    name: \"retirementTaxRate\",\n    formatter: val => `${(val * 100).toFixed(1)}%`\n  }\n];\n\nconst adjustableEntriesByName = keyByProp(\"name\")(adjustableEntries);\n\nconst getInitialState = simpleMemoize(\n  (budget, investmentAccounts, mortgageAccounts) => {\n    const {\n      paymentsLeft: remainingMortgagePayments,\n      mortgagePayment,\n      principalProjection: mortgageProjection\n    } = getMortgageRate(budget, mortgageAccounts) || {};\n    const returnOnInvestments = getReturnOnInvestments(\n      budget,\n      investmentAccounts\n    );\n    const averageContribution = getAverageContribution(\n      budget,\n      investmentAccounts\n    );\n    const currentInvestments = getCurrentInvestments(\n      budget,\n      investmentAccounts\n    );\n    const averageExpenses = getAverageExpensesWithoutMortgage(\n      budget,\n      investmentAccounts,\n      mortgageAccounts\n    );\n\n    return {\n      mortgagePayment,\n      remainingMortgagePayments,\n      mortgageProjection,\n      returnOnInvestments,\n      averageContribution,\n      currentInvestments,\n      averageExpenses,\n      retirementReturns: 0.04,\n      retirementTaxRate: 0.15,\n      maxAverageExpenses: Math.ceil((averageExpenses * 2) / 1000) * 1000,\n      maxAverageContribution: Math.ceil((averageContribution * 2) / 1000) * 1000\n    };\n  }\n);\n\nclass ProjectionsPage extends PureComponent {\n  static propTypes = {\n    budget: PropTypes.shape({\n      transactions: PropTypes.array.isRequired\n    }).isRequired,\n    historyAction: PropTypes.string.isRequired,\n    investmentAccounts: PropTypes.objectOf(PropTypes.bool).isRequired,\n    location: PropTypes.string.isRequired,\n    mortgageAccounts: PropTypes.objectOf(PropTypes.bool).isRequired,\n    sidebarTrigger: PropTypes.node.isRequired,\n    title: PropTypes.string.isRequired\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      ...getInitialState(\n        props.budget,\n        props.investmentAccounts,\n        props.mortgageAccounts\n      ),\n      adjustingName: null\n    };\n  }\n\n  handleChange = e => {\n    this.setState({ [e.target.name]: parseFloat(e.target.value) });\n  };\n\n  handleSelectAdjusting = name => {\n    this.setState(state => ({\n      adjustingName: state.adjustingName === name ? null : name\n    }));\n  };\n\n  handleClearSelection = () => {\n    this.setState({ adjustingName: null });\n  };\n\n  handleResetCalculation = calculation => {\n    const { budget, investmentAccounts, mortgageAccounts } = this.props;\n    this.setState(\n      pick(calculation)(\n        getInitialState(budget, investmentAccounts, mortgageAccounts)\n      )\n    );\n  };\n\n  render() {\n    const { historyAction, location, sidebarTrigger, title } = this.props;\n    const {\n      mortgagePayment,\n      remainingMortgagePayments,\n      mortgageProjection,\n      returnOnInvestments,\n      averageContribution,\n      currentInvestments,\n      averageExpenses,\n      retirementReturns,\n      retirementTaxRate,\n      maxAverageExpenses,\n      maxAverageContribution,\n      adjustingName\n    } = this.state;\n\n    const projection = getProjection({\n      numMonths: YEARS_TO_PROJECT * 12,\n      returnOnInvestments,\n      averageContribution,\n      currentInvestments\n    });\n    const monthlyRetirementReturn = (1 + retirementReturns) ** (1 / 12) - 1;\n    const amountNeededToRetire =\n      averageExpenses / (monthlyRetirementReturn * (1 - retirementTaxRate));\n    let m = 0;\n\n    while (m < projection.length) {\n      if (m < remainingMortgagePayments) {\n        const remainingMortgage = range(\n          0,\n          remainingMortgagePayments - m\n        ).reduce(\n          (acc, curr) =>\n            acc +\n            mortgagePayment /\n              (1 + monthlyRetirementReturn * (1 - retirementTaxRate)) ** curr,\n          0\n        );\n        if (\n          (projection[m] - remainingMortgage) *\n            monthlyRetirementReturn *\n            (1 - retirementTaxRate) >\n          averageExpenses\n        ) {\n          break;\n        }\n      } else {\n        if (\n          projection[m] * monthlyRetirementReturn * (1 - retirementTaxRate) >\n          averageExpenses\n        ) {\n          break;\n        }\n      }\n      m += 1;\n    }\n\n    const projectionWithRetirement = getProjectionWithRetirement({\n      numMonths: YEARS_TO_PROJECT * 12,\n      returnOnInvestments,\n      averageContribution,\n      currentInvestments,\n      monthsBeforeRetirement: m,\n      monthlyExpenses: averageExpenses,\n      retirementReturns,\n      retirementTaxRate,\n      remainingMortgagePayments,\n      mortgagePayment\n    });\n    const hasMortgage = !!mortgagePayment;\n\n    const yearsUntilRetirement = m / 12;\n    const projectionByYear = compose([map(head), chunk(12)])(\n      projectionWithRetirement\n    );\n    const mortgageProjectionByYear = compose([map(head), chunk(12)])(\n      mortgageProjection\n    );\n\n    const nameToRangeOptions = {\n      averageContribution: { min: 0, max: maxAverageContribution, step: 50 },\n      returnOnInvestments: { min: 0, max: 0.2, step: 0.001 },\n      averageExpenses: { min: 0, max: maxAverageExpenses, step: 50 },\n      retirementReturns: { min: 0, max: 0.2, step: 0.001 },\n      retirementTaxRate: { min: 0, max: 0.5, step: 0.001 }\n    };\n\n    return (\n      <PageLayout\n        historyAction={historyAction}\n        location={location}\n        sidebarTrigger={sidebarTrigger}\n        title={title}\n        content={\n          <Fragment>\n            <CollapsibleSection title=\"Projection\">\n              <ChartNumbers\n                numbers={[\n                  {\n                    amount: -amountNeededToRetire,\n                    label: \"needed for retirement\",\n                    decimalsToRound: 0\n                  },\n                  {\n                    amount: -yearsUntilRetirement,\n                    label: \"years to retirement\",\n                    isMoney: false,\n                    decimalsToRound: 1\n                  }\n                ]}\n              />\n              <ProjectionsChart\n                investmentsProjection={projectionByYear}\n                mortgageProjection={mortgageProjectionByYear}\n                amountNeededToRetire={amountNeededToRetire}\n                yearsUntilRetirement={yearsUntilRetirement}\n              />\n            </CollapsibleSection>\n            <CollapsibleSection title=\"Assumptions\">\n              {adjustableEntries.map(({ label, name, formatter }) => (\n                <AdjustableEntry\n                  key={name}\n                  label={label}\n                  name={name}\n                  value={this.state[name]}\n                  formatter={formatter}\n                  isAdjusting={adjustingName === name}\n                  onSelect={this.handleSelectAdjusting}\n                  onReset={this.handleResetCalculation}\n                  onChange={this.handleChange}\n                />\n              ))}\n              {hasMortgage && (\n                <Fragment>\n                  <Entry\n                    label=\"Mortgage payment\"\n                    value={mortgagePayment}\n                    formatter={val => `$${val.toFixed(2)}`}\n                  />\n                  <Entry\n                    label=\"Time remaining on mortgage\"\n                    value={remainingMortgagePayments}\n                    formatter={val => `${(val / 12).toFixed(1)} years`}\n                  />\n                </Fragment>\n              )}\n            </CollapsibleSection>\n            <ProjectionsSlider\n              name={adjustingName}\n              label={get([adjustingName, \"label\"])(adjustableEntriesByName)}\n              onReset={this.handleResetCalculation}\n              onChange={this.handleChange}\n              onBlur={this.handleClearSelection}\n              formatter={get([adjustingName, \"formatter\"])(\n                adjustableEntriesByName\n              )}\n              value={this.state[adjustingName]}\n              rangeOptions={nameToRangeOptions[adjustingName]}\n            />\n          </Fragment>\n        }\n      />\n    );\n  }\n}\n\nconst AdjustableEntry = ({\n  label,\n  value,\n  formatter,\n  name,\n  onSelect,\n  isAdjusting\n}) => (\n  <Entry\n    label={label}\n    value={value}\n    formatter={formatter}\n    onClick={() => {\n      onSelect(name);\n    }}\n    highlightValue={isAdjusting}\n    isAdjustable\n  />\n);\n\nconst Entry = ({\n  label,\n  value,\n  onClick,\n  highlightValue,\n  isAdjustable,\n  formatter = a => a\n}) => (\n  <div\n    style={{\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"space-between\",\n      padding: \"2px 0\"\n    }}\n  >\n    {label}:\n    <div style={{ display: \"flex\", alignItems: \"center\" }} onClick={onClick}>\n      <strong\n        style={{\n          backgroundColor: highlightValue ? selectedPlotBandColor : null,\n          padding: isAdjustable && \"0 4px\",\n          borderRadius: 2\n        }}\n      >\n        {formatter(value)}\n      </strong>\n      {isAdjustable && <Icon icon=\"pencil\" faded style={{ marginLeft: 4 }} />}\n    </div>\n  </div>\n);\n\nexport default ProjectionsPage;\n","import moment from \"moment\";\nimport add from \"lodash/fp/add\";\nimport compose from \"lodash/fp/compose\";\nimport concat from \"lodash/fp/concat\";\nimport filter from \"lodash/fp/filter\";\nimport find from \"lodash/fp/find\";\nimport groupBy from \"lodash/fp/groupBy\";\nimport head from \"lodash/fp/head\";\nimport identity from \"lodash/fp/identity\";\nimport includes from \"lodash/fp/includes\";\nimport keys from \"lodash/fp/keys\";\nimport last from \"lodash/fp/last\";\nimport map from \"lodash/fp/map\";\nimport matches from \"lodash/fp/matches\";\nimport multiply from \"lodash/fp/multiply\";\nimport prop from \"lodash/fp/prop\";\nimport range from \"lodash/fp/range\";\nimport reduce from \"lodash/fp/reduce\";\nimport reject from \"lodash/fp/reject\";\nimport sortBy from \"lodash/fp/sortBy\";\nimport sumBy from \"lodash/fp/sumBy\";\nimport takeWhile from \"lodash/fp/takeWhile\";\nimport takeRightWhile from \"lodash/fp/takeRightWhile\";\nimport uniq from \"lodash/fp/uniq\";\nimport { getTransactionMonth } from \"./budgetUtils\";\n\nexport const getMortgageRate = (\n  { accounts, transactions: allTransactions },\n  mortgageAccounts\n) => {\n  const mortgageAccount = find(account => mortgageAccounts[account.id])(\n    accounts\n  );\n\n  if (!mortgageAccount) {\n    return null;\n  }\n\n  const transactions = compose([\n    sortBy(\"date\"),\n    filter(matches({ account_id: mortgageAccount.id }))\n  ])(allTransactions);\n  const lastMonth = compose([t => t.date.slice(0, 7), last])(transactions);\n  const lastMonthTransactions = takeRightWhile(\n    t => t.date.slice(0, 7) === lastMonth\n  )(transactions);\n\n  const P = -compose([\n    sumBy(\"amount\"),\n    takeWhile(t => t.date.slice(0, 7) !== lastMonth)\n  ])(transactions);\n  const P1 = P - sumBy(\"amount\")(lastMonthTransactions);\n  const c = compose([prop(\"amount\"), find(prop(\"transfer_account_id\"))])(\n    lastMonthTransactions\n  );\n  const r = (P1 + c) / P - 1;\n  const N = -Math.log(1 - (r * P) / c) / Math.log(1 + r);\n\n  const rate = r * 12;\n  const paymentsLeft = N - 1;\n\n  const projection = map(n => (1 + r) ** n * P - (((1 + r) ** n - 1) / r) * c)(\n    range(1, N)\n  );\n\n  return {\n    rate,\n    mortgagePayment: c,\n    paymentsLeft,\n    principalProjection: projection\n  };\n};\n\nexport const getCurrentInvestments = (\n  { accounts, transactions },\n  investmentAccounts\n) => {\n  const investmentAccountIds = compose([\n    filter(id => investmentAccounts[id]),\n    map(\"id\")\n  ])(accounts);\n\n  return compose([\n    sumBy(\"amount\"),\n    filter(({ account_id: accountId }) =>\n      includes(accountId)(investmentAccountIds)\n    )\n  ])(transactions);\n};\n\nexport const getReturnOnInvestments = (\n  { accounts, payees, transactions: allTransactions },\n  investmentAccounts\n) => {\n  const investmentAccountIds = compose([\n    filter(id => investmentAccounts[id]),\n    map(\"id\")\n  ])(accounts);\n\n  const transactionsByMonth = compose([\n    groupBy(tr => tr.date.slice(0, 7)),\n    reject(t => includes(t.transfer_account_id)(investmentAccountIds)), // remove transfers between investment accounts\n    filter(t => includes(t.account_id)(investmentAccountIds))\n  ])(allTransactions);\n\n  let startForMonth = 0;\n  const returnRates = [];\n\n  const months = compose([sortBy(identity), keys])(transactionsByMonth);\n  map(month => transactionsByMonth[month])(months).forEach(trs => {\n    const contributions = compose([\n      sumBy(\"amount\"),\n      filter(prop(\"transfer_account_id\"))\n    ])(trs);\n    const gains = reject(prop(\"transfer_account_id\"))(trs);\n    const returns = sumBy(\"amount\")(gains);\n\n    if (startForMonth && gains.length) {\n      returnRates.push(returns / (startForMonth + 0.5 * contributions));\n    }\n\n    startForMonth += returns + contributions;\n  });\n\n  const totalReturn = compose([reduce(multiply, 1), map(add(1))])(returnRates);\n  const numMonths = returnRates.length;\n\n  return totalReturn ** (12 / numMonths) - 1;\n};\n\nexport const getAverageContribution = (\n  { accounts, transactions: allTransactions },\n  investmentAccounts\n) => {\n  const investmentAccountIds = compose([\n    filter(id => investmentAccounts[id]),\n    map(\"id\")\n  ])(accounts);\n\n  const contributions = compose([\n    filter(\n      ({ transfer_account_id: transferAccountId }) =>\n        transferAccountId && !includes(transferAccountId)(investmentAccountIds)\n    ),\n    filter(({ account_id: accountId }) =>\n      includes(accountId)(investmentAccountIds)\n    )\n  ])(allTransactions);\n\n  const months = compose([\n    sortBy(identity),\n    uniq,\n    map(d => d.slice(0, 7)),\n    map(\"date\")\n  ])(contributions);\n\n  const totalContributions = sumBy(\"amount\")(contributions);\n  const numMonths =\n    moment(last(months)).diff(moment(head(months)), \"months\") + 1;\n\n  return totalContributions / numMonths;\n};\n\nexport const getAverageExpensesWithoutMortgage = (\n  { transactions, accounts, payees, categoriesById, categoryGroupsById },\n  investmentAccounts,\n  mortgageAccounts\n) => {\n  const startingBalanceId = compose([\n    prop(\"id\"),\n    find(matches({ name: \"Starting Balance\" }))\n  ])(payees);\n  const months = compose([sortBy(identity), uniq, map(getTransactionMonth)])(\n    transactions\n  );\n\n  const mortgageAccountIds = compose([\n    filter(id => mortgageAccounts[id]),\n    map(\"id\")\n  ])(accounts);\n\n  const investmentAccountIds = compose([\n    filter(id => investmentAccounts[id]),\n    map(\"id\")\n  ])(accounts);\n\n  const totalExpenses = compose([\n    sumBy(\"amount\"),\n    reject(\n      tr =>\n        tr.amount > 0 &&\n        !tr.transfer_account_id &&\n        (!tr.category_id ||\n          !categoryGroupsById[categoriesById[tr.category_id].category_group_id])\n    ),\n    reject(tr =>\n      includes(tr.transfer_account_id)(\n        concat(mortgageAccountIds, investmentAccountIds)\n      )\n    ),\n    reject(tr =>\n      includes(tr.account_id)(concat(mortgageAccountIds, investmentAccountIds))\n    ),\n    reject(tr =>\n      includes(getTransactionMonth(tr))([head(months), last(months)])\n    ),\n    reject(matches({ payee_id: startingBalanceId }))\n  ])(transactions);\n\n  return -totalExpenses / (months.length - 2);\n};\n\nexport const getProjection = ({\n  numMonths,\n  returnOnInvestments,\n  averageContribution,\n  currentInvestments\n}) => {\n  const monthlyRate = (1 + returnOnInvestments) ** (1 / 12) - 1;\n  let amount = currentInvestments;\n  let projection = [];\n\n  do {\n    projection.push(amount);\n    amount +=\n      averageContribution + (amount + 0.5 * averageContribution) * monthlyRate;\n  } while (projection.length < numMonths);\n\n  return projection;\n};\n\nexport const getProjectionWithRetirement = ({\n  numMonths,\n  returnOnInvestments,\n  averageContribution,\n  currentInvestments,\n  monthsBeforeRetirement,\n  monthlyExpenses,\n  retirementReturns,\n  retirementTaxRate,\n  remainingMortgagePayments,\n  mortgagePayment\n}) => {\n  const monthlyRate = (1 + returnOnInvestments) ** (1 / 12) - 1;\n  const monthlyRetirementReturn = (1 + retirementReturns) ** (1 / 12) - 1;\n  let amount = currentInvestments;\n  let projection = [];\n\n  do {\n    projection.push(amount);\n    if (projection.length < monthsBeforeRetirement) {\n      amount +=\n        averageContribution +\n        (amount + 0.5 * averageContribution) * monthlyRate;\n    } else {\n      amount +=\n        amount * monthlyRetirementReturn * (1 - retirementTaxRate) -\n        monthlyExpenses;\n      if (projection.length < remainingMortgagePayments) {\n        amount -= mortgagePayment;\n      }\n    }\n  } while (projection.length < numMonths);\n\n  return projection;\n};\n","import styled from \"styled-components\";\n\nconst Section = styled.div`\n  margin: ${props => (props.top ? \"0\" : \"3px\")};\n  padding: ${props =>\n    props.noPadding ? \"0\" : props.top ? \"15px 23px\" : \"15px 20px\"};\n  background-color: #fff;\n  border: 1px solid #e5e5e5;\n  border-width: ${props => (props.top ? \"0 0 1px\" : \"1px\")};\n  border-radius: 2px;\n`;\n\nexport default Section;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport omit from \"lodash/fp/omit\";\nimport ToggleWithLabel from \"./ToggleWithLabel\";\n\nconst AccountsSelectionForm = ({ accounts, value, onChange }) =>\n  accounts.map(({ id, name }) => (\n    <ToggleWithLabel\n      key={id}\n      checked={!!value[id]}\n      name={id}\n      onChange={evt => {\n        const { name, checked } = evt.target;\n\n        onChange(\n          checked\n            ? {\n                ...value,\n                [name]: true\n              }\n            : omit(name)(value)\n        );\n      }}\n      label={name}\n    />\n  ));\n\nAccountsSelectionForm.propTypes = {\n  accounts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired\n    })\n  ).isRequired,\n  value: PropTypes.objectOf(PropTypes.bool).isRequired,\n  onChange: PropTypes.func.isRequired\n};\n\nexport default AccountsSelectionForm;\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { MinorText, SecondaryText, StrongText } from \"./typeComponents\";\nimport Icon from \"./Icon\";\nimport EmptyText from \"./EmptyText\";\nimport Modal from \"./Modal\";\nimport AccountsSelectionForm from \"./AccountsSelectionForm\";\nimport { useFlagState } from \"../commonHooks\";\n\nconst SectionHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst SettingsInvestmentAccounts = ({ budget, investmentAccounts, onUpdateAccounts }) => {\n  const [\n    investmentModalOpen,\n    closeInvestmentModal,\n    openInvestmentModal\n  ] = useFlagState(false);\n\n  const potentialInvestmentAccounts = budget.accounts.filter(\n    account => account.type === \"otherAsset\" && !account.on_budget\n  );\n  const investmentAccountsList = budget.accounts.filter(\n    ({ id }) => investmentAccounts[id]\n  );\n\n  return (\n    <Fragment>\n      <SectionHeader>\n        <StrongText>Investment Accounts</StrongText>\n        <span onClick={openInvestmentModal}>\n          <Icon icon=\"pencil\" />\n        </span>\n      </SectionHeader>\n      {investmentAccountsList.length ? (\n        investmentAccountsList.map(({ id, name }) => (\n          <SecondaryText key={id}>{name}</SecondaryText>\n        ))\n      ) : (\n        <EmptyText>No accounts marked as investment</EmptyText>\n      )}\n      <MinorText style={{ marginTop: 10 }}>\n        Transfers to investment accounts are not counted as spending since it's\n        assumed it's for retirement or some other savings goal.\n      </MinorText>\n      <Modal\n        open={investmentModalOpen}\n        onClose={closeInvestmentModal}\n        title=\"Investment Accounts\"\n      >\n        <AccountsSelectionForm\n          accounts={potentialInvestmentAccounts}\n          value={investmentAccounts}\n          onChange={accountsObject => {\n            onUpdateAccounts({\n              type: \"investment\",\n              value: accountsObject\n            });\n          }}\n        />\n      </Modal>\n    </Fragment>\n  );\n};\n\nSettingsInvestmentAccounts.propTypes = {\n  budget: PropTypes.shape({\n    accounts: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        type: PropTypes.string.isRequired,\n        on_budget: PropTypes.bool.isRequired\n      })\n    ).isRequired\n  }).isRequired,\n  investmentAccounts: PropTypes.objectOf(PropTypes.bool).isRequired,\n  onUpdateAccounts: PropTypes.func.isRequired,\n};\n\nexport default SettingsInvestmentAccounts;\n","import React, { Fragment } from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { MinorText, SecondaryText, StrongText } from \"./typeComponents\";\nimport Icon from \"./Icon\";\nimport EmptyText from \"./EmptyText\";\nimport Modal from \"./Modal\";\nimport AccountsSelectionForm from \"./AccountsSelectionForm\";\nimport { useFlagState } from \"../commonHooks\";\n\nconst SectionHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst SettingsMortgageAccounts = ({\n  budget,\n  mortgageAccounts,\n  onUpdateAccounts\n}) => {\n  const [\n    mortgageModalOpen,\n    closeMortgageModal,\n    openMortgageModal\n  ] = useFlagState(false);\n\n  const potentialMortageAccounts = budget.accounts.filter(\n    account => account.type === \"otherLiability\" && !account.on_budget\n  );\n  const mortgageAccountList = budget.accounts.filter(\n    ({ id }) => mortgageAccounts[id]\n  );\n\n  return (\n    <Fragment>\n      <SectionHeader>\n        <StrongText>Mortgage Accounts</StrongText>\n        <span onClick={openMortgageModal}>\n          <Icon icon=\"pencil\" />\n        </span>\n      </SectionHeader>\n      {mortgageAccountList.length ? (\n        mortgageAccountList.map(({ id, name }) => (\n          <SecondaryText key={id}>{name}</SecondaryText>\n        ))\n      ) : (\n        <EmptyText>No accounts marked as mortgage</EmptyText>\n      )}\n      <MinorText style={{ marginTop: 10 }}>\n        Mortgage accounts are used in the retirement calculator since it's a\n        significant expense you won't have in your retirement presumably.\n      </MinorText>\n      <Modal\n        open={mortgageModalOpen}\n        onClose={closeMortgageModal}\n        title=\"Mortgage Account\"\n      >\n        <AccountsSelectionForm\n          accounts={potentialMortageAccounts}\n          value={mortgageAccounts}\n          onChange={accountsObject => {\n            onUpdateAccounts({\n              type: \"mortgage\",\n              value: accountsObject\n            });\n          }}\n        />\n      </Modal>\n    </Fragment>\n  );\n};\n\nSettingsMortgageAccounts.propTypes = {\n  budget: PropTypes.shape({\n    accounts: PropTypes.arrayOf(\n      PropTypes.shape({\n        type: PropTypes.string.isRequired,\n        on_budget: PropTypes.bool.isRequired,\n        id: PropTypes.string.isRequired\n      })\n    ).isRequired\n  }).isRequired,\n  mortgageAccounts: PropTypes.objectOf(PropTypes.bool).isRequired,\n  onUpdateAccounts: PropTypes.func.isRequired\n};\n\nexport default SettingsMortgageAccounts;\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Section from \"./Section\";\nimport PageLayout from \"./PageLayout\";\nimport SettingsInvestmentAccounts from \"./SettingsInvestmentAccounts\";\nimport SettingsMortgageAccounts from \"./SettingsMortgageAccounts\";\n\nconst Space = styled.div`\n  height: 20px;\n`;\n\nconst SettingsPage = ({\n  budget,\n  historyAction,\n  investmentAccounts,\n  location,\n  mortgageAccounts,\n  sidebarTrigger,\n  title,\n  onUpdateAccounts\n}) => {\n  return (\n    <PageLayout\n      historyAction={historyAction}\n      location={location}\n      sidebarTrigger={sidebarTrigger}\n      title={title}\n      content={\n        <Fragment>\n          <Section>\n            <SettingsInvestmentAccounts\n              budget={budget}\n              investmentAccounts={investmentAccounts}\n              onUpdateAccounts={onUpdateAccounts}\n            />\n            <Space />\n            <SettingsMortgageAccounts\n              budget={budget}\n              mortgageAccounts={mortgageAccounts}\n              onUpdateAccounts={onUpdateAccounts}\n            />\n          </Section>\n        </Fragment>\n      }\n    />\n  );\n};\n\nSettingsPage.propTypes = {\n  budget: PropTypes.shape({\n    accounts: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired\n      })\n    ).isRequired\n  }).isRequired,\n  historyAction: PropTypes.string.isRequired,\n  investmentAccounts: PropTypes.objectOf(PropTypes.bool).isRequired,\n  location: PropTypes.string.isRequired,\n  mortgageAccounts: PropTypes.objectOf(PropTypes.bool).isRequired,\n  sidebarTrigger: PropTypes.node.isRequired,\n  title: PropTypes.string.isRequired,\n  onUpdateAccounts: PropTypes.func.isRequired\n};\n\nexport default SettingsPage;\n","import React, { memo } from \"react\";\nimport { Switch, Route } from \"react-router\";\nimport moment from \"moment\";\nimport pages, { makeLink } from \"../pages\";\nimport CurrentMonthPage from \"./CurrentMonthPage\";\nimport IncomePage from \"./IncomePage\";\nimport CurrentMonthGroupPage from \"./CurrentMonthGroupPage\";\nimport CurrentMonthCategoryPage from \"./CurrentMonthCategoryPage\";\nimport GroupsPage from \"./GroupsPage\";\nimport GroupPage from \"./GroupPage\";\nimport { Link } from \"react-router-dom\";\nimport CategoriesState from \"./CategoriesState\";\nimport { notAny, simpleMemoize } from \"../dataUtils\";\nimport {\n  getFirstMonth,\n  getTransactionMonth,\n  isIncome,\n  isStartingBalanceOrReconciliation,\n  isTransfer\n} from \"../budgetUtils\";\nimport { useMonthExclusions } from \"../commonHooks\";\nimport CategoryPage from \"./CategoryPage\";\nimport CategoryPayeePage from \"./CategoryPayeePage\";\nimport IncomeVsExpensesPage from \"./IncomeVsExpensesPage\";\nimport NetWorthPage from \"./NetWorthPage\";\nimport InvestmentsPage from \"./InvestmentsPage\";\nimport ProjectionsPage from \"./ProjectionsPage\";\nimport SettingsPage from \"./SettingsPage\";\n\nconst getFilteredTransactions = simpleMemoize(\n  (budget, investmentAccounts, excludeFirstMonth, excludeLastMonth) => {\n    const firstMonth = getFirstMonth(budget);\n    const lastMonth = moment().format(\"YYYY-MM\");\n    return budget.transactions.filter(\n      notAny([\n        isStartingBalanceOrReconciliation(budget),\n        isTransfer(investmentAccounts),\n        transaction =>\n          excludeFirstMonth && getTransactionMonth(transaction) === firstMonth,\n        transaction =>\n          excludeLastMonth && getTransactionMonth(transaction) === lastMonth\n      ])\n    );\n  }\n);\n\nconst getFilteredSpendingTransactions = simpleMemoize(\n  (budget, investmentAccounts, excludeFirstMonth, excludeLastMonth) =>\n    getFilteredTransactions(\n      budget,\n      investmentAccounts,\n      excludeFirstMonth,\n      excludeLastMonth\n    ).filter(transaction => !isIncome(budget)(transaction))\n);\n\nconst PageContent = props => {\n  const {\n    budget,\n    currentMonth,\n    historyAction,\n    investmentAccounts,\n    location,\n    mortgageAccounts,\n    sidebarTrigger,\n    onUpdateAccounts\n  } = props;\n  const {\n    excludeFirstMonth,\n    excludeLastMonth,\n    months,\n    onSetExclusion\n  } = useMonthExclusions(budget);\n\n  if (!budget) {\n    return null;\n  }\n\n  return (\n    <Switch>\n      <Route\n        path={pages.currentMonth.path}\n        exact\n        render={() => (\n          <CurrentMonthPage\n            budget={budget}\n            currentMonth={currentMonth}\n            investmentAccounts={investmentAccounts}\n            historyAction={historyAction}\n            location={location}\n            sidebarTrigger={sidebarTrigger}\n            title={pages.currentMonth.title}\n          />\n        )}\n      />\n      <Route\n        path={pages.currentMonthGroup.path}\n        exact\n        render={({ match }) => (\n          <CurrentMonthGroupPage\n            budget={budget}\n            categoryGroupId={match.params.categoryGroupId}\n            currentMonth={currentMonth}\n            historyAction={historyAction}\n            location={location}\n            sidebarTrigger={sidebarTrigger}\n            title={pages.currentMonthGroup.title(match.params, budget)}\n          />\n        )}\n      />\n      <Route\n        path={pages.currentMonthCategory.path}\n        exact\n        render={({ match }) => (\n          <CurrentMonthCategoryPage\n            categoryId={match.params.categoryId}\n            budget={budget}\n            currentMonth={currentMonth}\n            categoryGroupId={match.params.categoryGroupId}\n            historyAction={historyAction}\n            location={location}\n            sidebarTrigger={sidebarTrigger}\n            title={pages.currentMonthCategory.title(match.params, budget)}\n          />\n        )}\n      />\n      <Route\n        path={pages.income.path}\n        exact\n        render={() => (\n          <IncomePage\n            investmentAccounts={investmentAccounts}\n            budget={budget}\n            historyAction={historyAction}\n            location={location}\n            sidebarTrigger={sidebarTrigger}\n            title={pages.income.title}\n          />\n        )}\n      />\n      <Route\n        path={pages.incomeVsExpenses.path}\n        exact\n        render={() => {\n          const filteredTransactions = getFilteredTransactions(\n            props.budget,\n            props.investmentAccounts,\n            excludeFirstMonth,\n            excludeLastMonth\n          );\n\n          return (\n            <IncomeVsExpensesPage\n              budget={budget}\n              excludeFirstMonth={excludeFirstMonth}\n              excludeLastMonth={excludeLastMonth}\n              investmentAccounts={investmentAccounts}\n              historyAction={historyAction}\n              location={location}\n              sidebarTrigger={sidebarTrigger}\n              title={pages.incomeVsExpenses.title}\n              transactions={filteredTransactions}\n              onSetExclusion={onSetExclusion}\n            />\n          );\n        }}\n      />\n      <Route\n        path={pages.netWorth.path}\n        exact\n        render={() => (\n          <NetWorthPage\n            budget={budget}\n            historyAction={historyAction}\n            investmentAccounts={investmentAccounts}\n            location={location}\n            mortgageAccounts={mortgageAccounts}\n            sidebarTrigger={sidebarTrigger}\n            title={pages.netWorth.title}\n          />\n        )}\n      />\n      <Route\n        path={pages.investments.path}\n        exact\n        render={() => (\n          <InvestmentsPage\n            budget={budget}\n            investmentAccounts={investmentAccounts}\n            title={pages.investments.title}\n            historyAction={historyAction}\n            location={location}\n            sidebarTrigger={sidebarTrigger}\n          />\n        )}\n      />\n      <Route\n        path={pages.projections.path}\n        exact\n        render={() => (\n          <ProjectionsPage\n            budget={budget}\n            investmentAccounts={investmentAccounts}\n            mortgageAccounts={mortgageAccounts}\n            title={pages.projections.title}\n            historyAction={historyAction}\n            location={location}\n            sidebarTrigger={sidebarTrigger}\n          />\n        )}\n      />\n      <Route\n        path={pages.settings.path}\n        exact\n        render={() => (\n          <SettingsPage\n            budget={budget}\n            historyAction={historyAction}\n            investmentAccounts={investmentAccounts}\n            location={location}\n            mortgageAccounts={mortgageAccounts}\n            sidebarTrigger={sidebarTrigger}\n            title={pages.settings.title}\n            onUpdateAccounts={onUpdateAccounts}\n          />\n        )}\n      />\n      <Route\n        path={pages.groups.path}\n        render={() => {\n          const filteredTransactions = getFilteredSpendingTransactions(\n            budget,\n            investmentAccounts,\n            excludeFirstMonth,\n            excludeLastMonth\n          );\n\n          return (\n            <CategoriesState action={historyAction} location={location}>\n              {({\n                selectedMonth,\n                selectedGroupId,\n                selectedCategoryId,\n                selectedPayeeId,\n                onSelectMonth,\n                onSelectGroup,\n                onSelectCategory,\n                onSelectPayee\n              }) => (\n                <Switch>\n                  <Route\n                    path={pages.groups.path}\n                    exact\n                    render={() => (\n                      <GroupsPage\n                        budget={budget}\n                        excludeFirstMonth={excludeFirstMonth}\n                        excludeLastMonth={excludeLastMonth}\n                        historyAction={historyAction}\n                        location={location}\n                        months={months}\n                        selectedGroupId={selectedGroupId}\n                        selectedMonth={selectedMonth}\n                        sidebarTrigger={sidebarTrigger}\n                        title={pages.groups.title}\n                        transactions={filteredTransactions}\n                        onSelectGroup={onSelectGroup}\n                        onSetExclusion={onSetExclusion}\n                        onSelectMonth={onSelectMonth}\n                      />\n                    )}\n                  />\n                  <Route\n                    path={pages.group.path}\n                    exact\n                    render={({ match }) => (\n                      <GroupPage\n                        budget={budget}\n                        categoryGroupId={match.params.categoryGroupId}\n                        excludeFirstMonth={excludeFirstMonth}\n                        excludeLastMonth={excludeLastMonth}\n                        historyAction={historyAction}\n                        location={location}\n                        months={months}\n                        selectedMonth={selectedMonth}\n                        selectedCategoryId={selectedCategoryId}\n                        sidebarTrigger={sidebarTrigger}\n                        title={pages.group.title(match.params, budget)}\n                        transactions={filteredTransactions}\n                        onSelectCategory={onSelectCategory}\n                        onSelectMonth={onSelectMonth}\n                        onSetExclusion={onSetExclusion}\n                      />\n                    )}\n                  />\n                  <Route\n                    path={pages.category.path}\n                    exact\n                    render={({ match }) => (\n                      <CategoryPage\n                        budget={budget}\n                        categoryId={match.params.categoryId}\n                        excludeFirstMonth={excludeFirstMonth}\n                        excludeLastMonth={excludeLastMonth}\n                        historyAction={historyAction}\n                        location={location}\n                        months={months}\n                        selectedMonth={selectedMonth}\n                        selectedPayeeId={selectedPayeeId}\n                        sidebarTrigger={sidebarTrigger}\n                        title={pages.category.title(match.params, budget)}\n                        transactions={filteredTransactions}\n                        onSetExclusion={onSetExclusion}\n                        onSelectMonth={onSelectMonth}\n                        onSelectPayee={onSelectPayee}\n                      />\n                    )}\n                  />\n                  <Route\n                    path={pages.categoryPayee.path}\n                    exact\n                    render={({ match }) => (\n                      <CategoryPayeePage\n                        budget={budget}\n                        categoryId={match.params.categoryId}\n                        excludeFirstMonth={excludeFirstMonth}\n                        excludeLastMonth={excludeLastMonth}\n                        historyAction={historyAction}\n                        location={location}\n                        months={months}\n                        payeeId={match.params.payeeId}\n                        selectedMonth={selectedMonth}\n                        sidebarTrigger={sidebarTrigger}\n                        title={pages.categoryPayee.title(match.params, budget)}\n                        transactions={filteredTransactions}\n                        onSetExclusion={onSetExclusion}\n                        onSelectMonth={onSelectMonth}\n                      />\n                    )}\n                  />\n                </Switch>\n              )}\n            </CategoriesState>\n          );\n        }}\n      />\n      <Route\n        render={() => (\n          <div style={{ padding: 20 }}>\n            <Link\n              to={makeLink(pages.currentMonth.path, {\n                budgetId: budget.id\n              })}\n            >\n              Return to {pages.currentMonth.title}\n            </Link>\n          </div>\n        )}\n      />\n    </Switch>\n  );\n};\n\nconst areEqual = (prevProps, nextProps) =>\n  [\n    \"budget\",\n    \"currentMonth\",\n    \"historyAction\",\n    \"investmentAccounts\",\n    \"location\",\n    \"mortgageAccounts\"\n  ].every(key => prevProps[key] === nextProps[key]);\n\nexport default memo(PageContent, areEqual);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Section from \"./Section\";\nimport { PageTitle, StrongText, SecondaryText } from \"./typeComponents\";\nimport { PrimaryButton } from \"./Button\";\n\nconst Unauthorized = ({ onAuthorize }) => (\n  <Section>\n    <PageTitle>Budget Reports</PageTitle>\n    <div style={{ marginBottom: 10 }}>Get various insights from your YNAB account.</div>\n    <PrimaryButton onClick={onAuthorize}>\n      Authorize YNAB\n    </PrimaryButton>\n    <StrongText style={{ marginTop: 30 }}>Privacy Policy</StrongText>\n    <SecondaryText>\n      This website does not store any information from you or your YNAB account\n      on it's server. All data retrieved from the YNAB API is stored only in\n      your browser's local storage and is never transmitted to any other location or\n      third-party.\n    </SecondaryText>\n  </Section>\n);\n\nUnauthorized.propTypes = {\n  onAuthorize: PropTypes.func.isRequired\n};\n\nexport default Unauthorized;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  padding: 10px 20px;\n`;\n\n\nconst ErrorPage = ({ message }) => (\n  <Container>\n    <h3>{message}</h3>\n    <div>\n      <Link to=\"/\">Home</Link>\n    </div>\n  </Container>\n);\n\nErrorPage.propTypes = {\n  message: PropTypes.string.isRequired\n};\n\nexport default ErrorPage;\n","import React from \"react\";\nimport ErrorPage from \"./ErrorPage\";\n\nconst NotFound = () => <ErrorPage message=\"Page not found\" />;\n\nexport default NotFound;\n","/* global Rollbar */\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport ErrorPage from \"./ErrorPage\";\n\nclass ErrorBoundary extends Component {\n  static propTypes = {\n    children: PropTypes.node.isRequired,\n    message: PropTypes.string\n  };\n\n  static defaultProps = {\n    message: \"Something went wrong\"\n  };\n\n  state = { hasError: false };\n\n  componentDidCatch(error) {\n    Rollbar.error(error);\n    this.setState({ hasError: true });\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return <ErrorPage message={this.props.message} />;\n    }\n\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport pages, { makeLink } from \"../pages\";\nimport { StrongText } from \"./typeComponents\";\nimport Section from \"./Section\";\nimport Loading from \"./Loading\";\n\nclass Budgets extends Component {\n  static propTypes = {\n    budgets: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired\n      })\n    ).isRequired,\n    budgetsLoaded: PropTypes.bool.isRequired,\n    onRequestBudgets: PropTypes.func.isRequired\n  };\n\n  componentDidMount() {\n    if (!this.props.budgetsLoaded) {\n      this.props.onRequestBudgets();\n    }\n  }\n\n  render() {\n    const { budgets, budgetsLoaded } = this.props;\n\n    if (!budgetsLoaded) {\n      return <Loading />;\n    }\n\n    return (\n      <Section>\n        <StrongText>Select a budget:</StrongText>\n        {budgets.map(({ id, name }) => (\n          <div key={id}>\n            <Link to={makeLink(pages.currentMonth.path, { budgetId: id })}>\n              {name}\n            </Link>\n          </div>\n        ))}\n      </Section>\n    );\n  }\n}\n\nexport default Budgets;\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Redirect, Route, Switch } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\nimport get from \"lodash/fp/get\";\r\nimport keyBy from \"lodash/fp/keyBy\";\r\nimport {\r\n  getBudgets,\r\n  getDefaultBudget,\r\n  getUpdatedBudget,\r\n  AUTHORIZE_URL,\r\n  setLastLocation\r\n} from \"../ynabRepo\";\r\nimport { setSetting, getSetting } from \"../uiRepo\";\r\nimport PageWrapper from \"./PageWrapper\";\r\nimport PageContent from \"./PageContent\";\r\nimport Unauthorized from \"./Unauthorized\";\r\nimport NotFound from \"./NotFound\";\r\nimport ErrorBoundary from \"./ErrorBoundary\";\r\nimport Budgets from \"./Budgets\";\r\nimport CurrencyContext from \"./CurrencyContext\";\r\n\r\nclass App extends Component {\r\n  static propTypes = {\r\n    hasToken: PropTypes.bool.isRequired\r\n  };\r\n\r\n  state = {\r\n    authorized: true,\r\n    budgetsLoaded: false,\r\n    budgetIds: [],\r\n    budgets: {},\r\n    defaultBudget: getDefaultBudget(),\r\n    budgetDetails: {},\r\n    currentMonth: moment().format(\"YYYY-MM\")\r\n  };\r\n\r\n  handleRequestBudgets = callback => {\r\n    getBudgets().then(({ budgets, default_budget }) => {\r\n      this.setState(\r\n        {\r\n          budgetsLoaded: true,\r\n          budgetIds: budgets.map(b => b.id),\r\n          budgets: keyBy(\"id\")(budgets),\r\n          defaultBudget: default_budget\r\n        },\r\n        callback\r\n      );\r\n    });\r\n  };\r\n\r\n  handleRequestBudget = id => {\r\n    getUpdatedBudget(id).then(({ budget, authorized }) => {\r\n      this.setState(state => ({\r\n        ...state,\r\n        authorized,\r\n        budgetDetails: {\r\n          ...state.budgetDetails,\r\n          [id]: budget\r\n        }\r\n      }));\r\n    });\r\n  };\r\n\r\n  handleAuthorize = () => {\r\n    setLastLocation();\r\n    window.location.replace(AUTHORIZE_URL);\r\n  };\r\n\r\n  render() {\r\n    const { hasToken } = this.props;\r\n    const {\r\n      authorized,\r\n      budgetsLoaded,\r\n      budgetIds,\r\n      budgets,\r\n      defaultBudget,\r\n      budgetDetails,\r\n      currentMonth\r\n    } = this.state;\r\n\r\n    if (!hasToken) {\r\n      return <Unauthorized onAuthorize={this.handleAuthorize} />;\r\n    }\r\n\r\n    return (\r\n      <ErrorBoundary>\r\n        <Switch>\r\n          <Route\r\n            path=\"/\"\r\n            exact\r\n            render={() => (\r\n              defaultBudget && defaultBudget.id\r\n                ? (<Redirect to={`/budgets/${defaultBudget.id}/current`} />)\r\n                : (<Redirect to={`/budgets`} />)\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/budgets\"\r\n            exact\r\n            render={() => (\r\n              <Budgets\r\n                budgets={budgetIds.map(id => budgets[id])}\r\n                budgetsLoaded={budgetsLoaded}\r\n                onRequestBudgets={this.handleRequestBudgets}\r\n              />\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/budgets/:budgetId\"\r\n            render={({ match, history, location }) => {\r\n              const { budgetId } = match.params;\r\n              const budget = budgetDetails[budgetId];\r\n\r\n              return (\r\n                <PageWrapper\r\n                  authorized={authorized}\r\n                  budgetId={budgetId}\r\n                  budgetLoaded={!!budget}\r\n                  location={location.pathname}\r\n                  onAuthorize={this.handleAuthorize}\r\n                  onRequestBudget={this.handleRequestBudget}\r\n                >\r\n                  {({ sidebarTrigger }) => (\r\n                    <CurrencyContext.Provider\r\n                      value={get(\"currencyFormat\")(budget)}\r\n                    >\r\n                      <PageContent\r\n                        sidebarTrigger={sidebarTrigger}\r\n                        historyAction={history.action}\r\n                        location={location.pathname}\r\n                        budget={budget}\r\n                        currentMonth={currentMonth}\r\n                        investmentAccounts={getSetting(\r\n                          \"investmentAccounts\",\r\n                          budgetId\r\n                        )}\r\n                        mortgageAccounts={getSetting(\r\n                          \"mortgageAccounts\",\r\n                          budgetId\r\n                        )}\r\n                        onUpdateAccounts={({ type, value }) => {\r\n                          if (type === \"investment\") {\r\n                            setSetting(\"investmentAccounts\", budgetId, value);\r\n                          }\r\n                          if (type === \"mortgage\") {\r\n                            setSetting(\"mortgageAccounts\", budgetId, value);\r\n                          }\r\n                          this.forceUpdate();\r\n                        }}\r\n                      />\r\n                    </CurrencyContext.Provider>\r\n                  )}\r\n                </PageWrapper>\r\n              );\r\n            }}\r\n          />\r\n          <Route component={NotFound} />\r\n        </Switch>\r\n      </ErrorBoundary>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter } from \"react-router-dom\";\nimport { getAuthorizeToken, initializeYnabApi } from \"./ynabRepo\";\nimport App from \"./components/App\";\n\nconst token = getAuthorizeToken();\n\nif (token) {\n  initializeYnabApi(token);\n}\n\nReactDOM.render(\n  <HashRouter>\n    <App hasToken={!!token} />\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}